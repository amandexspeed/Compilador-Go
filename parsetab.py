
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FOR FUNC GREATER ID IF IMPORT INCREMENT LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STRING TIMES TRUEprograma : pacote NEWLINE importacao funcoes_codigofuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao\n                      | codigo delimitador funcoes_codigo\n                      | codigoempty :pacote : PACKAGE IDimportacao : IMPORT ID NEWLINE importacao\n                  | emptyfuncao : FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACEtipo_retorno : ID\n                    | emptycodigo : lista_estruturaslista_estruturas : lista_estruturas estruturaBase\n                        | emptyestruturaBase : estruturas delimitador\n                     | NEWLINE estruturas delimitadorestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unariodelimitador : NEWLINE\n                   | SEMICOLON\n                   | SEMICOLON NEWLINEexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3 expressao_n3 : soma \n                     | sub \n                     | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando unario : negation\n               | incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementonegation : EXCLAMATION operandoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : identificador\n                | NUMBER \n                | STRING \n                | TRUE\n                | FALSE\n                | expParentesesidentificador : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valores\n                  | expressao_matematica_reduzidaexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaodeclaracao : lista_identificadores COLON EQUALS lista_valoreslista_parametros : lista_identificadores\n                        | emptylista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,4,6,8,9,10,11,13,14,16,17,18,19,21,49,50,51,52,54,102,107,177,],[0,-6,-6,-9,-1,-3,-5,-13,-15,-6,-23,-24,-6,-14,-6,-2,-25,-4,-16,-8,-17,-10,]),'NEWLINE':([2,4,5,6,8,10,11,13,14,15,16,17,18,19,21,22,24,25,26,27,28,30,32,33,34,35,36,37,38,39,41,42,43,44,49,51,54,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,95,98,99,100,101,102,107,108,109,112,130,134,139,141,143,144,145,146,147,148,149,150,151,152,153,156,160,161,162,163,164,165,166,168,169,170,174,175,176,177,180,181,],[4,-6,-7,-6,-9,17,17,23,-15,49,-6,-23,51,-6,-14,17,-18,-19,-20,-21,-22,-87,-76,-77,-78,-58,-59,-60,-61,-62,-88,-89,-90,-91,-6,-25,-16,17,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-6,-63,-74,-65,-67,-8,-17,-86,-102,-6,-6,-96,-40,-41,-39,-47,-48,-53,-55,-54,-75,-92,-93,-94,-95,-80,-101,-83,-29,-30,-38,-42,-43,-81,-6,-82,-6,-85,-6,-10,-84,-79,]),'ID':([3,4,6,7,8,12,13,14,16,17,18,19,21,23,31,45,46,47,48,49,51,53,54,56,58,86,95,102,107,110,112,116,117,118,119,120,121,122,123,125,126,127,128,129,130,132,133,136,137,138,140,142,167,169,174,176,],[5,-6,-6,15,-9,20,40,-15,-6,-23,-24,-6,-14,40,85,97,99,100,101,-6,-25,103,-16,85,111,85,-6,-8,-17,85,-6,85,85,85,85,85,85,85,85,85,85,85,85,85,-6,157,85,85,85,85,85,85,85,-6,-6,-6,]),'IMPORT':([4,49,],[7,7,]),'FUNC':([4,6,8,16,17,18,19,49,51,102,],[-6,12,-9,12,-23,-24,12,-6,-25,-8,]),'SEMICOLON':([4,6,8,10,11,13,14,16,17,18,19,21,22,24,25,26,27,28,30,32,33,34,35,36,37,38,39,41,42,43,44,49,51,54,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,93,98,99,100,101,102,107,108,109,134,139,141,143,144,145,146,147,148,149,150,151,152,153,154,156,160,161,162,163,164,165,166,168,170,175,177,180,181,],[-6,-6,-9,18,18,-13,-15,-6,-23,-24,-6,-14,18,-18,-19,-20,-21,-22,-87,-76,-77,-78,-58,-59,-60,-61,-62,-88,-89,-90,-91,-6,-25,-16,18,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,129,-63,-74,-65,-67,-8,-17,-86,-102,-96,-40,-41,-39,-47,-48,-53,-55,-54,-75,-92,-93,-94,-95,167,-80,-101,-83,-29,-30,-38,-42,-43,-81,-82,-85,-10,-84,-79,]),'IF':([4,6,8,13,14,16,17,18,19,21,23,49,51,54,95,102,107,112,130,169,171,174,176,],[-6,-6,-9,31,-15,-6,-23,-24,-6,-14,31,-6,-25,-16,-6,-8,-17,-6,-6,-6,31,-6,-6,]),'FOR':([4,6,8,13,14,16,17,18,19,21,23,49,51,54,95,102,107,112,130,169,174,176,],[-6,-6,-9,45,-15,-6,-23,-24,-6,-14,45,-6,-25,-16,-6,-8,-17,-6,-6,-6,-6,-6,]),'EXCLAMATION':([4,6,8,13,14,16,17,18,19,21,23,31,45,49,51,54,56,86,95,102,107,110,112,116,117,118,119,120,121,122,123,125,126,127,128,129,130,133,136,137,138,140,142,167,169,174,176,],[-6,-6,-9,46,-15,-6,-23,-24,-6,-14,46,46,46,-6,-25,-16,46,46,-6,-8,-17,46,-6,46,46,46,46,46,46,46,46,46,46,46,46,46,-6,46,46,46,46,46,46,46,-6,-6,-6,]),'INCREMENT':([4,6,8,13,14,16,17,18,19,21,23,31,40,45,49,51,54,56,85,86,95,97,102,107,110,112,116,117,118,119,120,121,122,123,125,126,127,128,129,130,133,136,137,138,140,142,167,169,174,176,],[-6,-6,-9,47,-15,-6,-23,-24,-6,-14,47,47,87,47,-6,-25,-16,47,87,47,-6,87,-8,-17,47,-6,47,47,47,47,47,47,47,47,47,47,47,47,47,-6,47,47,47,47,47,47,47,-6,-6,-6,]),'DECREMENT':([4,6,8,13,14,16,17,18,19,21,23,31,40,45,49,51,54,56,85,86,95,97,102,107,110,112,116,117,118,119,120,121,122,123,125,126,127,128,129,130,133,136,137,138,140,142,167,169,174,176,],[-6,-6,-9,48,-15,-6,-23,-24,-6,-14,48,48,88,48,-6,-25,-16,48,88,48,-6,88,-8,-17,48,-6,48,48,48,48,48,48,48,48,48,48,48,48,48,-6,48,48,48,48,48,48,48,-6,-6,-6,]),'END_BRACE':([13,14,17,18,21,51,54,95,107,112,130,131,135,155,169,173,174,176,178,179,],[-13,-15,-23,-24,-14,-25,-16,-6,-17,-6,-6,156,161,168,-6,177,-6,-6,180,181,]),'BEG_PAREN':([20,31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[53,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'EQUALS':([29,35,36,37,38,39,40,57,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,97,98,99,100,101,111,115,116,117,139,141,143,144,145,146,147,148,149,162,163,164,165,166,],[56,-58,-59,-60,-61,-62,-100,110,115,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,125,126,127,128,-74,-63,-74,-65,-67,-99,138,140,142,-40,-41,-39,-47,-48,-53,-55,-54,-75,115,115,-38,-42,-43,]),'COLON':([29,40,96,97,111,],[57,-100,57,-100,-99,]),'COMMA':([29,35,36,37,38,39,40,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,96,97,98,99,100,101,103,105,108,109,111,134,139,141,143,144,145,146,147,148,149,160,162,163,164,165,166,],[58,-58,-59,-60,-61,-62,-100,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,58,-100,-63,-74,-65,-67,-100,58,133,-102,-99,133,-40,-41,-39,-47,-48,-53,-55,-54,-75,-101,-29,-30,-38,-42,-43,]),'NUMBER':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'STRING':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'TRUE':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'FALSE':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'TIMES':([35,36,37,38,39,40,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,144,145,146,147,148,149,],[-58,-59,-60,-61,-62,91,121,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,121,121,-53,-55,-54,-75,]),'DIVISION':([35,36,37,38,39,40,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,144,145,146,147,148,149,],[-58,-59,-60,-61,-62,92,122,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,122,122,-53,-55,-54,-75,]),'MOD':([35,36,37,38,39,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,144,145,146,147,148,149,],[-58,-59,-60,-61,-62,123,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,123,123,-53,-55,-54,-75,]),'DIFFERENT':([35,36,37,38,39,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,144,145,146,147,148,149,],[-58,-59,-60,-61,-62,118,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,-47,-48,-53,-55,-54,-75,]),'PLUS':([35,36,37,38,39,40,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,139,141,143,144,145,146,147,148,149,164,165,166,],[-58,-59,-60,-61,-62,89,119,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,119,119,119,-47,-48,-53,-55,-54,-75,119,119,119,]),'MINUS':([35,36,37,38,39,40,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,139,141,143,144,145,146,147,148,149,164,165,166,],[-58,-59,-60,-61,-62,90,120,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,120,120,120,-47,-48,-53,-55,-54,-75,120,120,120,]),'GREATER':([35,36,37,38,39,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,139,141,143,144,145,146,147,148,149,162,163,164,165,166,],[-58,-59,-60,-61,-62,116,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,-40,-41,-39,-47,-48,-53,-55,-54,-75,116,116,-38,-42,-43,]),'LESS':([35,36,37,38,39,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,97,98,99,100,101,139,141,143,144,145,146,147,148,149,162,163,164,165,166,],[-58,-59,-60,-61,-62,117,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-74,-63,-74,-65,-67,-40,-41,-39,-47,-48,-53,-55,-54,-75,117,117,-38,-42,-43,]),'BEG_BRACE':([35,36,37,38,39,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,94,97,98,99,100,101,132,139,141,143,144,145,146,147,148,149,157,158,159,162,163,164,165,166,171,172,],[-58,-59,-60,-61,-62,95,112,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,130,-74,-63,-74,-65,-67,-6,-40,-41,-39,-47,-48,-53,-55,-54,-75,-11,169,-12,-29,-30,-38,-42,-43,174,176,]),'AMPERSAND':([35,36,37,38,39,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,94,97,98,99,100,101,109,113,124,139,141,143,144,145,146,147,148,149,150,151,152,153,154,160,162,163,164,165,166,172,],[-58,-59,-60,-61,-62,113,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,113,-74,-63,-74,-65,-67,113,136,113,-40,-41,-39,-47,-48,-53,-55,-54,-75,113,113,113,113,113,113,-29,-30,-38,-42,-43,113,]),'PIPE':([35,36,37,38,39,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,94,97,98,99,100,101,109,114,124,139,141,143,144,145,146,147,148,149,150,151,152,153,154,160,162,163,164,165,166,172,],[-58,-59,-60,-61,-62,114,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,114,-74,-63,-74,-65,-67,114,137,114,-40,-41,-39,-47,-48,-53,-55,-54,-75,114,114,114,114,114,114,-29,-30,-38,-42,-43,114,]),'END_PAREN':([35,36,37,38,39,53,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,98,99,100,101,103,104,105,106,111,124,139,141,143,144,145,146,147,148,149,162,163,164,165,166,],[-58,-59,-60,-61,-62,-6,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-64,-66,-63,-74,-65,-67,-100,132,-97,-98,-99,149,-40,-41,-39,-47,-48,-53,-55,-54,-75,-29,-30,-38,-42,-43,]),'ELSE':([161,],[171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([4,49,],[6,102,]),'empty':([4,6,16,19,49,53,95,112,130,132,169,174,176,],[8,14,14,14,8,106,14,14,14,159,14,14,14,]),'funcoes_codigo':([6,16,19,],[9,50,52,]),'funcao':([6,16,19,],[10,10,10,]),'codigo':([6,16,19,95,112,130,169,174,176,],[11,11,11,131,135,155,173,178,179,]),'lista_estruturas':([6,16,19,95,112,130,169,174,176,],[13,13,13,13,13,13,13,13,13,]),'delimitador':([10,11,22,55,],[16,19,54,107,]),'estruturaBase':([13,],[21,]),'estruturas':([13,23,],[22,55,]),'atribuicao':([13,23,],[24,24,]),'declaracao':([13,23,45,],[25,25,93,]),'estrutura_if':([13,23,171,],[26,26,175,]),'estrutura_for':([13,23,],[27,27,]),'unario':([13,23,31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[28,28,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'lista_identificadores':([13,23,45,53,],[29,29,96,105,]),'expressao_matematica_reduzida':([13,23,],[30,30,]),'for_CLIKE':([13,23,],[32,32,]),'for_infinito':([13,23,],[33,33,]),'for_while':([13,23,],[34,34,]),'negation':([13,23,31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'incremento':([13,23,31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'decremento':([13,23,31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'pre_incremento':([13,23,31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'pre_decremento':([13,23,31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'assign_plus':([13,23,],[41,41,]),'assign_minus':([13,23,],[42,42,]),'assign_mult':([13,23,],[43,43,]),'assign_div':([13,23,],[44,44,]),'expressao':([31,45,56,86,110,125,126,127,128,129,133,167,],[59,94,109,124,109,150,151,152,153,154,160,172,]),'and':([31,45,56,86,110,125,126,127,128,129,133,167,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'or':([31,45,56,86,110,125,126,127,128,129,133,167,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'expressao_n2':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[62,62,62,62,62,62,62,62,62,62,62,162,163,62,]),'equals':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'different':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'greater':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'less':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'greater_or_equal':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'less_or_equal':([31,45,56,86,110,125,126,127,128,129,133,136,137,167,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'expressao_n3':([31,45,56,86,110,116,117,118,125,126,127,128,129,133,136,137,138,140,142,167,],[69,69,69,69,69,139,141,143,69,69,69,69,69,69,69,69,164,165,166,69,]),'soma':([31,45,56,86,110,116,117,118,125,126,127,128,129,133,136,137,138,140,142,167,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'sub':([31,45,56,86,110,116,117,118,125,126,127,128,129,133,136,137,138,140,142,167,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'expressao_n4':([31,45,56,86,110,116,117,118,119,120,125,126,127,128,129,133,136,137,138,140,142,167,],[72,72,72,72,72,72,72,72,144,145,72,72,72,72,72,72,72,72,72,72,72,72,]),'mult':([31,45,56,86,110,116,117,118,119,120,125,126,127,128,129,133,136,137,138,140,142,167,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'div':([31,45,56,86,110,116,117,118,119,120,125,126,127,128,129,133,136,137,138,140,142,167,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'mod':([31,45,56,86,110,116,117,118,119,120,125,126,127,128,129,133,136,137,138,140,142,167,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expressao_n5':([31,45,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[76,76,76,76,76,76,76,76,76,76,146,147,148,76,76,76,76,76,76,76,76,76,76,76,76,]),'operando':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[78,78,98,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'identificador':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'expParenteses':([31,45,46,56,86,110,116,117,118,119,120,121,122,123,125,126,127,128,129,133,136,137,138,140,142,167,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'lista_parametros':([53,],[104,]),'lista_valores':([56,110,],[108,134,]),'tipo_retorno':([132,],[158,]),'estrutura_else':([161,],[170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote NEWLINE importacao funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',11),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',15),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',16),
  ('funcoes_codigo -> codigo delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',17),
  ('funcoes_codigo -> codigo','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',18),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',22),
  ('pacote -> PACKAGE ID','pacote',2,'p_pacote','analiseSintatica.py',26),
  ('importacao -> IMPORT ID NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',30),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',31),
  ('funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',35),
  ('tipo_retorno -> ID','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',41),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',42),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',47),
  ('lista_estruturas -> lista_estruturas estruturaBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',52),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',53),
  ('estruturaBase -> estruturas delimitador','estruturaBase',2,'p_estruturaBase','analiseSintatica.py',63),
  ('estruturaBase -> NEWLINE estruturas delimitador','estruturaBase',3,'p_estruturaBase','analiseSintatica.py',64),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',71),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',72),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',73),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',74),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',75),
  ('delimitador -> NEWLINE','delimitador',1,'p_delimitador','analiseSintatica.py',80),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',81),
  ('delimitador -> SEMICOLON NEWLINE','delimitador',2,'p_delimitador','analiseSintatica.py',82),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',85),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',86),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',87),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',91),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',95),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',99),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',100),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',101),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',102),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',103),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',104),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',105),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',109),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',113),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',117),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',121),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',125),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',129),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',133),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',134),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',135),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',141),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',145),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',149),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',150),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',151),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',152),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',158),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',162),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',166),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',170),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',171),
  ('unario -> negation','unario',1,'p_unario','analiseSintatica.py',175),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',176),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',177),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',178),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',179),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',183),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',187),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',191),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',195),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',199),
  ('operando -> identificador','operando',1,'p_operando','analiseSintatica.py',204),
  ('operando -> NUMBER','operando',1,'p_operando','analiseSintatica.py',205),
  ('operando -> STRING','operando',1,'p_operando','analiseSintatica.py',206),
  ('operando -> TRUE','operando',1,'p_operando','analiseSintatica.py',207),
  ('operando -> FALSE','operando',1,'p_operando','analiseSintatica.py',208),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',209),
  ('identificador -> ID','identificador',1,'p_identificador','analiseSintatica.py',213),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',220),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',224),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',225),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',226),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',230),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',234),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',238),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',243),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',244),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',254),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',255),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',265),
  ('atribuicao -> expressao_matematica_reduzida','atribuicao',1,'p_atribuicao','analiseSintatica.py',266),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',273),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',274),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',275),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',276),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',280),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',284),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',288),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',292),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores','declaracao',4,'p_declaracao','analiseSintatica.py',296),
  ('lista_parametros -> lista_identificadores','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',303),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',304),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',311),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',312),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',319),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',320),
]
