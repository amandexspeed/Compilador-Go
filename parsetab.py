
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FLOAT32 FLOAT64 FOR FUNC GREATER ID IF IMPORT INCREMENT INT INT16 INT32 INT64 INT8 LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STR STRING TIMES TRUE VARprograma : pacote importacao declaracaoGlobal funcoes_codigo\n                | pacote importacao funcoes_codigoempty :pacote : PACKAGE ID delimitador \n              | PACKAGE ID NEWLINEimportacao : IMPORT STRING NEWLINE importacao\n                  | IMPORT STRING delimitador importacao\n                  | emptytipo : ID\n            | STR\n            | inteiro\n            | floatinteiro : INT\n               | INT8 \n               | INT16\n               | INT32\n               | INT64float : FLOAT32\n             | FLOAT64tipo_nullavel : tipo\n                     | emptydeclaracaoGlobal : declaracaoExplicita\n                        | declaracaoExplicita NEWLINEdeclaracaoExplicita :  declaracaoExplicitaSimples\n                            | declaracaoExplicitaEmLista\n                            | declaracaoExplicitaEmListaEspacadadeclaracaoExplicitaSimples : VAR tiposDeclaracoesExplicitastiposDeclaracoesExplicitas : declaracaoExplicitaSemValor\n                                  | declaracaoExplicitaComValordeclaracaoExplicitaSemValor : ID tipo declaracaoExplicitaComValor : ID tipo EQUALS constantedeclaracaoExplicitaEmLista : VAR BEG_PAREN listaExplicita END_PARENdeclaracaoExplicitaEmListaEspacada : VAR BEG_PAREN NEWLINE listaExplicita END_PARENlistaExplicita : tiposDeclaracoesExplicitas\n                   | listaExplicitaRecursiva\n                   | tiposDeclaracoesExplicitas NEWLINElistaExplicitaRecursiva : tiposDeclaracoesExplicitas NEWLINE listaExplicitafuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao NEWLINE funcoes_codigo\n                      | funcao\n                      | emptyfuncao : FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACEcodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas SEMICOLON\n                      | estruturas NEWLINE\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unario\n                  | chamadaFuncao\n                  | expressao_matematica_reduzidadelimitador  : SEMICOLON\n                    | SEMICOLON NEWLINEexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3expressao_n3 : soma \n                    | sub \n                    | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando\n                    | negationnegation : EXCLAMATION operando unario : incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : constante\n                | chamadaFuncao\n                | expParentesesconstante : ID\n                 | NUMBER\n                 | STRING\n                 | TRUE\n                 | FALSEexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaoatribuicao : lista_identificadores EQUALS lista_valoresdeclaracao : declaracaoCurta\n                  | declaracaoExplicitadeclaracaoCurta : lista_identificadores COLON EQUALS lista_valoreslista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressaochamadaFuncao : ID BEG_PAREN parametros END_PARENparametros : parametro_simples\n                    | parametros_tipo_unico\n                    | parametros_varios_tipos\n                    | emptyparametro_simples : ID tipoparametros_tipo_unico : ID COMMA lista_parametros_tipo_unicolista_parametros_tipo_unico : ID COMMA lista_parametros_tipo_unico \n                                   | ID tipoparametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tiposlista_parametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tipos    \n                                     | ID tipo'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,2,4,6,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,27,29,30,32,33,34,35,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,69,71,72,73,74,75,76,94,],[0,-3,-3,-8,-3,-2,-22,-40,-41,-24,-25,-26,-4,-5,-56,-1,-23,-3,-3,-27,-28,-29,-3,-3,-57,-38,-39,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-7,-32,-33,-103,-31,-104,-105,-106,-107,-42,]),'IMPORT':([2,19,20,21,32,33,34,],[5,-4,-5,-56,5,5,-57,]),'FUNC':([2,4,6,8,10,13,14,15,19,20,21,23,24,25,27,29,30,32,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,69,71,72,73,74,75,76,],[-3,16,-8,16,-22,-24,-25,-26,-4,-5,-56,-23,16,16,-27,-28,-29,-3,-3,-57,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-7,-32,-33,-103,-31,-104,-105,-106,-107,]),'VAR':([2,4,6,19,20,21,32,33,34,54,55,87,91,92,95,97,121,125,126,166,175,196,235,237,],[-3,17,-8,-4,-5,-56,-3,-3,-57,-6,-7,-3,17,-45,-44,-48,17,-46,-47,-3,-3,-3,-3,-3,]),'ID':([3,16,17,28,31,37,39,56,64,65,67,68,77,78,83,85,87,91,92,93,95,97,108,121,122,123,125,126,127,128,154,156,157,166,174,175,179,180,181,182,183,184,185,186,191,192,193,194,195,196,198,201,202,203,205,207,230,235,237,],[7,26,31,31,42,56,31,42,31,71,78,42,83,42,42,78,-3,116,-45,83,-44,-48,155,168,169,170,-46,-47,155,173,188,155,56,-3,155,-3,155,155,155,155,155,155,155,155,155,155,155,155,155,-3,155,155,155,155,155,155,155,-3,-3,]),'STRING':([5,65,108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[18,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'NEWLINE':([7,10,11,13,14,15,18,21,27,28,29,30,40,42,43,44,45,46,47,48,49,50,51,52,53,62,69,71,72,73,74,75,76,87,91,92,94,95,96,97,98,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,117,118,119,120,125,126,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,166,169,170,171,172,175,187,188,196,199,204,206,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,229,231,232,235,236,237,240,241,],[20,23,25,-24,-25,-26,32,34,-27,39,-28,-29,64,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-33,-103,-31,-104,-105,-106,-107,-3,97,-45,-42,-44,126,-48,-49,-50,-51,-52,-53,-54,-55,-128,-129,-109,-110,-111,-92,-93,-94,-95,-119,-120,-121,-122,-46,-47,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-3,-97,-99,-127,-134,-3,-91,-103,-3,-130,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,-123,-124,-125,-126,-113,-133,-116,-61,-62,-70,-74,-75,-114,-115,-3,-118,-3,-117,-112,]),'SEMICOLON':([7,11,13,14,15,18,27,29,30,42,43,44,45,46,47,48,49,50,51,52,53,62,69,71,72,73,74,75,76,94,96,98,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,117,118,119,120,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,164,169,170,171,172,187,188,199,204,206,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,229,231,232,236,240,241,],[21,21,-24,-25,-26,21,-27,-28,-29,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-33,-103,-31,-104,-105,-106,-107,-42,125,-49,-50,-51,-52,-53,-54,-55,-128,-129,-109,-110,-111,-92,-93,-94,-95,-119,-120,-121,-122,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,195,-97,-99,-127,-134,-91,-103,-130,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,-123,-124,-125,-126,230,-113,-133,-116,-61,-62,-70,-74,-75,-114,-115,-118,-117,-112,]),'BEG_PAREN':([17,26,108,116,121,127,154,155,156,168,174,179,180,181,182,183,184,185,186,188,191,192,193,194,195,198,201,202,203,205,207,230,],[28,37,156,157,156,156,156,157,156,157,156,156,156,156,156,156,156,156,156,157,156,156,156,156,156,156,156,156,156,156,156,156,]),'END_PAREN':([29,30,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,63,64,66,70,71,72,73,74,75,76,79,84,86,88,89,112,113,114,115,124,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,157,158,159,169,170,187,188,189,190,204,206,208,209,210,211,212,213,214,215,225,226,227,228,229,],[-28,-29,-3,62,-34,-35,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,68,-136,-137,-138,-139,69,-36,-140,-37,-103,-31,-104,-105,-106,-107,-141,-144,-143,-146,-142,-92,-93,-94,-95,-145,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-3,-96,-98,-97,-99,-91,-103,214,215,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,-61,-62,-70,-74,-75,]),'STR':([31,56,68,78,83,],[44,44,44,44,44,]),'INT':([31,56,68,78,83,],[47,47,47,47,47,]),'INT8':([31,56,68,78,83,],[48,48,48,48,48,]),'INT16':([31,56,68,78,83,],[49,49,49,49,49,]),'INT32':([31,56,68,78,83,],[50,50,50,50,50,]),'INT64':([31,56,68,78,83,],[51,51,51,51,51,]),'FLOAT32':([31,56,68,78,83,],[52,52,52,52,52,]),'FLOAT64':([31,56,68,78,83,],[53,53,53,53,53,]),'EQUALS':([42,43,44,45,46,47,48,49,50,51,52,53,73,74,75,76,105,112,113,114,115,116,129,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,160,161,162,163,168,169,170,173,178,179,180,187,188,204,206,208,209,210,211,212,213,214,215,225,226,227,228,229,],[-9,65,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-104,-105,-106,-107,127,-92,-93,-94,-95,-132,174,178,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,191,192,193,194,-103,-97,-99,-131,203,205,207,-91,-103,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,178,178,-70,-74,-75,]),'COMMA':([42,44,45,46,47,48,49,50,51,52,53,56,66,73,74,75,76,78,88,105,112,113,114,115,116,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,167,168,169,170,171,172,173,187,188,199,204,206,208,209,210,211,212,213,214,215,223,225,226,227,228,229,],[-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,67,77,-104,-105,-106,-107,85,93,128,-92,-93,-94,-95,-132,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,128,-132,-97,-99,198,-134,-131,-91,-103,198,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,-133,-61,-62,-70,-74,-75,]),'BEG_BRACE':([42,44,45,46,47,48,49,50,51,52,53,68,73,74,75,76,80,81,82,112,113,114,115,121,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,165,168,169,170,187,188,204,206,208,209,210,211,212,213,214,215,225,226,227,228,229,233,234,],[-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-104,-105,-106,-107,87,-20,-21,-92,-93,-94,-95,166,175,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,196,-103,-97,-99,-91,-103,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,-61,-62,-70,-74,-75,235,237,]),'NUMBER':([65,108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'TRUE':([65,108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'FALSE':([65,108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TIMES':([73,74,75,76,112,113,114,115,116,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,209,210,211,212,213,214,215,],[-104,-105,-106,-107,-92,-93,-94,-95,162,184,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,184,184,-85,-87,-86,-108,-135,]),'DIVISION':([73,74,75,76,112,113,114,115,116,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,209,210,211,212,213,214,215,],[-104,-105,-106,-107,-92,-93,-94,-95,163,185,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,185,185,-85,-87,-86,-108,-135,]),'MOD':([73,74,75,76,112,113,114,115,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,209,210,211,212,213,214,215,],[-104,-105,-106,-107,-92,-93,-94,-95,186,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,186,186,-85,-87,-86,-108,-135,]),'DIFFERENT':([73,74,75,76,112,113,114,115,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,209,210,211,212,213,214,215,],[-104,-105,-106,-107,-92,-93,-94,-95,181,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,-79,-80,-85,-87,-86,-108,-135,]),'PLUS':([73,74,75,76,112,113,114,115,116,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,204,206,208,209,210,211,212,213,214,215,227,228,229,],[-104,-105,-106,-107,-92,-93,-94,-95,160,182,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,182,182,182,-79,-80,-85,-87,-86,-108,-135,182,182,182,]),'MINUS':([73,74,75,76,112,113,114,115,116,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,204,206,208,209,210,211,212,213,214,215,227,228,229,],[-104,-105,-106,-107,-92,-93,-94,-95,161,183,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,183,183,183,-79,-80,-85,-87,-86,-108,-135,183,183,183,]),'GREATER':([73,74,75,76,112,113,114,115,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,204,206,208,209,210,211,212,213,214,215,225,226,227,228,229,],[-104,-105,-106,-107,-92,-93,-94,-95,179,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,179,179,-70,-74,-75,]),'LESS':([73,74,75,76,112,113,114,115,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,168,169,170,187,188,204,206,208,209,210,211,212,213,214,215,225,226,227,228,229,],[-104,-105,-106,-107,-92,-93,-94,-95,180,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,-103,-97,-99,-91,-103,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,180,180,-70,-74,-75,]),'AMPERSAND':([73,74,75,76,112,113,114,115,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,165,168,169,170,172,176,187,188,189,204,206,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,226,227,228,229,234,],[-104,-105,-106,-107,-92,-93,-94,-95,176,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,176,-103,-97,-99,176,201,-91,-103,176,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,176,176,176,176,176,176,-61,-62,-70,-74,-75,176,]),'PIPE':([73,74,75,76,112,113,114,115,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,158,159,165,168,169,170,172,177,187,188,189,204,206,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,226,227,228,229,234,],[-104,-105,-106,-107,-92,-93,-94,-95,177,-58,-59,-60,-63,-64,-65,-66,-67,-68,-69,-76,-77,-78,-81,-82,-83,-84,-88,-89,-90,-100,-101,-102,-103,-96,-98,177,-103,-97,-99,177,202,-91,-103,177,-72,-73,-71,-79,-80,-85,-87,-86,-108,-135,177,177,177,177,177,177,-61,-62,-70,-74,-75,177,]),'IF':([87,91,92,95,97,125,126,166,175,196,233,235,237,],[-3,108,-45,-44,-48,-46,-47,-3,-3,-3,108,-3,-3,]),'FOR':([87,91,92,95,97,125,126,166,175,196,235,237,],[-3,121,-45,-44,-48,-46,-47,-3,-3,-3,-3,-3,]),'INCREMENT':([87,91,92,95,97,108,116,121,125,126,127,155,156,166,168,174,175,179,180,181,182,183,184,185,186,191,192,193,194,195,196,198,201,202,203,205,207,230,235,237,],[-3,122,-45,-44,-48,122,158,122,-46,-47,122,158,122,-3,158,122,-3,122,122,122,122,122,122,122,122,122,122,122,122,122,-3,122,122,122,122,122,122,122,-3,-3,]),'DECREMENT':([87,91,92,95,97,108,116,121,125,126,127,155,156,166,168,174,175,179,180,181,182,183,184,185,186,191,192,193,194,195,196,198,201,202,203,205,207,230,235,237,],[-3,123,-45,-44,-48,123,159,123,-46,-47,123,159,123,-3,159,123,-3,123,123,123,123,123,123,123,123,123,123,123,123,123,-3,123,123,123,123,123,123,123,-3,-3,]),'END_BRACE':([87,90,91,92,95,97,125,126,166,175,196,197,200,221,235,237,238,239,],[-3,94,-43,-45,-44,-48,-46,-47,-3,-3,-3,222,224,231,-3,-3,240,241,]),'COLON':([105,116,167,168,173,],[129,-132,129,-132,-131,]),'EXCLAMATION':([108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'ELSE':([224,],[233,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([2,32,33,],[4,54,55,]),'empty':([2,4,8,24,25,32,33,37,68,87,157,166,175,196,235,237,],[6,12,12,12,12,6,6,61,82,92,61,92,92,92,92,92,]),'declaracaoGlobal':([4,],[8,]),'funcoes_codigo':([4,8,24,25,],[9,22,35,36,]),'declaracaoExplicita':([4,91,121,],[10,107,107,]),'funcao':([4,8,24,25,],[11,11,11,11,]),'declaracaoExplicitaSimples':([4,91,121,],[13,13,13,]),'declaracaoExplicitaEmLista':([4,91,121,],[14,14,14,]),'declaracaoExplicitaEmListaEspacada':([4,91,121,],[15,15,15,]),'delimitador':([7,11,18,],[19,24,33,]),'tiposDeclaracoesExplicitas':([17,28,39,64,],[27,40,40,40,]),'declaracaoExplicitaSemValor':([17,28,39,64,],[29,29,29,29,]),'declaracaoExplicitaComValor':([17,28,39,64,],[30,30,30,30,]),'listaExplicita':([28,39,64,],[38,63,70,]),'listaExplicitaRecursiva':([28,39,64,],[41,41,41,]),'tipo':([31,56,68,78,83,],[43,66,81,86,88,]),'inteiro':([31,56,68,78,83,],[45,45,45,45,45,]),'float':([31,56,68,78,83,],[46,46,46,46,46,]),'parametros':([37,157,],[57,190,]),'parametro_simples':([37,157,],[58,58,]),'parametros_tipo_unico':([37,157,],[59,59,]),'parametros_varios_tipos':([37,157,],[60,60,]),'constante':([65,108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[72,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'lista_parametros_tipo_unico':([67,85,],[79,89,]),'tipo_nullavel':([68,],[80,]),'lista_parametros_varios_tipos':([77,93,],[84,124,]),'codigo':([87,166,175,196,235,237,],[90,197,200,221,238,239,]),'lista_estruturas':([87,166,175,196,235,237,],[91,91,91,91,91,91,]),'estruturasBase':([91,],[95,]),'estruturas':([91,],[96,]),'atribuicao':([91,],[98,]),'declaracao':([91,121,],[99,164,]),'estrutura_if':([91,233,],[100,236,]),'estrutura_for':([91,],[101,]),'unario':([91,108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[102,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'chamadaFuncao':([91,108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[103,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'expressao_matematica_reduzida':([91,],[104,]),'lista_identificadores':([91,121,],[105,167,]),'declaracaoCurta':([91,121,],[106,106,]),'for_CLIKE':([91,],[109,]),'for_infinito':([91,],[110,]),'for_while':([91,],[111,]),'incremento':([91,108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'decremento':([91,108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'pre_incremento':([91,108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'pre_decremento':([91,108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'assign_plus':([91,],[117,]),'assign_minus':([91,],[118,]),'assign_mult':([91,],[119,]),'assign_div':([91,],[120,]),'expressao':([108,121,127,156,174,191,192,193,194,195,198,230,],[130,165,172,189,172,216,217,218,219,220,223,234,]),'and':([108,121,127,156,174,191,192,193,194,195,198,230,],[131,131,131,131,131,131,131,131,131,131,131,131,]),'or':([108,121,127,156,174,191,192,193,194,195,198,230,],[132,132,132,132,132,132,132,132,132,132,132,132,]),'expressao_n2':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[133,133,133,133,133,133,133,133,133,133,133,225,226,133,]),'equals':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'different':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'greater':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'less':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'greater_or_equal':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'less_or_equal':([108,121,127,156,174,191,192,193,194,195,198,201,202,230,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'expressao_n3':([108,121,127,156,174,179,180,181,191,192,193,194,195,198,201,202,203,205,207,230,],[140,140,140,140,140,204,206,208,140,140,140,140,140,140,140,140,227,228,229,140,]),'soma':([108,121,127,156,174,179,180,181,191,192,193,194,195,198,201,202,203,205,207,230,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'sub':([108,121,127,156,174,179,180,181,191,192,193,194,195,198,201,202,203,205,207,230,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'expressao_n4':([108,121,127,156,174,179,180,181,182,183,191,192,193,194,195,198,201,202,203,205,207,230,],[143,143,143,143,143,143,143,143,209,210,143,143,143,143,143,143,143,143,143,143,143,143,]),'mult':([108,121,127,156,174,179,180,181,182,183,191,192,193,194,195,198,201,202,203,205,207,230,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'div':([108,121,127,156,174,179,180,181,182,183,191,192,193,194,195,198,201,202,203,205,207,230,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'mod':([108,121,127,156,174,179,180,181,182,183,191,192,193,194,195,198,201,202,203,205,207,230,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'expressao_n5':([108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[147,147,147,147,147,147,147,147,147,147,211,212,213,147,147,147,147,147,147,147,147,147,147,147,147,]),'operando':([108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[149,149,149,187,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'negation':([108,121,127,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'expParenteses':([108,121,127,154,156,174,179,180,181,182,183,184,185,186,191,192,193,194,195,198,201,202,203,205,207,230,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'lista_valores':([127,174,],[171,199,]),'estrutura_else':([224,],[232,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote importacao declaracaoGlobal funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',12),
  ('programa -> pacote importacao funcoes_codigo','programa',3,'p_programa','analiseSintatica.py',13),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',20),
  ('pacote -> PACKAGE ID delimitador','pacote',3,'p_pacote','analiseSintatica.py',24),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',25),
  ('importacao -> IMPORT STRING NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',29),
  ('importacao -> IMPORT STRING delimitador importacao','importacao',4,'p_importacao','analiseSintatica.py',30),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',31),
  ('tipo -> ID','tipo',1,'p_tipo','analiseSintatica.py',41),
  ('tipo -> STR','tipo',1,'p_tipo','analiseSintatica.py',42),
  ('tipo -> inteiro','tipo',1,'p_tipo','analiseSintatica.py',43),
  ('tipo -> float','tipo',1,'p_tipo','analiseSintatica.py',44),
  ('inteiro -> INT','inteiro',1,'p_inteiro','analiseSintatica.py',48),
  ('inteiro -> INT8','inteiro',1,'p_inteiro','analiseSintatica.py',49),
  ('inteiro -> INT16','inteiro',1,'p_inteiro','analiseSintatica.py',50),
  ('inteiro -> INT32','inteiro',1,'p_inteiro','analiseSintatica.py',51),
  ('inteiro -> INT64','inteiro',1,'p_inteiro','analiseSintatica.py',52),
  ('float -> FLOAT32','float',1,'p_float','analiseSintatica.py',56),
  ('float -> FLOAT64','float',1,'p_float','analiseSintatica.py',57),
  ('tipo_nullavel -> tipo','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',61),
  ('tipo_nullavel -> empty','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',62),
  ('declaracaoGlobal -> declaracaoExplicita','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',66),
  ('declaracaoGlobal -> declaracaoExplicita NEWLINE','declaracaoGlobal',2,'p_declaracaoGlobal','analiseSintatica.py',67),
  ('declaracaoExplicita -> declaracaoExplicitaSimples','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',71),
  ('declaracaoExplicita -> declaracaoExplicitaEmLista','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',72),
  ('declaracaoExplicita -> declaracaoExplicitaEmListaEspacada','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',73),
  ('declaracaoExplicitaSimples -> VAR tiposDeclaracoesExplicitas','declaracaoExplicitaSimples',2,'p_declaracaoExplicitaSimples','analiseSintatica.py',77),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaSemValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',81),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaComValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',82),
  ('declaracaoExplicitaSemValor -> ID tipo','declaracaoExplicitaSemValor',2,'p_declaracaoExplicitaSemValor','analiseSintatica.py',86),
  ('declaracaoExplicitaComValor -> ID tipo EQUALS constante','declaracaoExplicitaComValor',4,'p_declaracaoExplicitaComValor','analiseSintatica.py',90),
  ('declaracaoExplicitaEmLista -> VAR BEG_PAREN listaExplicita END_PAREN','declaracaoExplicitaEmLista',4,'p_declaracaoExplicitaEmLista','analiseSintatica.py',94),
  ('declaracaoExplicitaEmListaEspacada -> VAR BEG_PAREN NEWLINE listaExplicita END_PAREN','declaracaoExplicitaEmListaEspacada',5,'p_declaracaoExplicitaEmListaEspacada','analiseSintatica.py',98),
  ('listaExplicita -> tiposDeclaracoesExplicitas','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',102),
  ('listaExplicita -> listaExplicitaRecursiva','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',103),
  ('listaExplicita -> tiposDeclaracoesExplicitas NEWLINE','listaExplicita',2,'p_listaExplicita','analiseSintatica.py',104),
  ('listaExplicitaRecursiva -> tiposDeclaracoesExplicitas NEWLINE listaExplicita','listaExplicitaRecursiva',3,'p_listaExplicitaRecursiva','analiseSintatica.py',111),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',115),
  ('funcoes_codigo -> funcao NEWLINE funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',116),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',117),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',118),
  ('funcao -> FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',122),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',126),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',130),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',131),
  ('estruturasBase -> estruturas SEMICOLON','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',141),
  ('estruturasBase -> estruturas NEWLINE','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',142),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',143),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',148),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',149),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',150),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',151),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',152),
  ('estruturas -> chamadaFuncao','estruturas',1,'p_estruturas','analiseSintatica.py',153),
  ('estruturas -> expressao_matematica_reduzida','estruturas',1,'p_estruturas','analiseSintatica.py',154),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',159),
  ('delimitador -> SEMICOLON NEWLINE','delimitador',2,'p_delimitador','analiseSintatica.py',160),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',163),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',164),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',165),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',169),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',173),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',177),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',178),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',179),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',180),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',181),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',182),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',183),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',187),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',191),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',195),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',199),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',203),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',207),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',211),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',212),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',213),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',219),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',223),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',227),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',228),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',229),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',230),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',234),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',238),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',242),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',246),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',247),
  ('expressao_n5 -> negation','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',248),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',252),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',256),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',257),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',258),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',259),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',263),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',267),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',271),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',275),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',279),
  ('operando -> chamadaFuncao','operando',1,'p_operando','analiseSintatica.py',280),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',281),
  ('constante -> ID','constante',1,'p_constante','analiseSintatica.py',285),
  ('constante -> NUMBER','constante',1,'p_constante','analiseSintatica.py',286),
  ('constante -> STRING','constante',1,'p_constante','analiseSintatica.py',287),
  ('constante -> TRUE','constante',1,'p_constante','analiseSintatica.py',288),
  ('constante -> FALSE','constante',1,'p_constante','analiseSintatica.py',289),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',293),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',297),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',298),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',299),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',303),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',307),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',311),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',316),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',317),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',324),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',325),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',332),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',333),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',334),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',335),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',339),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',343),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',347),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',351),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',355),
  ('declaracao -> declaracaoCurta','declaracao',1,'p_declaracao','analiseSintatica.py',362),
  ('declaracao -> declaracaoExplicita','declaracao',1,'p_declaracao','analiseSintatica.py',363),
  ('declaracaoCurta -> lista_identificadores COLON EQUALS lista_valores','declaracaoCurta',4,'p_declaracaoCurta','analiseSintatica.py',367),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',373),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',374),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',381),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',382),
  ('chamadaFuncao -> ID BEG_PAREN parametros END_PAREN','chamadaFuncao',4,'p_chamadaFuncao','analiseSintatica.py',390),
  ('parametros -> parametro_simples','parametros',1,'p_parametros','analiseSintatica.py',394),
  ('parametros -> parametros_tipo_unico','parametros',1,'p_parametros','analiseSintatica.py',395),
  ('parametros -> parametros_varios_tipos','parametros',1,'p_parametros','analiseSintatica.py',396),
  ('parametros -> empty','parametros',1,'p_parametros','analiseSintatica.py',397),
  ('parametro_simples -> ID tipo','parametro_simples',2,'p_parametro_simples','analiseSintatica.py',401),
  ('parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','parametros_tipo_unico',3,'p_parametros_tipo_unico','analiseSintatica.py',405),
  ('lista_parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','lista_parametros_tipo_unico',3,'p_lista_parametros_tipo_unico','analiseSintatica.py',409),
  ('lista_parametros_tipo_unico -> ID tipo','lista_parametros_tipo_unico',2,'p_lista_parametros_tipo_unico','analiseSintatica.py',410),
  ('parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','parametros_varios_tipos',4,'p_parametros_varios_tipos','analiseSintatica.py',414),
  ('lista_parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','lista_parametros_varios_tipos',4,'p_lista_parametros_varios_tipos','analiseSintatica.py',418),
  ('lista_parametros_varios_tipos -> ID tipo','lista_parametros_varios_tipos',2,'p_lista_parametros_varios_tipos','analiseSintatica.py',419),
]
