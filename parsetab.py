
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BOOL BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALITY EQUALS EXCLAMATION FALSE FLOAT32 FLOAT64 FLOATNUMBER FOR FUNC GREATER ID IF IMPORT INCREMENT INT INT16 INT32 INT64 INT8 INTNUMBER LESS MINUS MOD NEWLINE PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STR STRING TIMES TRUE VARprograma : pacote importacao declaracaoGlobal funcoes_codigo\n                | pacote importacao funcoes_codigoempty :pacote : PACKAGE ID delimitador \n              | PACKAGE ID NEWLINEimportacao : IMPORT STRING NEWLINE importacao\n                  | IMPORT STRING delimitador importacao\n                  | IMPORT STRING \n                  | emptytipo : STR\n            | inteiro\n            | float\n            | booleaninteiro : INT\n               | INT8 \n               | INT16\n               | INT32\n               | INT64float : FLOAT32\n             | FLOAT64boolean : BOOLtipo_nullavel : tipo\n                     | emptydeclaracaoGlobal : declaracaoExplicitaGlobal\n                        | declaracaoExplicitaGlobal NEWLINE\n                        | declaracaoExplicitaGlobal NEWLINE declaracaoExplicitaGlobaldeclaracaoExplicitaGlobal : declaracaoExplicitaSimples\n                                 | declaracaoExplicitaEmLista\n                                 | declaracaoExplicitaEmListaEspacadadeclaracaoExplicita : declaracaoExplicitaSimples\n                           | declaracaoExplicitaEmLista\n                           | declaracaoExplicitaEmListaEspacada\n                           | declaracaoExplicitaEmListaSimplesdeclaracaoExplicitaSimples : VAR tiposDeclaracoesExplicitastiposDeclaracoesExplicitas : declaracaoExplicitaSemValor\n                                  | declaracaoExplicitaComValordeclaracaoExplicitaSemValor : ID tipo declaracaoExplicitaComValor : ID tipo EQUALS expressaodeclaracaoExplicitaEmLista : VAR BEG_PAREN listaExplicita END_PARENdeclaracaoExplicitaEmListaEspacada : VAR BEG_PAREN NEWLINE listaExplicita END_PARENlistaExplicita : tiposDeclaracoesExplicitas\n                      | listaExplicitaRecursiva\n                      | tiposDeclaracoesExplicitas NEWLINElistaExplicitaRecursiva : tiposDeclaracoesExplicitas NEWLINE listaExplicitadeclaracaoExplicitaEmListaSimples : VAR listaExplicitaSimpleslistaExplicitaSimples : ID COMMA lista_identificadores tipo\n                             | ID COMMA lista_identificadores tipo COLON EQUALS lista_valoresfuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao NEWLINE funcoes_codigo\n                      | funcao\n                      | emptyfuncao : funcaoComParametros\n              | funcaoSemParametrosfuncaoComParametros : FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACEfuncaoSemParametros : FUNC ID BEG_PAREN END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACEchamadaFuncao : ID BEG_PAREN lista_valores END_PAREN\n                     | ID BEG_PAREN END_PARENparametros : parametro_simples\n                  | parametros_tipo_unico\n                  | parametros_varios_tiposparametro_simples : ID tipoparametros_tipo_unico : ID COMMA lista_parametros_tipo_unicolista_parametros_tipo_unico : ID COMMA lista_parametros_tipo_unico \n                                   | ID tipoparametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tiposlista_parametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tipos    \n                                     | ID tipocodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas SEMICOLON\n                      | estruturas NEWLINE\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unario\n                  | chamadaFuncao\n                  | expressao_matematica_reduzida\n                  | retornodelimitador  : SEMICOLON\n                    | SEMICOLON NEWLINEexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALITY expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3expressao_n3 : soma \n                    | sub \n                    | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando\n                    | negationnegation : EXCLAMATION operando unario : incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : constante\n                | chamadaFuncao\n                | expParentesesconstante : constante_int\n                 | constante_float\n                 | constante_string\n                 | constante_booleano\n                 | constante_idconstante_int : INTNUMBERconstante_float : FLOATNUMBERconstante_string : STRINGconstante_booleano : TRUE\n                          | FALSEconstante_id : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE\n                 | FOR atribuicao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEatribuicao_for : ID EQUALS expressaodeclaracao_for : ID COLON EQUALS expressaofor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifretorno : RETURN expressaoatribuicao : lista_identificadores EQUALS lista_valoresdeclaracao : declaracaoCurta\n                  | declaracaoExplicitadeclaracaoCurta : lista_identificadores COLON EQUALS lista_valoreslista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressaoexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,2,4,6,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,179,212,],[0,-3,-3,-9,-3,-2,-24,-50,-51,-27,-28,-29,-52,-53,-8,-4,-5,-82,-1,-25,-3,-3,-34,-35,-36,-3,-3,-83,-26,-48,-49,-37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-6,-7,-39,-40,-139,-38,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,-55,-54,]),'IMPORT':([2,21,22,23,34,35,36,],[5,-4,-5,-82,5,5,-83,]),'VAR':([2,4,6,20,21,22,23,25,34,35,36,58,59,144,166,168,169,180,182,213,214,226,235,241,272,274,275,],[-3,18,-9,-8,-4,-5,-82,18,-3,-3,-83,-6,-7,-3,-3,209,-70,-69,-73,-71,-72,-3,-3,-3,-3,-3,-3,]),'FUNC':([2,4,6,8,10,13,14,15,20,21,22,23,25,26,27,28,30,31,34,35,36,37,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,],[-3,19,-9,19,-24,-27,-28,-29,-8,-4,-5,-82,-25,19,19,-34,-35,-36,-3,-3,-83,-26,-37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-6,-7,-39,-40,-139,-38,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,]),'ID':([3,18,19,29,41,57,62,63,101,102,103,109,116,123,126,127,128,129,130,131,132,133,134,140,144,148,149,152,154,164,166,168,169,171,180,182,194,203,208,209,211,213,214,215,216,226,234,235,236,237,238,239,240,241,243,245,246,257,262,264,272,274,275,276,],[7,32,33,32,32,64,32,72,136,137,138,72,141,72,72,72,72,72,72,72,72,72,72,162,-3,72,72,72,72,141,-3,198,-70,72,-69,-73,72,72,228,230,162,-71,-72,72,233,-3,72,-3,72,72,72,72,72,-3,72,72,259,72,72,72,-3,-3,-3,72,]),'STRING':([5,63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[20,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'NEWLINE':([7,10,11,13,14,15,16,17,20,23,28,29,30,31,42,44,45,46,47,48,49,50,51,52,53,54,55,56,60,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,144,146,147,150,151,153,155,156,157,158,159,160,161,166,168,169,170,172,173,174,175,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,196,197,199,200,201,202,204,205,206,207,210,212,213,214,223,226,229,232,235,241,247,249,250,251,252,255,261,263,266,267,272,273,274,275,280,281,282,283,],[22,25,27,-27,-28,-29,-52,-53,34,36,-34,41,-35,-36,62,-37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-39,-40,-139,-38,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-3,-57,-162,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-3,182,-70,-56,-87,-88,-100,-101,-55,-69,214,-73,-74,-75,-76,-77,-78,-79,-80,-81,-156,-157,-141,-142,-143,-163,-164,-165,-166,-30,-31,-32,-33,-161,-54,-71,-72,-154,-3,-45,-155,-3,-3,-158,-167,-168,-169,-170,-148,-151,-149,-46,-150,-3,-153,-3,-3,-47,-152,-144,-145,]),'SEMICOLON':([7,11,16,17,20,28,30,31,44,45,46,47,48,49,50,51,52,53,54,55,56,60,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,147,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,179,181,183,184,185,186,187,188,189,190,192,193,195,196,197,199,200,201,202,204,205,206,207,210,212,223,224,227,229,232,247,249,250,251,252,253,255,256,258,261,263,265,266,267,273,280,281,282,283,],[23,23,-52,-53,23,-34,-35,-36,-37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-39,-40,-139,-38,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-162,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,-55,213,-74,-75,-76,-77,-78,-79,-80,-81,-156,-157,-141,-142,-143,-163,-164,-165,-166,-30,-31,-32,-33,-161,-54,-154,240,243,-45,-155,-158,-167,-168,-169,-170,262,-148,264,-146,-151,-149,-147,-46,-150,-153,-47,-152,-144,-145,]),'BEG_PAREN':([18,33,63,72,101,109,123,126,127,128,129,130,131,132,133,134,136,148,149,152,154,171,194,198,203,208,209,215,228,234,236,237,238,239,240,243,245,257,262,264,276,],[29,57,109,123,109,109,109,109,109,109,109,109,109,109,109,109,123,109,109,109,109,109,109,123,109,109,29,109,123,109,109,109,109,109,109,109,109,109,109,109,109,]),'END_PAREN':([30,31,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,65,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,115,121,122,123,135,136,137,138,139,142,145,146,147,150,151,153,155,156,157,158,159,160,161,163,165,170,172,173,174,175,176,177,210,231,],[-35,-36,60,-41,-42,-37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,66,70,-43,117,-58,-59,-60,-44,-139,-38,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-61,-122,-124,146,-117,-139,-123,-125,161,-62,170,-57,-162,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-65,-64,-56,-87,-88,-100,-101,-67,-63,-161,-66,]),'STR':([32,64,66,117,141,162,230,233,259,260,],[45,45,45,45,45,45,45,-159,-160,45,]),'INT':([32,64,66,117,141,162,230,233,259,260,],[49,49,49,49,49,49,49,-159,-160,49,]),'INT8':([32,64,66,117,141,162,230,233,259,260,],[50,50,50,50,50,50,50,-159,-160,50,]),'INT16':([32,64,66,117,141,162,230,233,259,260,],[51,51,51,51,51,51,51,-159,-160,51,]),'INT32':([32,64,66,117,141,162,230,233,259,260,],[52,52,52,52,52,52,52,-159,-160,52,]),'INT64':([32,64,66,117,141,162,230,233,259,260,],[53,53,53,53,53,53,53,-159,-160,53,]),'FLOAT32':([32,64,66,117,141,162,230,233,259,260,],[54,54,54,54,54,54,54,-159,-160,54,]),'FLOAT64':([32,64,66,117,141,162,230,233,259,260,],[55,55,55,55,55,55,55,-159,-160,55,]),'BOOL':([32,64,66,117,141,162,230,233,259,260,],[56,56,56,56,56,56,56,-159,-160,56,]),'EQUALS':([44,45,46,47,48,49,50,51,52,53,54,55,56,127,128,191,198,217,219,220,221,222,228,233,244,271,],[63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,152,154,215,-160,234,236,237,238,239,245,-159,257,276,]),'COMMA':([45,46,47,48,49,50,51,52,53,54,55,56,64,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,115,121,122,135,136,137,138,141,145,146,147,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,176,191,198,210,230,232,233,247,259,260,280,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,116,-139,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,140,-122,-124,-117,-139,-123,-125,164,171,-57,-162,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,211,216,-160,-161,246,171,-159,171,-160,216,171,]),'BEG_BRACE':([45,46,47,48,49,50,51,52,53,54,55,56,66,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,117,118,119,120,121,122,135,136,137,138,143,146,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,208,218,225,228,268,269,270,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-139,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-3,144,-22,-23,-122,-124,-117,-139,-123,-125,166,-57,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,226,235,241,-139,272,274,275,]),'COLON':([45,46,47,48,49,50,51,52,53,54,55,56,191,198,228,233,266,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,217,-160,244,-159,271,]),'EXCLAMATION':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'INCREMENT':([63,72,109,123,126,127,128,129,130,131,132,133,134,144,148,149,152,154,166,168,169,171,180,182,194,198,203,208,213,214,215,226,228,234,235,236,237,238,239,240,241,243,245,257,262,264,272,274,275,276,],[102,121,102,102,102,102,102,102,102,102,102,102,102,-3,102,102,102,102,-3,102,-70,102,-69,-73,102,121,102,102,-71,-72,102,-3,121,102,-3,102,102,102,102,102,-3,102,102,102,102,102,-3,-3,-3,102,]),'DECREMENT':([63,72,109,123,126,127,128,129,130,131,132,133,134,144,148,149,152,154,166,168,169,171,180,182,194,198,203,208,213,214,215,226,228,234,235,236,237,238,239,240,241,243,245,257,262,264,272,274,275,276,],[103,122,103,103,103,103,103,103,103,103,103,103,103,-3,103,103,103,103,-3,103,-70,103,-69,-73,103,122,103,103,-71,-72,103,-3,122,103,-3,103,103,103,103,103,-3,103,103,103,103,103,-3,-3,-3,103,]),'INTNUMBER':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'FLOATNUMBER':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'TRUE':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'FALSE':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'TIMES':([72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,156,157,158,159,160,161,170,198,228,],[-139,132,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,132,132,-111,-113,-112,-140,-56,221,-139,]),'DIVISION':([72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,156,157,158,159,160,161,170,198,228,],[-139,133,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,133,133,-111,-113,-112,-140,-56,222,-139,]),'MOD':([72,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,156,157,158,159,160,161,170,228,],[-139,134,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,134,134,-111,-113,-112,-140,-56,-139,]),'DIFFERENT':([72,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,156,157,158,159,160,161,170,228,],[-139,129,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-105,-106,-111,-113,-112,-140,-56,-139,]),'PLUS':([72,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,174,175,198,228,],[-139,130,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,130,130,130,130,-105,-106,-111,-113,-112,-140,-56,130,130,219,-139,]),'MINUS':([72,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,174,175,198,228,],[-139,131,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,131,131,131,131,-105,-106,-111,-113,-112,-140,-56,131,131,220,-139,]),'EQUALITY':([72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,228,],[-139,126,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,126,126,-100,-101,-139,]),'GREATER':([72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,228,],[-139,127,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,127,127,-100,-101,-139,]),'LESS':([72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,135,136,137,138,146,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,228,],[-139,128,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,-117,-139,-123,-125,-57,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,128,128,-100,-101,-139,]),'AMPERSAND':([72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,124,135,136,137,138,139,146,147,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,210,218,223,225,228,249,250,251,252,253,256,258,265,269,270,],[-139,124,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,148,-117,-139,-123,-125,124,-57,124,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,124,124,124,124,-139,124,124,124,124,124,124,124,124,124,124,]),'PIPE':([72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,105,106,107,108,110,111,112,113,114,121,122,125,135,136,137,138,139,146,147,150,151,153,155,156,157,158,159,160,161,170,172,173,174,175,210,218,223,225,228,249,250,251,252,253,256,258,265,269,270,],[-139,125,-84,-85,-86,-89,-90,-91,-92,-93,-94,-95,-102,-103,-104,-107,-108,-109,-110,-114,-115,-116,-118,-119,-120,-121,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-122,-124,149,-117,-139,-123,-125,125,-57,125,-96,-98,-99,-97,-105,-106,-111,-113,-112,-140,-56,-87,-88,-100,-101,125,125,125,125,-139,125,125,125,125,125,125,125,125,125,125,]),'IF':([144,166,168,169,180,182,213,214,226,235,241,268,272,274,275,],[-3,-3,194,-70,-69,-73,-71,-72,-3,-3,-3,194,-3,-3,-3,]),'RETURN':([144,166,168,169,180,182,213,214,226,235,241,272,274,275,],[-3,-3,203,-70,-69,-73,-71,-72,-3,-3,-3,-3,-3,-3,]),'FOR':([144,166,168,169,180,182,213,214,226,235,241,272,274,275,],[-3,-3,208,-70,-69,-73,-71,-72,-3,-3,-3,-3,-3,-3,]),'END_BRACE':([144,166,167,168,169,178,180,182,213,214,226,235,241,242,248,254,272,274,275,277,278,279,],[-3,-3,179,-68,-70,212,-69,-73,-71,-72,-3,-3,-3,255,261,263,-3,-3,-3,281,282,283,]),'ELSE':([261,],[268,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([2,34,35,],[4,58,59,]),'empty':([2,4,8,26,27,34,35,66,117,144,166,226,235,241,272,274,275,],[6,12,12,12,12,6,6,120,120,169,169,169,169,169,169,169,169,]),'declaracaoGlobal':([4,],[8,]),'funcoes_codigo':([4,8,26,27,],[9,24,38,39,]),'declaracaoExplicitaGlobal':([4,25,],[10,37,]),'funcao':([4,8,26,27,],[11,11,11,11,]),'declaracaoExplicitaSimples':([4,25,168,],[13,13,204,]),'declaracaoExplicitaEmLista':([4,25,168,],[14,14,205,]),'declaracaoExplicitaEmListaEspacada':([4,25,168,],[15,15,206,]),'funcaoComParametros':([4,8,26,27,],[16,16,16,16,]),'funcaoSemParametros':([4,8,26,27,],[17,17,17,17,]),'delimitador':([7,11,20,],[21,26,35,]),'tiposDeclaracoesExplicitas':([18,29,41,62,209,],[28,42,42,42,28,]),'declaracaoExplicitaSemValor':([18,29,41,62,209,],[30,30,30,30,30,]),'declaracaoExplicitaComValor':([18,29,41,62,209,],[31,31,31,31,31,]),'listaExplicita':([29,41,62,],[40,61,71,]),'listaExplicitaRecursiva':([29,41,62,],[43,43,43,]),'tipo':([32,64,66,117,141,162,230,260,],[44,115,119,119,165,176,44,266,]),'inteiro':([32,64,66,117,141,162,230,260,],[46,46,46,46,46,46,46,46,]),'float':([32,64,66,117,141,162,230,260,],[47,47,47,47,47,47,47,47,]),'boolean':([32,64,66,117,141,162,230,260,],[48,48,48,48,48,48,48,48,]),'parametros':([57,],[65,]),'parametro_simples':([57,],[67,]),'parametros_tipo_unico':([57,],[68,]),'parametros_varios_tipos':([57,],[69,]),'expressao':([63,109,123,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[73,139,147,210,218,223,225,147,147,249,250,251,252,253,256,258,265,269,270,147,]),'and':([63,109,123,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'or':([63,109,123,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expressao_n2':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[76,76,76,172,173,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'equals':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'different':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'greater':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'less':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'greater_or_equal':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'less_or_equal':([63,109,123,148,149,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'expressao_n3':([63,109,123,126,127,128,129,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[83,83,83,150,151,153,155,83,83,174,175,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'soma':([63,109,123,126,127,128,129,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'sub':([63,109,123,126,127,128,129,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'expressao_n4':([63,109,123,126,127,128,129,130,131,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[86,86,86,86,86,86,86,156,157,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'mult':([63,109,123,126,127,128,129,130,131,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'div':([63,109,123,126,127,128,129,130,131,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'mod':([63,109,123,126,127,128,129,130,131,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'expressao_n5':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[90,90,90,90,90,90,90,90,90,158,159,160,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'unario':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,168,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,187,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'operando':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[92,135,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'negation':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'incremento':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,168,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'decremento':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,168,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'pre_incremento':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,168,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'pre_decremento':([63,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,168,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'constante':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'chamadaFuncao':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,168,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,188,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'expParenteses':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'constante_int':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'constante_float':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'constante_string':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'constante_booleano':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'constante_id':([63,101,109,123,126,127,128,129,130,131,132,133,134,148,149,152,154,171,194,203,208,215,234,236,237,238,239,240,243,245,257,262,264,276,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'tipo_nullavel':([66,117,],[118,143,]),'lista_parametros_tipo_unico':([116,164,],[142,177,]),'lista_valores':([123,215,234,276,],[145,232,247,280,]),'lista_parametros_varios_tipos':([140,211,],[163,231,]),'codigo':([144,166,226,235,241,272,274,275,],[167,178,242,248,254,277,278,279,]),'lista_estruturas':([144,166,226,235,241,272,274,275,],[168,168,168,168,168,168,168,168,]),'estruturasBase':([168,],[180,]),'estruturas':([168,],[181,]),'atribuicao':([168,],[183,]),'declaracao':([168,],[184,]),'estrutura_if':([168,268,],[185,273,]),'estrutura_for':([168,],[186,]),'expressao_matematica_reduzida':([168,],[189,]),'retorno':([168,],[190,]),'lista_identificadores':([168,246,],[191,260,]),'declaracaoCurta':([168,],[192,]),'declaracaoExplicita':([168,],[193,]),'for_CLIKE':([168,],[195,]),'for_infinito':([168,],[196,]),'for_while':([168,],[197,]),'assign_plus':([168,],[199,]),'assign_minus':([168,],[200,]),'assign_mult':([168,],[201,]),'assign_div':([168,],[202,]),'declaracaoExplicitaEmListaSimples':([168,],[207,]),'declaracao_for':([208,],[224,]),'atribuicao_for':([208,],[227,]),'listaExplicitaSimples':([209,],[229,]),'estrutura_else':([261,],[267,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote importacao declaracaoGlobal funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',14),
  ('programa -> pacote importacao funcoes_codigo','programa',3,'p_programa','analiseSintatica.py',15),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',22),
  ('pacote -> PACKAGE ID delimitador','pacote',3,'p_pacote','analiseSintatica.py',26),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',27),
  ('importacao -> IMPORT STRING NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',31),
  ('importacao -> IMPORT STRING delimitador importacao','importacao',4,'p_importacao','analiseSintatica.py',32),
  ('importacao -> IMPORT STRING','importacao',2,'p_importacao','analiseSintatica.py',33),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',34),
  ('tipo -> STR','tipo',1,'p_tipo','analiseSintatica.py',46),
  ('tipo -> inteiro','tipo',1,'p_tipo','analiseSintatica.py',47),
  ('tipo -> float','tipo',1,'p_tipo','analiseSintatica.py',48),
  ('tipo -> boolean','tipo',1,'p_tipo','analiseSintatica.py',49),
  ('inteiro -> INT','inteiro',1,'p_inteiro','analiseSintatica.py',53),
  ('inteiro -> INT8','inteiro',1,'p_inteiro','analiseSintatica.py',54),
  ('inteiro -> INT16','inteiro',1,'p_inteiro','analiseSintatica.py',55),
  ('inteiro -> INT32','inteiro',1,'p_inteiro','analiseSintatica.py',56),
  ('inteiro -> INT64','inteiro',1,'p_inteiro','analiseSintatica.py',57),
  ('float -> FLOAT32','float',1,'p_float','analiseSintatica.py',61),
  ('float -> FLOAT64','float',1,'p_float','analiseSintatica.py',62),
  ('boolean -> BOOL','boolean',1,'p_boolean','analiseSintatica.py',66),
  ('tipo_nullavel -> tipo','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',70),
  ('tipo_nullavel -> empty','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',71),
  ('declaracaoGlobal -> declaracaoExplicitaGlobal','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',75),
  ('declaracaoGlobal -> declaracaoExplicitaGlobal NEWLINE','declaracaoGlobal',2,'p_declaracaoGlobal','analiseSintatica.py',76),
  ('declaracaoGlobal -> declaracaoExplicitaGlobal NEWLINE declaracaoExplicitaGlobal','declaracaoGlobal',3,'p_declaracaoGlobal','analiseSintatica.py',77),
  ('declaracaoExplicitaGlobal -> declaracaoExplicitaSimples','declaracaoExplicitaGlobal',1,'p_declaracaoExplicitaGlobal','analiseSintatica.py',81),
  ('declaracaoExplicitaGlobal -> declaracaoExplicitaEmLista','declaracaoExplicitaGlobal',1,'p_declaracaoExplicitaGlobal','analiseSintatica.py',82),
  ('declaracaoExplicitaGlobal -> declaracaoExplicitaEmListaEspacada','declaracaoExplicitaGlobal',1,'p_declaracaoExplicitaGlobal','analiseSintatica.py',83),
  ('declaracaoExplicita -> declaracaoExplicitaSimples','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',87),
  ('declaracaoExplicita -> declaracaoExplicitaEmLista','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',88),
  ('declaracaoExplicita -> declaracaoExplicitaEmListaEspacada','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',89),
  ('declaracaoExplicita -> declaracaoExplicitaEmListaSimples','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',90),
  ('declaracaoExplicitaSimples -> VAR tiposDeclaracoesExplicitas','declaracaoExplicitaSimples',2,'p_declaracaoExplicitaSimples','analiseSintatica.py',94),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaSemValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',98),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaComValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',99),
  ('declaracaoExplicitaSemValor -> ID tipo','declaracaoExplicitaSemValor',2,'p_declaracaoExplicitaSemValor','analiseSintatica.py',103),
  ('declaracaoExplicitaComValor -> ID tipo EQUALS expressao','declaracaoExplicitaComValor',4,'p_declaracaoExplicitaComValor','analiseSintatica.py',107),
  ('declaracaoExplicitaEmLista -> VAR BEG_PAREN listaExplicita END_PAREN','declaracaoExplicitaEmLista',4,'p_declaracaoExplicitaEmLista','analiseSintatica.py',111),
  ('declaracaoExplicitaEmListaEspacada -> VAR BEG_PAREN NEWLINE listaExplicita END_PAREN','declaracaoExplicitaEmListaEspacada',5,'p_declaracaoExplicitaEmListaEspacada','analiseSintatica.py',115),
  ('listaExplicita -> tiposDeclaracoesExplicitas','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',119),
  ('listaExplicita -> listaExplicitaRecursiva','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',120),
  ('listaExplicita -> tiposDeclaracoesExplicitas NEWLINE','listaExplicita',2,'p_listaExplicita','analiseSintatica.py',121),
  ('listaExplicitaRecursiva -> tiposDeclaracoesExplicitas NEWLINE listaExplicita','listaExplicitaRecursiva',3,'p_listaExplicitaRecursiva','analiseSintatica.py',129),
  ('declaracaoExplicitaEmListaSimples -> VAR listaExplicitaSimples','declaracaoExplicitaEmListaSimples',2,'p_declaracaoExplicitaEmListaSimples','analiseSintatica.py',133),
  ('listaExplicitaSimples -> ID COMMA lista_identificadores tipo','listaExplicitaSimples',4,'p_listaExplicitaSimples','analiseSintatica.py',137),
  ('listaExplicitaSimples -> ID COMMA lista_identificadores tipo COLON EQUALS lista_valores','listaExplicitaSimples',7,'p_listaExplicitaSimples','analiseSintatica.py',138),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',145),
  ('funcoes_codigo -> funcao NEWLINE funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',146),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',147),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',148),
  ('funcao -> funcaoComParametros','funcao',1,'p_funcao','analiseSintatica.py',161),
  ('funcao -> funcaoSemParametros','funcao',1,'p_funcao','analiseSintatica.py',162),
  ('funcaoComParametros -> FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACE','funcaoComParametros',9,'p_funcaoComParametros','analiseSintatica.py',166),
  ('funcaoSemParametros -> FUNC ID BEG_PAREN END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACE','funcaoSemParametros',8,'p_funcaoSemParametros','analiseSintatica.py',170),
  ('chamadaFuncao -> ID BEG_PAREN lista_valores END_PAREN','chamadaFuncao',4,'p_chamadaFuncao','analiseSintatica.py',174),
  ('chamadaFuncao -> ID BEG_PAREN END_PAREN','chamadaFuncao',3,'p_chamadaFuncao','analiseSintatica.py',175),
  ('parametros -> parametro_simples','parametros',1,'p_parametros','analiseSintatica.py',182),
  ('parametros -> parametros_tipo_unico','parametros',1,'p_parametros','analiseSintatica.py',183),
  ('parametros -> parametros_varios_tipos','parametros',1,'p_parametros','analiseSintatica.py',184),
  ('parametro_simples -> ID tipo','parametro_simples',2,'p_parametro_simples','analiseSintatica.py',188),
  ('parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','parametros_tipo_unico',3,'p_parametros_tipo_unico','analiseSintatica.py',192),
  ('lista_parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','lista_parametros_tipo_unico',3,'p_lista_parametros_tipo_unico','analiseSintatica.py',196),
  ('lista_parametros_tipo_unico -> ID tipo','lista_parametros_tipo_unico',2,'p_lista_parametros_tipo_unico','analiseSintatica.py',197),
  ('parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','parametros_varios_tipos',4,'p_parametros_varios_tipos','analiseSintatica.py',206),
  ('lista_parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','lista_parametros_varios_tipos',4,'p_lista_parametros_varios_tipos','analiseSintatica.py',210),
  ('lista_parametros_varios_tipos -> ID tipo','lista_parametros_varios_tipos',2,'p_lista_parametros_varios_tipos','analiseSintatica.py',211),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',220),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',224),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',225),
  ('estruturasBase -> estruturas SEMICOLON','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',238),
  ('estruturasBase -> estruturas NEWLINE','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',239),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',240),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',244),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',245),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',246),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',247),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',248),
  ('estruturas -> chamadaFuncao','estruturas',1,'p_estruturas','analiseSintatica.py',249),
  ('estruturas -> expressao_matematica_reduzida','estruturas',1,'p_estruturas','analiseSintatica.py',250),
  ('estruturas -> retorno','estruturas',1,'p_estruturas','analiseSintatica.py',251),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',256),
  ('delimitador -> SEMICOLON NEWLINE','delimitador',2,'p_delimitador','analiseSintatica.py',257),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',261),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',262),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',263),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',267),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',271),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',275),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',276),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',277),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',278),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',279),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',280),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',281),
  ('equals -> expressao_n2 EQUALITY expressao_n3','equals',3,'p_equals','analiseSintatica.py',285),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',289),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',293),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',297),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',301),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',305),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',309),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',310),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',311),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',317),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',321),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',325),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',326),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',327),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',328),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',332),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',336),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',340),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',344),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',345),
  ('expressao_n5 -> negation','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',346),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',350),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',354),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',355),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',356),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',357),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',361),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',365),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',369),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',373),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',377),
  ('operando -> chamadaFuncao','operando',1,'p_operando','analiseSintatica.py',378),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',379),
  ('constante -> constante_int','constante',1,'p_constante','analiseSintatica.py',383),
  ('constante -> constante_float','constante',1,'p_constante','analiseSintatica.py',384),
  ('constante -> constante_string','constante',1,'p_constante','analiseSintatica.py',385),
  ('constante -> constante_booleano','constante',1,'p_constante','analiseSintatica.py',386),
  ('constante -> constante_id','constante',1,'p_constante','analiseSintatica.py',387),
  ('constante_int -> INTNUMBER','constante_int',1,'p_constante_int','analiseSintatica.py',391),
  ('constante_float -> FLOATNUMBER','constante_float',1,'p_constante_float','analiseSintatica.py',395),
  ('constante_string -> STRING','constante_string',1,'p_constante_string','analiseSintatica.py',399),
  ('constante_booleano -> TRUE','constante_booleano',1,'p_constante_booleano','analiseSintatica.py',403),
  ('constante_booleano -> FALSE','constante_booleano',1,'p_constante_booleano','analiseSintatica.py',404),
  ('constante_id -> ID','constante_id',1,'p_constante_id','analiseSintatica.py',408),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',412),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',416),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',417),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',418),
  ('for_CLIKE -> FOR declaracao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',422),
  ('for_CLIKE -> FOR atribuicao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',423),
  ('atribuicao_for -> ID EQUALS expressao','atribuicao_for',3,'p_atribuicao_for','analiseSintatica.py',427),
  ('declaracao_for -> ID COLON EQUALS expressao','declaracao_for',4,'p_declaracao_for','analiseSintatica.py',431),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',435),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',439),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',444),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',445),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',452),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',453),
  ('retorno -> RETURN expressao','retorno',2,'p_retorno','analiseSintatica.py',460),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',464),
  ('declaracao -> declaracaoCurta','declaracao',1,'p_declaracao','analiseSintatica.py',468),
  ('declaracao -> declaracaoExplicita','declaracao',1,'p_declaracao','analiseSintatica.py',469),
  ('declaracaoCurta -> lista_identificadores COLON EQUALS lista_valores','declaracaoCurta',4,'p_declaracaoCurta','analiseSintatica.py',473),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',477),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',478),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',486),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',487),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',494),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',495),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',496),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',497),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',501),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',505),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',509),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',513),
]
