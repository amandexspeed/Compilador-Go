
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FLOAT32 FLOAT64 FOR FUNC GREATER ID IF IMPORT INCREMENT INT INT16 INT32 INT64 INT8 LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STR STRING TIMES TRUE VARprograma : pacote importacao declaracaoGlobal funcoes_codigo\n                | pacote importacao funcoes_codigoempty :pacote : PACKAGE ID delimitador \n              | PACKAGE ID NEWLINEimportacao : IMPORT STRING NEWLINE importacao\n                  | IMPORT STRING delimitador importacao\n                  | emptytipo : ID\n            | STR\n            | inteiro\n            | floatinteiro : INT\n               | INT8 \n               | INT16\n               | INT32\n               | INT64float : FLOAT32\n             | FLOAT64tipo_nullavel : tipo\n                     | emptydeclaracaoGlobal : declaracaoExplicita\n                        | declaracaoExplicita NEWLINEdeclaracaoExplicita :  declaracaoExplicitaSimples\n                            | declaracaoExplicitaEmLista\n                            | declaracaoExplicitaEmListaEspacadadeclaracaoExplicitaSimples : VAR tiposDeclaracoesExplicitastiposDeclaracoesExplicitas : declaracaoExplicitaSemValor\n                                  | declaracaoExplicitaComValordeclaracaoExplicitaSemValor : ID tipo declaracaoExplicitaComValor : ID tipo EQUALS constantedeclaracaoExplicitaEmLista : VAR BEG_PAREN listaExplicita END_PARENdeclaracaoExplicitaEmListaEspacada : VAR BEG_PAREN NEWLINE listaExplicita END_PARENlistaExplicita : tiposDeclaracoesExplicitas\n                      | listaExplicitaRecursiva\n                      | tiposDeclaracoesExplicitas NEWLINElistaExplicitaRecursiva : tiposDeclaracoesExplicitas NEWLINE listaExplicitafuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao NEWLINE funcoes_codigo\n                      | funcao\n                      | emptyfuncao : FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACEchamadaFuncao : ID BEG_PAREN parametros END_PARENparametros : parametro_simples\n                  | parametros_tipo_unico\n                  | parametros_varios_tipos\n                  | emptyparametro_simples : ID tipoparametros_tipo_unico : ID COMMA lista_parametros_tipo_unicolista_parametros_tipo_unico : ID COMMA lista_parametros_tipo_unico \n                                   | ID tipoparametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tiposlista_parametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tipos    \n                                     | ID tipocodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas SEMICOLON\n                      | estruturas NEWLINE\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unario\n                  | chamadaFuncao\n                  | expressao_matematica_reduzidadelimitador  : SEMICOLON\n                    | SEMICOLON NEWLINEexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3expressao_n3 : soma \n                    | sub \n                    | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando\n                    | negationnegation : EXCLAMATION operando unario : incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : constante\n                | chamadaFuncao\n                | expParentesesconstante : constante_numero\n                 | constante_string\n                 | constante_booleano\n                 | constante_idconstante_numero : NUMBERconstante_string : STRINGconstante_booleano : TRUE\n                          | FALSEconstante_id : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valoresdeclaracao : declaracaoCurta\n                  | declaracaoExplicitadeclaracaoCurta : lista_identificadores COLON EQUALS lista_valoreslista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressaoexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,2,4,6,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,27,29,30,32,33,34,35,36,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,69,71,72,73,74,75,76,77,78,79,80,98,],[0,-3,-3,-8,-3,-2,-22,-40,-41,-24,-25,-26,-4,-5,-68,-1,-23,-3,-3,-27,-28,-29,-3,-3,-69,-38,-39,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-7,-32,-33,-123,-31,-115,-116,-117,-118,-119,-120,-121,-122,-42,]),'IMPORT':([2,19,20,21,32,33,34,],[5,-4,-5,-68,5,5,-69,]),'FUNC':([2,4,6,8,10,13,14,15,19,20,21,23,24,25,27,29,30,32,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,62,69,71,72,73,74,75,76,77,78,79,80,],[-3,16,-8,16,-22,-24,-25,-26,-4,-5,-68,-23,16,16,-27,-28,-29,-3,-3,-69,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-7,-32,-33,-123,-31,-115,-116,-117,-118,-119,-120,-121,-122,]),'VAR':([2,4,6,19,20,21,32,33,34,54,55,91,95,96,99,101,125,129,130,170,179,200,239,241,],[-3,17,-8,-4,-5,-68,-3,-3,-69,-6,-7,-3,17,-57,-56,-60,17,-58,-59,-3,-3,-3,-3,-3,]),'ID':([3,16,17,28,31,37,39,56,64,65,67,68,81,82,87,89,91,95,96,97,99,101,112,125,126,127,129,130,131,132,158,160,161,170,178,179,183,184,185,186,187,188,189,190,195,196,197,198,199,200,202,205,206,207,209,211,234,239,241,],[7,26,31,31,42,56,31,42,31,71,82,42,87,42,42,82,-3,120,-57,87,-56,-60,159,172,173,174,-58,-59,159,177,192,159,56,-3,159,-3,159,159,159,159,159,159,159,159,159,159,159,159,159,-3,159,159,159,159,159,159,159,-3,-3,]),'STRING':([5,65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[18,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'NEWLINE':([7,10,11,13,14,15,18,21,27,28,29,30,40,42,43,44,45,46,47,48,49,50,51,52,53,62,69,71,72,73,74,75,76,77,78,79,80,91,95,96,98,99,100,101,102,103,104,105,106,107,108,110,111,113,114,115,116,117,118,119,121,122,123,124,129,130,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,170,173,174,175,176,179,191,192,200,203,208,210,212,213,214,215,216,217,218,219,220,221,222,223,226,227,228,229,230,231,232,233,235,236,239,240,241,244,245,],[20,23,25,-24,-25,-26,32,34,-27,39,-28,-29,64,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-33,-123,-31,-115,-116,-117,-118,-119,-120,-121,-122,-3,101,-57,-42,-56,130,-60,-61,-62,-63,-64,-65,-66,-67,-136,-137,-125,-126,-127,-104,-105,-106,-107,-143,-144,-145,-146,-58,-59,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-3,-109,-111,-135,-142,-3,-103,-123,-3,-138,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,-147,-148,-149,-150,-129,-141,-132,-73,-74,-82,-86,-87,-130,-131,-3,-134,-3,-133,-128,]),'SEMICOLON':([7,11,13,14,15,18,27,29,30,42,43,44,45,46,47,48,49,50,51,52,53,62,69,71,72,73,74,75,76,77,78,79,80,98,100,102,103,104,105,106,107,108,110,111,113,114,115,116,117,118,119,121,122,123,124,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,168,173,174,175,176,191,192,203,208,210,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,235,236,240,244,245,],[21,21,-24,-25,-26,21,-27,-28,-29,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-32,-33,-123,-31,-115,-116,-117,-118,-119,-120,-121,-122,-42,129,-61,-62,-63,-64,-65,-66,-67,-136,-137,-125,-126,-127,-104,-105,-106,-107,-143,-144,-145,-146,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,199,-109,-111,-135,-142,-103,-123,-138,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,-147,-148,-149,-150,234,-129,-141,-132,-73,-74,-82,-86,-87,-130,-131,-134,-133,-128,]),'BEG_PAREN':([17,26,112,120,125,131,158,159,160,172,178,183,184,185,186,187,188,189,190,192,195,196,197,198,199,202,205,206,207,209,211,234,],[28,37,160,161,160,160,160,161,160,161,160,160,160,160,160,160,160,160,160,161,160,160,160,160,160,160,160,160,160,160,160,160,]),'END_PAREN':([29,30,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,63,64,66,70,71,72,73,74,75,76,77,78,79,80,83,88,90,92,93,116,117,118,119,128,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,161,162,163,173,174,191,192,193,194,208,210,212,213,214,215,216,217,218,219,229,230,231,232,233,],[-28,-29,-3,62,-34,-35,-9,-30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,68,-44,-45,-46,-47,69,-36,-48,-37,-123,-31,-115,-116,-117,-118,-119,-120,-121,-122,-49,-52,-51,-54,-50,-104,-105,-106,-107,-53,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-3,-108,-110,-109,-111,-103,-123,218,219,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,-73,-74,-82,-86,-87,]),'STR':([31,56,68,82,87,],[44,44,44,44,44,]),'INT':([31,56,68,82,87,],[47,47,47,47,47,]),'INT8':([31,56,68,82,87,],[48,48,48,48,48,]),'INT16':([31,56,68,82,87,],[49,49,49,49,49,]),'INT32':([31,56,68,82,87,],[50,50,50,50,50,]),'INT64':([31,56,68,82,87,],[51,51,51,51,51,]),'FLOAT32':([31,56,68,82,87,],[52,52,52,52,52,]),'FLOAT64':([31,56,68,82,87,],[53,53,53,53,53,]),'EQUALS':([42,43,44,45,46,47,48,49,50,51,52,53,73,74,75,76,77,78,79,80,109,116,117,118,119,120,133,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,164,165,166,167,172,173,174,177,182,183,184,191,192,208,210,212,213,214,215,216,217,218,219,229,230,231,232,233,],[-9,65,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-115,-116,-117,-118,-119,-120,-121,-122,131,-104,-105,-106,-107,-140,178,182,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,195,196,197,198,-123,-109,-111,-139,207,209,211,-103,-123,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,182,182,-82,-86,-87,]),'COMMA':([42,44,45,46,47,48,49,50,51,52,53,56,66,73,74,75,76,77,78,79,80,82,92,109,116,117,118,119,120,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,171,172,173,174,175,176,177,191,192,203,208,210,212,213,214,215,216,217,218,219,227,229,230,231,232,233,],[-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,67,81,-115,-116,-117,-118,-119,-120,-121,-122,89,97,132,-104,-105,-106,-107,-140,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,132,-140,-109,-111,202,-142,-139,-103,-123,202,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,-141,-73,-74,-82,-86,-87,]),'BEG_BRACE':([42,44,45,46,47,48,49,50,51,52,53,68,73,74,75,76,77,78,79,80,84,85,86,116,117,118,119,125,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,169,172,173,174,191,192,208,210,212,213,214,215,216,217,218,219,229,230,231,232,233,237,238,],[-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-3,-115,-116,-117,-118,-119,-120,-121,-122,91,-20,-21,-104,-105,-106,-107,170,179,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,200,-123,-109,-111,-103,-123,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,-73,-74,-82,-86,-87,239,241,]),'NUMBER':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'TRUE':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'FALSE':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TIMES':([73,74,75,76,77,78,79,80,116,117,118,119,120,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,213,214,215,216,217,218,219,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,166,188,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,188,188,-97,-99,-98,-124,-43,]),'DIVISION':([73,74,75,76,77,78,79,80,116,117,118,119,120,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,213,214,215,216,217,218,219,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,167,189,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,189,189,-97,-99,-98,-124,-43,]),'MOD':([73,74,75,76,77,78,79,80,116,117,118,119,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,213,214,215,216,217,218,219,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,190,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,190,190,-97,-99,-98,-124,-43,]),'DIFFERENT':([73,74,75,76,77,78,79,80,116,117,118,119,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,213,214,215,216,217,218,219,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,185,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,-91,-92,-97,-99,-98,-124,-43,]),'PLUS':([73,74,75,76,77,78,79,80,116,117,118,119,120,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,208,210,212,213,214,215,216,217,218,219,231,232,233,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,164,186,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,186,186,186,-91,-92,-97,-99,-98,-124,-43,186,186,186,]),'MINUS':([73,74,75,76,77,78,79,80,116,117,118,119,120,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,208,210,212,213,214,215,216,217,218,219,231,232,233,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,165,187,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,187,187,187,-91,-92,-97,-99,-98,-124,-43,187,187,187,]),'GREATER':([73,74,75,76,77,78,79,80,116,117,118,119,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,208,210,212,213,214,215,216,217,218,219,229,230,231,232,233,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,183,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,183,183,-82,-86,-87,]),'LESS':([73,74,75,76,77,78,79,80,116,117,118,119,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,172,173,174,191,192,208,210,212,213,214,215,216,217,218,219,229,230,231,232,233,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,184,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,-123,-109,-111,-103,-123,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,184,184,-82,-86,-87,]),'AMPERSAND':([73,74,75,76,77,78,79,80,116,117,118,119,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,169,172,173,174,176,180,191,192,193,208,210,212,213,214,215,216,217,218,219,220,221,222,223,224,227,229,230,231,232,233,238,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,180,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,180,-123,-109,-111,180,205,-103,-123,180,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,180,180,180,180,180,180,-73,-74,-82,-86,-87,180,]),'PIPE':([73,74,75,76,77,78,79,80,116,117,118,119,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,169,172,173,174,176,181,191,192,193,208,210,212,213,214,215,216,217,218,219,220,221,222,223,224,227,229,230,231,232,233,238,],[-115,-116,-117,-118,-119,-120,-121,-122,-104,-105,-106,-107,181,-70,-71,-72,-75,-76,-77,-78,-79,-80,-81,-88,-89,-90,-93,-94,-95,-96,-100,-101,-102,-112,-113,-114,-123,-108,-110,181,-123,-109,-111,181,206,-103,-123,181,-84,-85,-83,-91,-92,-97,-99,-98,-124,-43,181,181,181,181,181,181,-73,-74,-82,-86,-87,181,]),'IF':([91,95,96,99,101,129,130,170,179,200,237,239,241,],[-3,112,-57,-56,-60,-58,-59,-3,-3,-3,112,-3,-3,]),'FOR':([91,95,96,99,101,129,130,170,179,200,239,241,],[-3,125,-57,-56,-60,-58,-59,-3,-3,-3,-3,-3,]),'INCREMENT':([91,95,96,99,101,112,120,125,129,130,131,159,160,170,172,178,179,183,184,185,186,187,188,189,190,195,196,197,198,199,200,202,205,206,207,209,211,234,239,241,],[-3,126,-57,-56,-60,126,162,126,-58,-59,126,162,126,-3,162,126,-3,126,126,126,126,126,126,126,126,126,126,126,126,126,-3,126,126,126,126,126,126,126,-3,-3,]),'DECREMENT':([91,95,96,99,101,112,120,125,129,130,131,159,160,170,172,178,179,183,184,185,186,187,188,189,190,195,196,197,198,199,200,202,205,206,207,209,211,234,239,241,],[-3,127,-57,-56,-60,127,163,127,-58,-59,127,163,127,-3,163,127,-3,127,127,127,127,127,127,127,127,127,127,127,127,127,-3,127,127,127,127,127,127,127,-3,-3,]),'END_BRACE':([91,94,95,96,99,101,129,130,170,179,200,201,204,225,239,241,242,243,],[-3,98,-55,-57,-56,-60,-58,-59,-3,-3,-3,226,228,235,-3,-3,244,245,]),'COLON':([109,120,171,172,177,],[133,-140,133,-140,-139,]),'EXCLAMATION':([112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'ELSE':([228,],[237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([2,32,33,],[4,54,55,]),'empty':([2,4,8,24,25,32,33,37,68,91,161,170,179,200,239,241,],[6,12,12,12,12,6,6,61,86,96,61,96,96,96,96,96,]),'declaracaoGlobal':([4,],[8,]),'funcoes_codigo':([4,8,24,25,],[9,22,35,36,]),'declaracaoExplicita':([4,95,125,],[10,111,111,]),'funcao':([4,8,24,25,],[11,11,11,11,]),'declaracaoExplicitaSimples':([4,95,125,],[13,13,13,]),'declaracaoExplicitaEmLista':([4,95,125,],[14,14,14,]),'declaracaoExplicitaEmListaEspacada':([4,95,125,],[15,15,15,]),'delimitador':([7,11,18,],[19,24,33,]),'tiposDeclaracoesExplicitas':([17,28,39,64,],[27,40,40,40,]),'declaracaoExplicitaSemValor':([17,28,39,64,],[29,29,29,29,]),'declaracaoExplicitaComValor':([17,28,39,64,],[30,30,30,30,]),'listaExplicita':([28,39,64,],[38,63,70,]),'listaExplicitaRecursiva':([28,39,64,],[41,41,41,]),'tipo':([31,56,68,82,87,],[43,66,85,90,92,]),'inteiro':([31,56,68,82,87,],[45,45,45,45,45,]),'float':([31,56,68,82,87,],[46,46,46,46,46,]),'parametros':([37,161,],[57,194,]),'parametro_simples':([37,161,],[58,58,]),'parametros_tipo_unico':([37,161,],[59,59,]),'parametros_varios_tipos':([37,161,],[60,60,]),'constante':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[72,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'constante_numero':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'constante_string':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'constante_booleano':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'constante_id':([65,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'lista_parametros_tipo_unico':([67,89,],[83,93,]),'tipo_nullavel':([68,],[84,]),'lista_parametros_varios_tipos':([81,97,],[88,128,]),'codigo':([91,170,179,200,239,241,],[94,201,204,225,242,243,]),'lista_estruturas':([91,170,179,200,239,241,],[95,95,95,95,95,95,]),'estruturasBase':([95,],[99,]),'estruturas':([95,],[100,]),'atribuicao':([95,],[102,]),'declaracao':([95,125,],[103,168,]),'estrutura_if':([95,237,],[104,240,]),'estrutura_for':([95,],[105,]),'unario':([95,112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[106,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'chamadaFuncao':([95,112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[107,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'expressao_matematica_reduzida':([95,],[108,]),'lista_identificadores':([95,125,],[109,171,]),'declaracaoCurta':([95,125,],[110,110,]),'for_CLIKE':([95,],[113,]),'for_infinito':([95,],[114,]),'for_while':([95,],[115,]),'incremento':([95,112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'decremento':([95,112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'pre_incremento':([95,112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'pre_decremento':([95,112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'assign_plus':([95,],[121,]),'assign_minus':([95,],[122,]),'assign_mult':([95,],[123,]),'assign_div':([95,],[124,]),'expressao':([112,125,131,160,178,195,196,197,198,199,202,234,],[134,169,176,193,176,220,221,222,223,224,227,238,]),'and':([112,125,131,160,178,195,196,197,198,199,202,234,],[135,135,135,135,135,135,135,135,135,135,135,135,]),'or':([112,125,131,160,178,195,196,197,198,199,202,234,],[136,136,136,136,136,136,136,136,136,136,136,136,]),'expressao_n2':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[137,137,137,137,137,137,137,137,137,137,137,229,230,137,]),'equals':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'different':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'greater':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'less':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'greater_or_equal':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'less_or_equal':([112,125,131,160,178,195,196,197,198,199,202,205,206,234,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'expressao_n3':([112,125,131,160,178,183,184,185,195,196,197,198,199,202,205,206,207,209,211,234,],[144,144,144,144,144,208,210,212,144,144,144,144,144,144,144,144,231,232,233,144,]),'soma':([112,125,131,160,178,183,184,185,195,196,197,198,199,202,205,206,207,209,211,234,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'sub':([112,125,131,160,178,183,184,185,195,196,197,198,199,202,205,206,207,209,211,234,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'expressao_n4':([112,125,131,160,178,183,184,185,186,187,195,196,197,198,199,202,205,206,207,209,211,234,],[147,147,147,147,147,147,147,147,213,214,147,147,147,147,147,147,147,147,147,147,147,147,]),'mult':([112,125,131,160,178,183,184,185,186,187,195,196,197,198,199,202,205,206,207,209,211,234,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'div':([112,125,131,160,178,183,184,185,186,187,195,196,197,198,199,202,205,206,207,209,211,234,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'mod':([112,125,131,160,178,183,184,185,186,187,195,196,197,198,199,202,205,206,207,209,211,234,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'expressao_n5':([112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[151,151,151,151,151,151,151,151,151,151,215,216,217,151,151,151,151,151,151,151,151,151,151,151,151,]),'operando':([112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[153,153,153,191,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'negation':([112,125,131,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'expParenteses':([112,125,131,158,160,178,183,184,185,186,187,188,189,190,195,196,197,198,199,202,205,206,207,209,211,234,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'lista_valores':([131,178,],[175,203,]),'estrutura_else':([228,],[236,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote importacao declaracaoGlobal funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',12),
  ('programa -> pacote importacao funcoes_codigo','programa',3,'p_programa','analiseSintatica.py',13),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',20),
  ('pacote -> PACKAGE ID delimitador','pacote',3,'p_pacote','analiseSintatica.py',24),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',25),
  ('importacao -> IMPORT STRING NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',29),
  ('importacao -> IMPORT STRING delimitador importacao','importacao',4,'p_importacao','analiseSintatica.py',30),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',31),
  ('tipo -> ID','tipo',1,'p_tipo','analiseSintatica.py',41),
  ('tipo -> STR','tipo',1,'p_tipo','analiseSintatica.py',42),
  ('tipo -> inteiro','tipo',1,'p_tipo','analiseSintatica.py',43),
  ('tipo -> float','tipo',1,'p_tipo','analiseSintatica.py',44),
  ('inteiro -> INT','inteiro',1,'p_inteiro','analiseSintatica.py',48),
  ('inteiro -> INT8','inteiro',1,'p_inteiro','analiseSintatica.py',49),
  ('inteiro -> INT16','inteiro',1,'p_inteiro','analiseSintatica.py',50),
  ('inteiro -> INT32','inteiro',1,'p_inteiro','analiseSintatica.py',51),
  ('inteiro -> INT64','inteiro',1,'p_inteiro','analiseSintatica.py',52),
  ('float -> FLOAT32','float',1,'p_float','analiseSintatica.py',56),
  ('float -> FLOAT64','float',1,'p_float','analiseSintatica.py',57),
  ('tipo_nullavel -> tipo','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',61),
  ('tipo_nullavel -> empty','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',62),
  ('declaracaoGlobal -> declaracaoExplicita','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',66),
  ('declaracaoGlobal -> declaracaoExplicita NEWLINE','declaracaoGlobal',2,'p_declaracaoGlobal','analiseSintatica.py',67),
  ('declaracaoExplicita -> declaracaoExplicitaSimples','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',71),
  ('declaracaoExplicita -> declaracaoExplicitaEmLista','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',72),
  ('declaracaoExplicita -> declaracaoExplicitaEmListaEspacada','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',73),
  ('declaracaoExplicitaSimples -> VAR tiposDeclaracoesExplicitas','declaracaoExplicitaSimples',2,'p_declaracaoExplicitaSimples','analiseSintatica.py',77),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaSemValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',81),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaComValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',82),
  ('declaracaoExplicitaSemValor -> ID tipo','declaracaoExplicitaSemValor',2,'p_declaracaoExplicitaSemValor','analiseSintatica.py',86),
  ('declaracaoExplicitaComValor -> ID tipo EQUALS constante','declaracaoExplicitaComValor',4,'p_declaracaoExplicitaComValor','analiseSintatica.py',90),
  ('declaracaoExplicitaEmLista -> VAR BEG_PAREN listaExplicita END_PAREN','declaracaoExplicitaEmLista',4,'p_declaracaoExplicitaEmLista','analiseSintatica.py',94),
  ('declaracaoExplicitaEmListaEspacada -> VAR BEG_PAREN NEWLINE listaExplicita END_PAREN','declaracaoExplicitaEmListaEspacada',5,'p_declaracaoExplicitaEmListaEspacada','analiseSintatica.py',98),
  ('listaExplicita -> tiposDeclaracoesExplicitas','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',102),
  ('listaExplicita -> listaExplicitaRecursiva','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',103),
  ('listaExplicita -> tiposDeclaracoesExplicitas NEWLINE','listaExplicita',2,'p_listaExplicita','analiseSintatica.py',104),
  ('listaExplicitaRecursiva -> tiposDeclaracoesExplicitas NEWLINE listaExplicita','listaExplicitaRecursiva',3,'p_listaExplicitaRecursiva','analiseSintatica.py',112),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',118),
  ('funcoes_codigo -> funcao NEWLINE funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',119),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',120),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',121),
  ('funcao -> FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',125),
  ('chamadaFuncao -> ID BEG_PAREN parametros END_PAREN','chamadaFuncao',4,'p_chamadaFuncao','analiseSintatica.py',129),
  ('parametros -> parametro_simples','parametros',1,'p_parametros','analiseSintatica.py',133),
  ('parametros -> parametros_tipo_unico','parametros',1,'p_parametros','analiseSintatica.py',134),
  ('parametros -> parametros_varios_tipos','parametros',1,'p_parametros','analiseSintatica.py',135),
  ('parametros -> empty','parametros',1,'p_parametros','analiseSintatica.py',136),
  ('parametro_simples -> ID tipo','parametro_simples',2,'p_parametro_simples','analiseSintatica.py',140),
  ('parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','parametros_tipo_unico',3,'p_parametros_tipo_unico','analiseSintatica.py',144),
  ('lista_parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','lista_parametros_tipo_unico',3,'p_lista_parametros_tipo_unico','analiseSintatica.py',148),
  ('lista_parametros_tipo_unico -> ID tipo','lista_parametros_tipo_unico',2,'p_lista_parametros_tipo_unico','analiseSintatica.py',149),
  ('parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','parametros_varios_tipos',4,'p_parametros_varios_tipos','analiseSintatica.py',156),
  ('lista_parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','lista_parametros_varios_tipos',4,'p_lista_parametros_varios_tipos','analiseSintatica.py',160),
  ('lista_parametros_varios_tipos -> ID tipo','lista_parametros_varios_tipos',2,'p_lista_parametros_varios_tipos','analiseSintatica.py',161),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',168),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',172),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',173),
  ('estruturasBase -> estruturas SEMICOLON','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',183),
  ('estruturasBase -> estruturas NEWLINE','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',184),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',185),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',190),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',191),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',192),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',193),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',194),
  ('estruturas -> chamadaFuncao','estruturas',1,'p_estruturas','analiseSintatica.py',195),
  ('estruturas -> expressao_matematica_reduzida','estruturas',1,'p_estruturas','analiseSintatica.py',196),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',201),
  ('delimitador -> SEMICOLON NEWLINE','delimitador',2,'p_delimitador','analiseSintatica.py',202),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',206),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',207),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',208),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',212),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',216),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',220),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',221),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',222),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',223),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',224),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',225),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',226),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',230),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',234),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',238),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',242),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',246),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',250),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',254),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',255),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',256),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',262),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',266),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',270),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',271),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',272),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',273),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',277),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',281),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',285),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',289),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',290),
  ('expressao_n5 -> negation','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',291),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',295),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',299),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',300),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',301),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',302),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',306),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',310),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',314),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',318),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',322),
  ('operando -> chamadaFuncao','operando',1,'p_operando','analiseSintatica.py',323),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',324),
  ('constante -> constante_numero','constante',1,'p_constante','analiseSintatica.py',328),
  ('constante -> constante_string','constante',1,'p_constante','analiseSintatica.py',329),
  ('constante -> constante_booleano','constante',1,'p_constante','analiseSintatica.py',330),
  ('constante -> constante_id','constante',1,'p_constante','analiseSintatica.py',331),
  ('constante_numero -> NUMBER','constante_numero',1,'p_constante_numero','analiseSintatica.py',335),
  ('constante_string -> STRING','constante_string',1,'p_constante_string','analiseSintatica.py',339),
  ('constante_booleano -> TRUE','constante_booleano',1,'p_constante_booleano','analiseSintatica.py',343),
  ('constante_booleano -> FALSE','constante_booleano',1,'p_constante_booleano','analiseSintatica.py',344),
  ('constante_id -> ID','constante_id',1,'p_constante_id','analiseSintatica.py',348),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',352),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',356),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',357),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',358),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',362),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',366),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',370),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',375),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',376),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',383),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',384),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',391),
  ('declaracao -> declaracaoCurta','declaracao',1,'p_declaracao','analiseSintatica.py',395),
  ('declaracao -> declaracaoExplicita','declaracao',1,'p_declaracao','analiseSintatica.py',396),
  ('declaracaoCurta -> lista_identificadores COLON EQUALS lista_valores','declaracaoCurta',4,'p_declaracaoCurta','analiseSintatica.py',400),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',404),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',405),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',412),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',413),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',420),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',421),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',422),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',423),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',427),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',431),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',435),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',439),
]
