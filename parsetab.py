
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FOR FUNC GREATER ID IF IMPORT INCREMENT LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STRING TIMES TRUE VARprograma : pacote NEWLINE importacao declaracaoGlobal NEWLINE funcoes_codigofuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao\n                      | emptyempty :listaGlobal : ID ID EQUALS constante NEWLINE listaGlobal \n                   | ID ID NEWLINE listaGlobal\n                   | ID ID EQUALS constante\n                   | ID ID\n                   | emptydeclaracaoGlobal : VAR ID ID EQUALS constante\n                        | VAR ID ID\n                        | VAR BEG_PAREN listaGlobal END_PAREN\n                        | VAR BEG_PAREN NEWLINE listaGlobal END_PAREN\n                        | emptypacote : PACKAGE IDimportacao : IMPORT ID NEWLINE importacao\n                  | emptyfuncao : FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACEtipo_retorno : ID\n                    | emptycodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas delimitador\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unariodelimitador : NEWLINE\n                   | SEMICOLONexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3 expressao_n3 : soma \n                     | sub \n                     | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando unario : negation\n               | incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementonegation : EXCLAMATION operandoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : identificador\n                | constante\n                | expParentesesconstante : NUMBER\n                 | STRING\n                 | TRUE\n                 | FALSEidentificador : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valores\n                  | expressao_matematica_reduzidaexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaodeclaracao : lista_identificadores COLON EQUALS lista_valoreslista_parametros : lista_identificadores\n                        | emptylista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,13,17,18,19,27,28,29,35,63,],[0,-5,-1,-3,-4,-5,-32,-33,-2,-19,]),'NEWLINE':([2,4,5,6,8,9,11,12,15,16,18,21,26,28,29,32,34,37,38,39,40,41,42,49,59,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,78,79,80,81,82,84,85,86,87,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,128,131,132,133,134,135,136,138,156,159,164,166,168,169,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,190,191,194,195,196,199,200,],[4,-5,-16,-5,-18,13,-15,16,23,-5,28,-12,-17,-32,-33,-13,44,-11,-79,-80,-81,-82,-14,53,-5,66,-24,-19,-23,28,-26,-27,-28,-29,-30,-31,-96,-85,-86,-87,-66,-67,-68,-69,-70,-97,-98,-99,-100,-25,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-5,-71,-83,-73,-75,-95,-111,-5,-5,-105,-48,-49,-47,-55,-56,-61,-63,-62,-84,-101,-102,-103,-104,-89,-110,-92,-37,-38,-46,-50,-51,-90,-91,-5,-94,-5,-93,-88,]),'ID':([3,7,10,14,15,20,23,24,28,29,36,44,51,52,53,59,61,62,64,66,74,88,89,90,91,92,93,119,128,137,138,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,161,162,163,165,167,189,194,196,],[5,12,14,21,24,30,24,34,-32,-33,45,24,54,57,24,-5,83,-24,-23,-26,118,130,132,133,134,-25,118,118,-5,118,-5,118,118,118,118,118,118,118,118,118,118,118,118,118,-5,118,118,118,118,118,118,118,-5,-5,]),'IMPORT':([4,16,],[7,7,]),'VAR':([4,6,8,16,26,],[-5,10,-18,-5,-17,]),'BEG_PAREN':([10,30,74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[15,36,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'FUNC':([13,27,28,29,],[20,20,-32,-33,]),'END_PAREN':([15,22,23,25,33,34,36,38,39,40,41,44,45,46,47,48,49,50,53,57,58,78,79,80,81,82,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,131,132,133,134,150,164,166,168,169,170,171,172,173,174,184,185,186,187,188,],[-5,32,-5,-10,42,-9,-5,-79,-80,-81,-82,-5,-109,51,-106,-107,-8,-7,-5,-108,-6,-66,-67,-68,-69,-70,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-71,-83,-73,-75,174,-48,-49,-47,-55,-56,-61,-63,-62,-84,-37,-38,-46,-50,-51,]),'SEMICOLON':([18,38,39,40,41,63,65,67,68,69,70,71,73,75,76,77,78,79,80,81,82,84,85,86,87,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,126,131,132,133,134,135,136,159,164,166,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,190,191,195,199,200,],[29,-79,-80,-81,-82,-19,29,-27,-28,-29,-30,-31,-96,-85,-86,-87,-66,-67,-68,-69,-70,-97,-98,-99,-100,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,155,-71,-83,-73,-75,-95,-111,-105,-48,-49,-47,-55,-56,-61,-63,-62,-84,-101,-102,-103,-104,189,-89,-110,-92,-37,-38,-46,-50,-51,-90,-91,-94,-93,-88,]),'EQUALS':([21,34,38,39,40,41,57,72,78,79,80,81,82,83,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,130,131,132,133,134,141,142,143,164,166,168,169,170,171,172,173,174,184,185,186,187,188,],[31,43,-79,-80,-81,-82,-108,93,-66,-67,-68,-69,-70,-109,137,141,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,151,152,153,154,-83,-71,-83,-73,-75,163,165,167,-48,-49,-47,-55,-56,-61,-63,-62,-84,141,141,-46,-50,-51,]),'IF':([28,29,59,61,62,64,66,92,128,138,156,192,194,196,],[-32,-33,-5,74,-24,-23,-26,-25,-5,-5,-5,74,-5,-5,]),'FOR':([28,29,59,61,62,64,66,92,128,138,156,194,196,],[-32,-33,-5,88,-24,-23,-26,-25,-5,-5,-5,-5,-5,]),'EXCLAMATION':([28,29,59,61,62,64,66,74,88,92,93,119,128,137,138,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,161,162,163,165,167,189,194,196,],[-32,-33,-5,89,-24,-23,-26,89,89,-25,89,89,-5,89,-5,89,89,89,89,89,89,89,89,89,89,89,89,89,-5,89,89,89,89,89,89,89,-5,-5,]),'INCREMENT':([28,29,59,61,62,64,66,74,83,88,92,93,118,119,128,130,137,138,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,161,162,163,165,167,189,194,196,],[-32,-33,-5,90,-24,-23,-26,90,120,90,-25,90,120,90,-5,120,90,-5,90,90,90,90,90,90,90,90,90,90,90,90,90,-5,90,90,90,90,90,90,90,-5,-5,]),'DECREMENT':([28,29,59,61,62,64,66,74,83,88,92,93,118,119,128,130,137,138,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,161,162,163,165,167,189,194,196,],[-32,-33,-5,91,-24,-23,-26,91,121,91,-25,91,121,91,-5,121,91,-5,91,91,91,91,91,91,91,91,91,91,91,91,91,-5,91,91,91,91,91,91,91,-5,-5,]),'END_BRACE':([28,29,59,60,61,62,64,66,92,128,138,156,157,160,180,194,196,197,198,],[-32,-33,-5,63,-22,-24,-23,-26,-25,-5,-5,-5,181,183,190,-5,-5,199,200,]),'NUMBER':([31,43,74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'STRING':([31,43,74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TRUE':([31,43,74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FALSE':([31,43,74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TIMES':([38,39,40,41,78,79,80,81,82,83,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,169,170,171,172,173,174,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,124,147,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,147,147,-61,-63,-62,-84,]),'DIVISION':([38,39,40,41,78,79,80,81,82,83,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,169,170,171,172,173,174,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,125,148,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,148,148,-61,-63,-62,-84,]),'MOD':([38,39,40,41,78,79,80,81,82,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,169,170,171,172,173,174,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,149,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,149,149,-61,-63,-62,-84,]),'DIFFERENT':([38,39,40,41,78,79,80,81,82,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,169,170,171,172,173,174,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,144,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,-55,-56,-61,-63,-62,-84,]),'PLUS':([38,39,40,41,78,79,80,81,82,83,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,164,166,168,169,170,171,172,173,174,186,187,188,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,122,145,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,145,145,145,-55,-56,-61,-63,-62,-84,145,145,145,]),'MINUS':([38,39,40,41,78,79,80,81,82,83,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,164,166,168,169,170,171,172,173,174,186,187,188,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,123,146,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,146,146,146,-55,-56,-61,-63,-62,-84,146,146,146,]),'GREATER':([38,39,40,41,78,79,80,81,82,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,164,166,168,169,170,171,172,173,174,184,185,186,187,188,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,142,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,-48,-49,-47,-55,-56,-61,-63,-62,-84,142,142,-46,-50,-51,]),'LESS':([38,39,40,41,78,79,80,81,82,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,130,131,132,133,134,164,166,168,169,170,171,172,173,174,184,185,186,187,188,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,143,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,-83,-71,-83,-73,-75,-48,-49,-47,-55,-56,-61,-63,-62,-84,143,143,-46,-50,-51,]),'BEG_BRACE':([38,39,40,41,51,54,55,56,78,79,80,81,82,88,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,127,130,131,132,133,134,164,166,168,169,170,171,172,173,174,184,185,186,187,188,192,193,],[-79,-80,-81,-82,-5,-20,59,-21,-66,-67,-68,-69,-70,128,138,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,156,-83,-71,-83,-73,-75,-48,-49,-47,-55,-56,-61,-63,-62,-84,-37,-38,-46,-50,-51,194,196,]),'AMPERSAND':([38,39,40,41,78,79,80,81,82,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,127,130,131,132,133,134,136,139,150,164,166,168,169,170,171,172,173,174,175,176,177,178,179,182,184,185,186,187,188,193,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,139,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,139,-83,-71,-83,-73,-75,139,161,139,-48,-49,-47,-55,-56,-61,-63,-62,-84,139,139,139,139,139,139,-37,-38,-46,-50,-51,139,]),'PIPE':([38,39,40,41,78,79,80,81,82,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,127,130,131,132,133,134,136,140,150,164,166,168,169,170,171,172,173,174,175,176,177,178,179,182,184,185,186,187,188,193,],[-79,-80,-81,-82,-66,-67,-68,-69,-70,140,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,140,-83,-71,-83,-73,-75,140,162,140,-48,-49,-47,-55,-56,-61,-63,-62,-84,140,140,140,140,140,140,-37,-38,-46,-50,-51,140,]),'COMMA':([38,39,40,41,45,47,57,72,78,79,80,81,82,83,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,129,130,131,132,133,134,135,136,159,164,166,168,169,170,171,172,173,174,182,184,185,186,187,188,],[-79,-80,-81,-82,-109,52,-108,52,-66,-67,-68,-69,-70,-109,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-52,-53,-54,-57,-58,-59,-60,-64,-65,-76,-77,-78,-83,-72,-74,52,-109,-71,-83,-73,-75,158,-111,158,-48,-49,-47,-55,-56,-61,-63,-62,-84,-110,-37,-38,-46,-50,-51,]),'COLON':([57,72,83,129,130,],[-108,94,-109,94,-109,]),'ELSE':([183,],[192,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([4,16,],[6,26,]),'empty':([4,6,13,15,16,23,27,36,44,51,53,59,128,138,156,194,196,],[8,11,19,25,8,25,19,48,25,56,25,62,62,62,62,62,62,]),'declaracaoGlobal':([6,],[9,]),'funcoes_codigo':([13,27,],[17,35,]),'funcao':([13,27,],[18,18,]),'listaGlobal':([15,23,44,53,],[22,33,50,58,]),'delimitador':([18,65,],[27,92,]),'constante':([31,43,74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[37,49,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'lista_parametros':([36,],[46,]),'lista_identificadores':([36,61,88,],[47,72,129,]),'tipo_retorno':([51,],[55,]),'codigo':([59,128,138,156,194,196,],[60,157,160,180,197,198,]),'lista_estruturas':([59,128,138,156,194,196,],[61,61,61,61,61,61,]),'estruturasBase':([61,],[64,]),'estruturas':([61,],[65,]),'atribuicao':([61,],[67,]),'declaracao':([61,88,],[68,126,]),'estrutura_if':([61,192,],[69,195,]),'estrutura_for':([61,],[70,]),'unario':([61,74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[71,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'expressao_matematica_reduzida':([61,],[73,]),'for_CLIKE':([61,],[75,]),'for_infinito':([61,],[76,]),'for_while':([61,],[77,]),'negation':([61,74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'incremento':([61,74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'decremento':([61,74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'pre_incremento':([61,74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'pre_decremento':([61,74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'assign_plus':([61,],[84,]),'assign_minus':([61,],[85,]),'assign_mult':([61,],[86,]),'assign_div':([61,],[87,]),'expressao':([74,88,93,119,137,151,152,153,154,155,158,189,],[95,127,136,150,136,175,176,177,178,179,182,193,]),'and':([74,88,93,119,137,151,152,153,154,155,158,189,],[96,96,96,96,96,96,96,96,96,96,96,96,]),'or':([74,88,93,119,137,151,152,153,154,155,158,189,],[97,97,97,97,97,97,97,97,97,97,97,97,]),'expressao_n2':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[98,98,98,98,98,98,98,98,98,98,98,184,185,98,]),'equals':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'different':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'greater':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'less':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'greater_or_equal':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'less_or_equal':([74,88,93,119,137,151,152,153,154,155,158,161,162,189,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'expressao_n3':([74,88,93,119,137,142,143,144,151,152,153,154,155,158,161,162,163,165,167,189,],[105,105,105,105,105,164,166,168,105,105,105,105,105,105,105,105,186,187,188,105,]),'soma':([74,88,93,119,137,142,143,144,151,152,153,154,155,158,161,162,163,165,167,189,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'sub':([74,88,93,119,137,142,143,144,151,152,153,154,155,158,161,162,163,165,167,189,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'expressao_n4':([74,88,93,119,137,142,143,144,145,146,151,152,153,154,155,158,161,162,163,165,167,189,],[108,108,108,108,108,108,108,108,169,170,108,108,108,108,108,108,108,108,108,108,108,108,]),'mult':([74,88,93,119,137,142,143,144,145,146,151,152,153,154,155,158,161,162,163,165,167,189,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'div':([74,88,93,119,137,142,143,144,145,146,151,152,153,154,155,158,161,162,163,165,167,189,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'mod':([74,88,93,119,137,142,143,144,145,146,151,152,153,154,155,158,161,162,163,165,167,189,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'expressao_n5':([74,88,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[112,112,112,112,112,112,112,112,112,112,171,172,173,112,112,112,112,112,112,112,112,112,112,112,112,]),'operando':([74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[114,114,131,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'identificador':([74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'expParenteses':([74,88,89,93,119,137,142,143,144,145,146,147,148,149,151,152,153,154,155,158,161,162,163,165,167,189,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'lista_valores':([93,137,],[135,159,]),'estrutura_else':([183,],[191,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote NEWLINE importacao declaracaoGlobal NEWLINE funcoes_codigo','programa',6,'p_programa','analiseSintatica.py',11),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',15),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',16),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',17),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',21),
  ('listaGlobal -> ID ID EQUALS constante NEWLINE listaGlobal','listaGlobal',6,'p_listaGlobal','analiseSintatica.py',25),
  ('listaGlobal -> ID ID NEWLINE listaGlobal','listaGlobal',4,'p_listaGlobal','analiseSintatica.py',26),
  ('listaGlobal -> ID ID EQUALS constante','listaGlobal',4,'p_listaGlobal','analiseSintatica.py',27),
  ('listaGlobal -> ID ID','listaGlobal',2,'p_listaGlobal','analiseSintatica.py',28),
  ('listaGlobal -> empty','listaGlobal',1,'p_listaGlobal','analiseSintatica.py',29),
  ('declaracaoGlobal -> VAR ID ID EQUALS constante','declaracaoGlobal',5,'p_declaracaoGlobal','analiseSintatica.py',39),
  ('declaracaoGlobal -> VAR ID ID','declaracaoGlobal',3,'p_declaracaoGlobal','analiseSintatica.py',40),
  ('declaracaoGlobal -> VAR BEG_PAREN listaGlobal END_PAREN','declaracaoGlobal',4,'p_declaracaoGlobal','analiseSintatica.py',41),
  ('declaracaoGlobal -> VAR BEG_PAREN NEWLINE listaGlobal END_PAREN','declaracaoGlobal',5,'p_declaracaoGlobal','analiseSintatica.py',42),
  ('declaracaoGlobal -> empty','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',43),
  ('pacote -> PACKAGE ID','pacote',2,'p_pacote','analiseSintatica.py',54),
  ('importacao -> IMPORT ID NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',58),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',59),
  ('funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',63),
  ('tipo_retorno -> ID','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',69),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',70),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',75),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',80),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',81),
  ('estruturasBase -> estruturas delimitador','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',91),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',92),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',97),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',98),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',99),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',100),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',101),
  ('delimitador -> NEWLINE','delimitador',1,'p_delimitador','analiseSintatica.py',106),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',107),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',110),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',111),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',112),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',116),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',120),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',124),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',125),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',126),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',127),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',128),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',129),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',130),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',134),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',138),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',142),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',146),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',150),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',154),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',158),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',159),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',160),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',166),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',170),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',174),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',175),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',176),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',177),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',183),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',187),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',191),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',195),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',196),
  ('unario -> negation','unario',1,'p_unario','analiseSintatica.py',200),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',201),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',202),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',203),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',204),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',208),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',212),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',216),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',220),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',224),
  ('operando -> identificador','operando',1,'p_operando','analiseSintatica.py',228),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',229),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',230),
  ('constante -> NUMBER','constante',1,'p_constante','analiseSintatica.py',234),
  ('constante -> STRING','constante',1,'p_constante','analiseSintatica.py',235),
  ('constante -> TRUE','constante',1,'p_constante','analiseSintatica.py',236),
  ('constante -> FALSE','constante',1,'p_constante','analiseSintatica.py',237),
  ('identificador -> ID','identificador',1,'p_identificador','analiseSintatica.py',241),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',248),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',252),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',253),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',254),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',258),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',262),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',266),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',271),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',272),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',282),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',283),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',293),
  ('atribuicao -> expressao_matematica_reduzida','atribuicao',1,'p_atribuicao','analiseSintatica.py',294),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',301),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',302),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',303),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',304),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',308),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',312),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',316),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',320),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores','declaracao',4,'p_declaracao','analiseSintatica.py',324),
  ('lista_parametros -> lista_identificadores','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',331),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',332),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',339),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',340),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',347),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',348),
]
