
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FOR FUNC GREATER ID IF IMPORT INCREMENT LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STRING TIMES TRUEprograma : pacote NEWLINE importacao funcoes_codigofuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao\n                      | codigo delimitador funcoes_codigo\n                      | codigoempty :pacote : PACKAGE ID NEWLINEimportacao : IMPORT ID NEWLINE importacao\n                  | emptyfuncao : FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACEtipo_retorno : ID\n                    | emptycodigo : estruturas delimitador codigo\n              | estruturas\n              | delimitador codigo\n              | delimitadordelimitador : caracteresQuebras delimitador \n                   | caracteresQuebrascaracteresQuebras : NEWLINE\n                         | SEMICOLONestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unarioexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3 expressao_n3 : soma \n                     | sub \n                     | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando unario : negation\n               | incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementonegation : EXCLAMATION operandoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : identificador\n                | NUMBER \n                | STRING \n                | TRUE\n                | FALSE\n                | expParentesesidentificador : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valores\n                  | expressao_matematica_reduzidaexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaodeclaracao : lista_identificadores COLON EQUALS lista_valoreslista_parametros : lista_identificadores\n                        | emptylista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,10,11,12,13,14,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,46,49,50,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,95,96,98,99,105,106,107,131,132,133,134,136,141,143,145,146,147,148,149,150,151,154,156,157,158,159,160,161,162,164,168,173,178,179,180,],[0,-19,-1,-3,-16,-5,-14,-21,-22,-23,-24,-25,-18,-87,-76,-77,-78,-58,-59,-60,-61,-62,-20,-88,-89,-90,-91,-15,-64,-66,-17,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-63,-74,-65,-67,-2,-4,-13,-86,-102,-92,-93,-94,-95,-96,-40,-41,-39,-47,-48,-53,-55,-54,-75,-80,-101,-83,-29,-30,-38,-42,-43,-81,-82,-85,-10,-84,-79,]),'NEWLINE':([2,4,5,6,8,9,10,12,13,14,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,49,50,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,93,94,95,96,97,105,106,107,110,124,126,131,132,133,134,136,141,143,145,146,147,148,149,150,151,154,156,157,158,159,160,161,162,164,168,171,172,173,174,178,179,180,],[4,-6,9,10,-9,-7,-19,10,10,10,10,-21,-22,-23,-24,-25,10,-87,-76,-77,-78,-58,-59,-60,-61,-62,-20,-88,-89,-90,-91,97,10,-15,10,-64,-66,10,-17,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,10,-63,-74,-65,-67,-6,-13,-86,-102,10,10,-8,-92,-93,-94,-95,-96,-40,-41,-39,-47,-48,-53,-55,-54,-75,-80,-101,-83,-29,-30,-38,-42,-43,-81,-82,10,10,-85,10,-10,-84,-79,]),'ID':([3,4,6,7,8,10,13,15,23,26,35,40,41,42,43,45,47,55,56,57,59,87,90,97,100,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,126,135,138,139,140,142,144,155,163,171,172,174,],[5,-6,16,44,-9,-19,16,48,-18,86,-20,92,94,95,96,16,16,16,-17,86,109,86,16,-6,127,86,86,86,86,86,16,86,86,86,86,86,86,86,86,86,16,-8,86,86,86,86,86,86,165,86,16,16,16,]),'IMPORT':([4,97,],[7,7,]),'FUNC':([4,6,8,10,23,35,45,47,56,97,126,],[-6,15,-9,-19,-18,-20,15,15,-17,-6,-8,]),'IF':([4,6,8,10,13,23,35,45,47,55,56,90,97,110,124,126,169,171,172,174,],[-6,26,-9,-19,26,-18,-20,26,26,26,-17,26,-6,26,26,-8,26,26,26,26,]),'SEMICOLON':([4,6,8,10,12,13,14,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,45,46,47,49,50,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,94,95,96,97,105,106,107,110,124,126,131,132,133,134,136,141,143,145,146,147,148,149,150,151,152,154,156,157,158,159,160,161,162,164,168,171,172,173,174,178,179,180,],[-6,35,-9,-19,35,35,35,35,-21,-22,-23,-24,-25,35,-87,-76,-77,-78,-58,-59,-60,-61,-62,-20,-88,-89,-90,-91,35,-15,35,-64,-66,35,-17,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,123,35,-63,-74,-65,-67,-6,-13,-86,-102,35,35,-8,-92,-93,-94,-95,-96,-40,-41,-39,-47,-48,-53,-55,-54,-75,163,-80,-101,-83,-29,-30,-38,-42,-43,-81,-82,35,35,-85,35,-10,-84,-79,]),'FOR':([4,6,8,10,13,23,35,45,47,55,56,90,97,110,124,126,171,172,174,],[-6,40,-9,-19,40,-18,-20,40,40,40,-17,40,-6,40,40,-8,40,40,40,]),'EXCLAMATION':([4,6,8,10,13,23,26,35,40,45,47,55,56,57,87,90,97,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,126,135,138,139,140,142,144,163,171,172,174,],[-6,41,-9,-19,41,-18,41,-20,41,41,41,41,-17,41,41,41,-6,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-8,41,41,41,41,41,41,41,41,41,41,]),'INCREMENT':([4,6,8,10,13,16,23,26,35,40,45,47,55,56,57,86,87,90,92,97,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,126,135,138,139,140,142,144,163,171,172,174,],[-6,42,-9,-19,42,49,-18,42,-20,42,42,42,42,-17,42,49,42,42,49,-6,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-8,42,42,42,42,42,42,42,42,42,42,]),'DECREMENT':([4,6,8,10,13,16,23,26,35,40,45,47,55,56,57,86,87,90,92,97,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,126,135,138,139,140,142,144,163,171,172,174,],[-6,43,-9,-19,43,50,-18,43,-20,43,43,43,43,-17,43,50,43,43,50,-6,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-8,43,43,43,43,43,43,43,43,43,43,]),'END_BRACE':([10,13,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,46,49,50,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,95,96,105,106,107,125,131,132,133,134,136,137,141,143,145,146,147,148,149,150,151,153,154,156,157,158,159,160,161,162,164,168,173,175,176,177,179,180,],[-19,-16,-14,-21,-22,-23,-24,-25,-18,-87,-76,-77,-78,-58,-59,-60,-61,-62,-20,-88,-89,-90,-91,-15,-64,-66,-17,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-63,-74,-65,-67,-13,-86,-102,154,-92,-93,-94,-95,-96,157,-40,-41,-39,-47,-48,-53,-55,-54,-75,164,-80,-101,-83,-29,-30,-38,-42,-43,-81,-82,-85,178,179,180,-84,-79,]),'EQUALS':([16,24,30,31,32,33,34,49,50,51,52,53,54,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,109,113,114,115,141,143,145,146,147,148,149,150,151,158,159,160,161,162,],[-100,57,-58,-59,-60,-61,-62,-64,-66,101,102,103,104,108,113,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,-99,140,142,144,-40,-41,-39,-47,-48,-53,-55,-54,-75,113,113,-38,-42,-43,]),'COLON':([16,24,91,92,109,],[-100,58,58,-100,-99,]),'COMMA':([16,24,30,31,32,33,34,49,50,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,106,107,109,127,129,136,141,143,145,146,147,148,149,150,151,156,158,159,160,161,162,],[-100,59,-58,-59,-60,-61,-62,-64,-66,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,59,-100,-63,-74,-65,-67,135,-102,-99,-100,59,135,-40,-41,-39,-47,-48,-53,-55,-54,-75,-101,-29,-30,-38,-42,-43,]),'PLUS':([16,30,31,32,33,34,49,50,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,141,143,145,146,147,148,149,150,151,160,161,162,],[51,-58,-59,-60,-61,-62,-64,-66,117,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,117,117,117,-47,-48,-53,-55,-54,-75,117,117,117,]),'MINUS':([16,30,31,32,33,34,49,50,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,141,143,145,146,147,148,149,150,151,160,161,162,],[52,-58,-59,-60,-61,-62,-64,-66,118,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,118,118,118,-47,-48,-53,-55,-54,-75,118,118,118,]),'TIMES':([16,30,31,32,33,34,49,50,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,146,147,148,149,150,151,],[53,-58,-59,-60,-61,-62,-64,-66,119,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,119,119,-53,-55,-54,-75,]),'DIVISION':([16,30,31,32,33,34,49,50,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,146,147,148,149,150,151,],[54,-58,-59,-60,-61,-62,-64,-66,120,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,120,120,-53,-55,-54,-75,]),'NUMBER':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'STRING':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'TRUE':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'FALSE':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'BEG_PAREN':([26,40,41,48,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[87,87,87,100,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'MOD':([30,31,32,33,34,49,50,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,146,147,148,149,150,151,],[-58,-59,-60,-61,-62,-64,-66,121,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,121,121,-53,-55,-54,-75,]),'DIFFERENT':([30,31,32,33,34,49,50,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,146,147,148,149,150,151,],[-58,-59,-60,-61,-62,-64,-66,116,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,-47,-48,-53,-55,-54,-75,]),'GREATER':([30,31,32,33,34,49,50,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,141,143,145,146,147,148,149,150,151,158,159,160,161,162,],[-58,-59,-60,-61,-62,-64,-66,114,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,-40,-41,-39,-47,-48,-53,-55,-54,-75,114,114,-38,-42,-43,]),'LESS':([30,31,32,33,34,49,50,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,92,93,94,95,96,141,143,145,146,147,148,149,150,151,158,159,160,161,162,],[-58,-59,-60,-61,-62,-64,-66,115,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-74,-63,-74,-65,-67,-40,-41,-39,-47,-48,-53,-55,-54,-75,115,115,-38,-42,-43,]),'BEG_BRACE':([30,31,32,33,34,40,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,92,93,94,95,96,141,143,145,146,147,148,149,150,151,155,158,159,160,161,162,165,166,167,169,170,],[-58,-59,-60,-61,-62,90,-64,-66,110,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,124,-74,-63,-74,-65,-67,-40,-41,-39,-47,-48,-53,-55,-54,-75,-6,-29,-30,-38,-42,-43,-11,171,-12,172,174,]),'AMPERSAND':([30,31,32,33,34,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,92,93,94,95,96,107,111,122,131,132,133,134,141,143,145,146,147,148,149,150,151,152,156,158,159,160,161,162,170,],[-58,-59,-60,-61,-62,-64,-66,111,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,111,-74,-63,-74,-65,-67,111,138,111,111,111,111,111,-40,-41,-39,-47,-48,-53,-55,-54,-75,111,111,-29,-30,-38,-42,-43,111,]),'PIPE':([30,31,32,33,34,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,92,93,94,95,96,107,112,122,131,132,133,134,141,143,145,146,147,148,149,150,151,152,156,158,159,160,161,162,170,],[-58,-59,-60,-61,-62,-64,-66,112,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,112,-74,-63,-74,-65,-67,112,139,112,112,112,112,112,-40,-41,-39,-47,-48,-53,-55,-54,-75,112,112,-29,-30,-38,-42,-43,112,]),'END_PAREN':([30,31,32,33,34,49,50,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,95,96,100,109,122,127,128,129,130,141,143,145,146,147,148,149,150,151,158,159,160,161,162,],[-58,-59,-60,-61,-62,-64,-66,-26,-27,-28,-31,-32,-33,-34,-35,-36,-37,-44,-45,-46,-49,-50,-51,-52,-56,-57,-68,-69,-70,-71,-72,-73,-74,-63,-74,-65,-67,-6,-99,151,-100,155,-97,-98,-40,-41,-39,-47,-48,-53,-55,-54,-75,-29,-30,-38,-42,-43,]),'ELSE':([157,],[169,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([4,97,],[6,126,]),'empty':([4,97,100,155,],[8,8,130,167,]),'funcoes_codigo':([6,45,47,],[11,98,99,]),'funcao':([6,45,47,],[12,12,12,]),'delimitador':([6,12,13,14,17,23,45,47,55,90,110,124,171,172,174,],[13,45,13,47,55,56,13,13,13,13,13,13,13,13,13,]),'codigo':([6,13,45,47,55,90,110,124,171,172,174,],[14,46,14,14,105,125,137,153,175,176,177,]),'estruturas':([6,13,45,47,55,90,110,124,171,172,174,],[17,17,17,17,17,17,17,17,17,17,17,]),'atribuicao':([6,13,45,47,55,90,110,124,171,172,174,],[18,18,18,18,18,18,18,18,18,18,18,]),'declaracao':([6,13,40,45,47,55,90,110,124,171,172,174,],[19,19,88,19,19,19,19,19,19,19,19,19,]),'estrutura_if':([6,13,45,47,55,90,110,124,169,171,172,174,],[20,20,20,20,20,20,20,20,173,20,20,20,]),'estrutura_for':([6,13,45,47,55,90,110,124,171,172,174,],[21,21,21,21,21,21,21,21,21,21,21,]),'unario':([6,13,26,40,45,47,55,57,87,90,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,135,138,139,140,142,144,163,171,172,174,],[22,22,78,78,22,22,22,78,78,22,78,78,78,78,78,22,78,78,78,78,78,78,78,78,78,22,78,78,78,78,78,78,78,22,22,22,]),'caracteresQuebras':([6,12,13,14,17,23,45,47,55,90,110,124,171,172,174,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'lista_identificadores':([6,13,40,45,47,55,90,100,110,124,171,172,174,],[24,24,91,24,24,24,24,129,24,24,24,24,24,]),'expressao_matematica_reduzida':([6,13,45,47,55,90,110,124,171,172,174,],[25,25,25,25,25,25,25,25,25,25,25,]),'for_CLIKE':([6,13,45,47,55,90,110,124,171,172,174,],[27,27,27,27,27,27,27,27,27,27,27,]),'for_infinito':([6,13,45,47,55,90,110,124,171,172,174,],[28,28,28,28,28,28,28,28,28,28,28,]),'for_while':([6,13,45,47,55,90,110,124,171,172,174,],[29,29,29,29,29,29,29,29,29,29,29,]),'negation':([6,13,26,40,45,47,55,57,87,90,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,135,138,139,140,142,144,163,171,172,174,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'incremento':([6,13,26,40,45,47,55,57,87,90,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,135,138,139,140,142,144,163,171,172,174,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'decremento':([6,13,26,40,45,47,55,57,87,90,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,135,138,139,140,142,144,163,171,172,174,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'pre_incremento':([6,13,26,40,45,47,55,57,87,90,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,135,138,139,140,142,144,163,171,172,174,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'pre_decremento':([6,13,26,40,45,47,55,57,87,90,101,102,103,104,108,110,114,115,116,117,118,119,120,121,123,124,135,138,139,140,142,144,163,171,172,174,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'assign_plus':([6,13,45,47,55,90,110,124,171,172,174,],[36,36,36,36,36,36,36,36,36,36,36,]),'assign_minus':([6,13,45,47,55,90,110,124,171,172,174,],[37,37,37,37,37,37,37,37,37,37,37,]),'assign_mult':([6,13,45,47,55,90,110,124,171,172,174,],[38,38,38,38,38,38,38,38,38,38,38,]),'assign_div':([6,13,45,47,55,90,110,124,171,172,174,],[39,39,39,39,39,39,39,39,39,39,39,]),'expressao':([26,40,57,87,101,102,103,104,108,123,135,163,],[60,89,107,122,131,132,133,134,107,152,156,170,]),'and':([26,40,57,87,101,102,103,104,108,123,135,163,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'or':([26,40,57,87,101,102,103,104,108,123,135,163,],[62,62,62,62,62,62,62,62,62,62,62,62,]),'expressao_n2':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[63,63,63,63,63,63,63,63,63,63,63,158,159,63,]),'equals':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'different':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'greater':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'less':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'greater_or_equal':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'less_or_equal':([26,40,57,87,101,102,103,104,108,123,135,138,139,163,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expressao_n3':([26,40,57,87,101,102,103,104,108,114,115,116,123,135,138,139,140,142,144,163,],[70,70,70,70,70,70,70,70,70,141,143,145,70,70,70,70,160,161,162,70,]),'soma':([26,40,57,87,101,102,103,104,108,114,115,116,123,135,138,139,140,142,144,163,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'sub':([26,40,57,87,101,102,103,104,108,114,115,116,123,135,138,139,140,142,144,163,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'expressao_n4':([26,40,57,87,101,102,103,104,108,114,115,116,117,118,123,135,138,139,140,142,144,163,],[73,73,73,73,73,73,73,73,73,73,73,73,146,147,73,73,73,73,73,73,73,73,]),'mult':([26,40,57,87,101,102,103,104,108,114,115,116,117,118,123,135,138,139,140,142,144,163,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'div':([26,40,57,87,101,102,103,104,108,114,115,116,117,118,123,135,138,139,140,142,144,163,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'mod':([26,40,57,87,101,102,103,104,108,114,115,116,117,118,123,135,138,139,140,142,144,163,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'expressao_n5':([26,40,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,148,149,150,77,77,77,77,77,77,77,77,]),'operando':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[79,79,93,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'identificador':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'expParenteses':([26,40,41,57,87,101,102,103,104,108,114,115,116,117,118,119,120,121,123,135,138,139,140,142,144,163,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'lista_valores':([57,108,],[106,136,]),'lista_parametros':([100,],[128,]),'tipo_retorno':([155,],[166,]),'estrutura_else':([157,],[168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote NEWLINE importacao funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',11),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',15),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',16),
  ('funcoes_codigo -> codigo delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',17),
  ('funcoes_codigo -> codigo','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',18),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',22),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',26),
  ('importacao -> IMPORT ID NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',30),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',31),
  ('funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',35),
  ('tipo_retorno -> ID','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',41),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',42),
  ('codigo -> estruturas delimitador codigo','codigo',3,'p_codigo','analiseSintatica.py',47),
  ('codigo -> estruturas','codigo',1,'p_codigo','analiseSintatica.py',48),
  ('codigo -> delimitador codigo','codigo',2,'p_codigo','analiseSintatica.py',49),
  ('codigo -> delimitador','codigo',1,'p_codigo','analiseSintatica.py',50),
  ('delimitador -> caracteresQuebras delimitador','delimitador',2,'p_delimitador','analiseSintatica.py',62),
  ('delimitador -> caracteresQuebras','delimitador',1,'p_delimitador','analiseSintatica.py',63),
  ('caracteresQuebras -> NEWLINE','caracteresQuebras',1,'p_caracteresQuebras','analiseSintatica.py',67),
  ('caracteresQuebras -> SEMICOLON','caracteresQuebras',1,'p_caracteresQuebras','analiseSintatica.py',68),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',72),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',73),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',74),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',75),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',76),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',80),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',81),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',82),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',86),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',90),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',94),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',95),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',96),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',97),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',98),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',99),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',100),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',104),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',108),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',112),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',116),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',120),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',124),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',128),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',129),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',130),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',136),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',140),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',144),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',145),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',146),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',147),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',153),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',157),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',161),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',165),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',166),
  ('unario -> negation','unario',1,'p_unario','analiseSintatica.py',170),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',171),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',172),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',173),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',174),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',178),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',182),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',186),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',190),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',194),
  ('operando -> identificador','operando',1,'p_operando','analiseSintatica.py',199),
  ('operando -> NUMBER','operando',1,'p_operando','analiseSintatica.py',200),
  ('operando -> STRING','operando',1,'p_operando','analiseSintatica.py',201),
  ('operando -> TRUE','operando',1,'p_operando','analiseSintatica.py',202),
  ('operando -> FALSE','operando',1,'p_operando','analiseSintatica.py',203),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',204),
  ('identificador -> ID','identificador',1,'p_identificador','analiseSintatica.py',208),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',215),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',219),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',220),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',221),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',225),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',229),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',233),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',238),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',239),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',249),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',250),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',260),
  ('atribuicao -> expressao_matematica_reduzida','atribuicao',1,'p_atribuicao','analiseSintatica.py',261),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',268),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',269),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',270),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',271),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',275),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',279),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',283),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',287),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores','declaracao',4,'p_declaracao','analiseSintatica.py',291),
  ('lista_parametros -> lista_identificadores','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',298),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',299),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',306),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',307),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',314),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',315),
]
