
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FOR FUNC GREATER ID IF IMPORT LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STRING TIMES TRUEprograma : pacote NEWLINE importacao funcoes_codigofuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao\n                      | codigo delimitador funcoes_codigo\n                      | codigoempty :pacote : PACKAGE ID NEWLINEimportacao : IMPORT ID NEWLINE importacao\n                  | emptyfuncao : FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACEtipo_retorno : ID\n                    | emptycodigo : estruturas codigo\n              | estruturas\n              | delimitador codigo\n              | delimitadordel_est : delimitador estruturasest_del : estruturas delimitadordel_est_del : delimitador estruturas delimitadordelimitador : SEMICOLON delimitador \n                   | SEMICOLON\n                   | NEWLINE delimitador\n                   | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unarioexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n2 EXCLAMATION EQUALS expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3 expressao_n3 : soma \n                     | sub \n                     | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando unario : negation\n                | incremento\n                | decremento\n                | pre_incremento\n                | pre_decrementonegation : EXCLAMATION expressao_n5incremento : ID PLUS PLUSpre_incremento : PLUS PLUS IDdecremento : ID MINUS MINUSpre_decremento : MINUS MINUS IDoperando : identificador\n                | NUMBER \n                | STRING \n                | TRUE\n                | FALSE\n                | expParentesesidentificador : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valores\n                  | expressao_matematica_reduzidaexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaodeclaracao : lista_identificadores COLON EQUALS lista_valores\n                  | lista_identificadores COLON EQUALS lista_valores SEMICOLONlista_parametros : lista_identificadores\n                        | emptylista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,10,11,12,13,14,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,44,46,53,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,98,100,104,105,126,127,133,134,135,136,138,144,146,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,168,172,177,182,183,184,],[0,-23,-1,-3,-16,-5,-14,-24,-25,-26,-27,-28,-21,-90,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,-22,-15,-13,-20,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-66,-2,-4,-67,-69,-89,-106,-68,-70,-95,-96,-97,-98,-99,-43,-44,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,-32,-33,-41,-42,-45,-46,-84,-85,-88,-10,-87,-82,]),'NEWLINE':([2,4,5,6,8,9,10,12,13,14,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,43,44,45,46,47,53,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,91,94,98,100,104,105,108,124,126,127,128,133,134,135,136,138,144,146,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,168,172,175,176,177,178,182,183,184,],[4,-6,9,10,-9,-7,10,10,10,10,10,-24,-25,-26,-27,-28,10,-90,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,94,-22,10,-15,10,-13,-20,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,10,-66,-6,-67,-69,-89,-106,10,10,-68,-70,-8,-95,-96,-97,-98,-99,-43,-44,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,-32,-33,-41,-42,-45,-46,-84,-85,10,10,-88,10,-10,-87,-82,]),'ID':([3,4,6,7,8,10,13,15,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,47,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,91,92,93,94,97,98,99,100,101,102,103,104,105,106,108,113,114,115,116,117,118,119,123,124,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,172,175,176,177,178,183,184,],[5,-6,16,43,-9,-23,16,48,16,-24,-25,-26,-27,-28,-21,-90,84,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,90,84,-22,16,16,-20,84,107,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,84,16,-66,126,127,-6,129,-67,84,-69,84,84,84,-89,-106,84,16,84,84,84,84,84,84,84,84,16,-68,-70,-8,-95,-96,-97,-98,84,-99,84,84,84,84,-43,84,-44,84,-50,-51,-56,-58,-57,-78,-83,169,-105,-100,-86,-32,-33,-41,-42,-45,-46,84,-84,-85,16,16,-88,16,-87,-82,]),'IMPORT':([4,94,],[7,7,]),'FUNC':([4,6,8,10,23,44,45,47,54,94,128,],[-6,15,-9,-23,-21,-22,15,15,-20,-6,-8,]),'SEMICOLON':([4,6,8,10,12,13,14,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,44,45,46,47,53,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,91,94,98,100,104,105,108,124,126,127,128,133,134,135,136,138,144,146,148,149,150,151,152,153,154,156,158,159,160,161,162,163,164,165,166,168,172,175,176,177,178,182,183,184,],[-6,23,-9,23,23,23,23,23,-24,-25,-26,-27,-28,23,-90,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,-22,23,-15,23,-13,-20,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,123,23,-66,-6,-67,-69,-89,-106,23,23,-68,-70,-8,-95,-96,-97,-98,159,-43,-44,-50,-51,-56,-58,-57,-78,167,-83,-105,-100,-86,-32,-33,-41,-42,-45,-46,-84,-85,23,23,-88,23,-10,-87,-82,]),'IF':([4,6,8,10,13,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,44,45,47,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,91,94,98,100,104,105,108,124,126,127,128,133,134,135,136,138,144,146,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,168,172,173,175,176,177,178,183,184,],[-6,26,-9,-23,26,26,-24,-25,-26,-27,-28,-21,-90,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,-22,26,26,-20,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,26,-66,-6,-67,-69,-89,-106,26,26,-68,-70,-8,-95,-96,-97,-98,-99,-43,-44,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,-32,-33,-41,-42,-45,-46,-84,-85,26,26,26,-88,26,-87,-82,]),'FOR':([4,6,8,10,13,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,44,45,47,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,91,94,98,100,104,105,108,124,126,127,128,133,134,135,136,138,144,146,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,168,172,175,176,177,178,183,184,],[-6,39,-9,-23,39,39,-24,-25,-26,-27,-28,-21,-90,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,-22,39,39,-20,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,39,-66,-6,-67,-69,-89,-106,39,39,-68,-70,-8,-95,-96,-97,-98,-99,-43,-44,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,-32,-33,-41,-42,-45,-46,-84,-85,39,39,-88,39,-87,-82,]),'EXCLAMATION':([4,6,8,10,13,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,44,45,47,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,94,98,99,100,101,102,103,104,105,106,108,113,114,115,116,117,118,119,123,124,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,167,168,172,175,176,177,178,183,184,],[-6,40,-9,-23,40,40,-24,-25,-26,-27,-28,-21,-90,40,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,40,40,-22,40,40,-20,40,-29,-30,112,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,40,40,-77,-66,-6,-67,40,-69,40,40,40,-89,-106,40,40,40,40,40,40,40,40,40,40,40,-68,-70,-8,-95,-96,-97,-98,40,-99,40,40,40,40,-43,40,-44,40,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,112,112,-41,-42,-45,-46,40,-84,-85,40,40,-88,40,-87,-82,]),'PLUS':([4,6,8,10,13,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,45,47,49,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,94,98,99,100,101,102,103,104,105,106,108,113,114,115,116,117,118,119,120,123,124,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,167,168,172,175,176,177,178,183,184,],[-6,41,-9,-23,41,49,41,-24,-25,-26,-27,-28,-21,-90,41,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,41,41,92,-22,41,41,98,-20,41,-29,-30,-31,-34,-35,-36,-37,-38,-39,115,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,120,41,41,120,-66,-6,-67,41,-69,41,41,41,-89,-106,41,41,41,41,41,41,41,41,41,98,41,41,-68,-70,-8,-95,-96,-97,-98,41,-99,41,41,41,41,115,41,115,41,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,-32,-33,115,115,115,115,41,-84,-85,41,41,-88,41,-87,-82,]),'MINUS':([4,6,8,10,13,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,44,45,47,50,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,90,91,94,98,99,100,101,102,103,104,105,106,108,113,114,115,116,117,118,119,121,123,124,126,127,128,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,167,168,172,175,176,177,178,183,184,],[-6,42,-9,-23,42,50,42,-24,-25,-26,-27,-28,-21,-90,42,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,42,42,93,-22,42,42,100,-20,42,-29,-30,-31,-34,-35,-36,-37,-38,-39,116,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,121,42,42,121,-66,-6,-67,42,-69,42,42,42,-89,-106,42,42,42,42,42,42,42,42,42,100,42,42,-68,-70,-8,-95,-96,-97,-98,42,-99,42,42,42,42,116,42,116,42,-50,-51,-56,-58,-57,-78,-83,-105,-100,-86,-32,-33,116,116,116,116,42,-84,-85,42,42,-88,42,-87,-82,]),'END_BRACE':([10,13,17,18,19,20,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,44,46,53,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,98,100,104,105,125,126,127,133,134,135,136,138,139,144,146,148,149,150,151,152,153,155,156,158,159,160,161,162,163,164,165,166,168,172,177,179,180,181,183,184,],[-23,-16,-14,-24,-25,-26,-27,-28,-21,-90,-79,-80,-81,-61,-62,-63,-64,-65,-91,-92,-93,-94,-22,-15,-13,-20,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-66,-67,-69,-89,-106,156,-68,-70,-95,-96,-97,-98,-99,160,-43,-44,-50,-51,-56,-58,-57,-78,168,-83,-105,-100,-86,-32,-33,-41,-42,-45,-46,-84,-85,-88,182,183,184,-87,-82,]),'EQUALS':([16,24,30,31,32,33,34,49,50,51,52,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,98,100,107,111,112,113,114,126,127,144,146,148,149,150,151,152,153,161,162,163,164,165,166,],[-104,55,-61,-62,-63,-64,-65,99,101,102,103,106,111,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-77,-66,-67,-69,-103,142,143,145,147,-68,-70,-43,-44,-50,-51,-56,-58,-57,-78,111,111,-41,-42,-45,-46,]),'COLON':([16,24,89,90,107,],[-104,56,56,-104,-103,]),'COMMA':([16,24,30,31,32,33,34,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,98,100,104,105,107,126,127,129,131,138,144,146,148,149,150,151,152,153,158,161,162,163,164,165,166,],[-104,57,-61,-62,-63,-64,-65,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,57,-104,-66,-67,-69,137,-106,-103,-68,-70,-104,57,137,-43,-44,-50,-51,-56,-58,-57,-78,-105,-32,-33,-41,-42,-45,-46,]),'TIMES':([16,30,31,32,33,34,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,98,100,126,127,148,149,150,151,152,153,],[51,-61,-62,-63,-64,-65,117,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-77,-66,-67,-69,-68,-70,117,117,-56,-58,-57,-78,]),'DIVISION':([16,30,31,32,33,34,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,98,100,126,127,148,149,150,151,152,153,],[52,-61,-62,-63,-64,-65,118,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-77,-66,-67,-69,-68,-70,118,118,-56,-58,-57,-78,]),'NUMBER':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'STRING':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'TRUE':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'FALSE':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'BEG_PAREN':([26,39,40,48,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[85,85,85,97,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'MOD':([30,31,32,33,34,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,98,100,126,127,148,149,150,151,152,153,],[-61,-62,-63,-64,-65,119,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-77,-66,-67,-69,-68,-70,119,119,-56,-58,-57,-78,]),'GREATER':([30,31,32,33,34,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,98,100,126,127,144,146,148,149,150,151,152,153,161,162,163,164,165,166,],[-61,-62,-63,-64,-65,113,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-77,-66,-67,-69,-68,-70,-43,-44,-50,-51,-56,-58,-57,-78,113,113,-41,-42,-45,-46,]),'LESS':([30,31,32,33,34,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,98,100,126,127,144,146,148,149,150,151,152,153,161,162,163,164,165,166,],[-61,-62,-63,-64,-65,114,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-77,-66,-67,-69,-68,-70,-43,-44,-50,-51,-56,-58,-57,-78,114,114,-41,-42,-45,-46,]),'BEG_BRACE':([30,31,32,33,34,39,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,90,91,98,100,126,127,144,146,148,149,150,151,152,153,157,161,162,163,164,165,166,169,170,171,173,174,],[-61,-62,-63,-64,-65,88,108,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,124,-77,-66,-67,-69,-68,-70,-43,-44,-50,-51,-56,-58,-57,-78,-6,-32,-33,-41,-42,-45,-46,-11,175,-12,176,178,]),'AMPERSAND':([30,31,32,33,34,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,90,91,98,100,105,109,122,126,127,133,134,135,136,144,146,148,149,150,151,152,153,154,158,161,162,163,164,165,166,174,],[-61,-62,-63,-64,-65,109,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,109,-77,-66,-67,-69,109,140,109,-68,-70,109,109,109,109,-43,-44,-50,-51,-56,-58,-57,-78,109,109,-32,-33,-41,-42,-45,-46,109,]),'PIPE':([30,31,32,33,34,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,90,91,98,100,105,110,122,126,127,133,134,135,136,144,146,148,149,150,151,152,153,154,158,161,162,163,164,165,166,174,],[-61,-62,-63,-64,-65,110,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,110,-77,-66,-67,-69,110,141,110,-68,-70,110,110,110,110,-43,-44,-50,-51,-56,-58,-57,-78,110,110,-32,-33,-41,-42,-45,-46,110,]),'END_PAREN':([30,31,32,33,34,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,91,97,98,100,107,122,126,127,129,130,131,132,144,146,148,149,150,151,152,153,161,162,163,164,165,166,],[-61,-62,-63,-64,-65,-29,-30,-31,-34,-35,-36,-37,-38,-39,-40,-47,-48,-49,-52,-53,-54,-55,-59,-60,-71,-72,-73,-74,-75,-76,-77,-66,-6,-67,-69,-103,153,-68,-70,-104,157,-101,-102,-43,-44,-50,-51,-56,-58,-57,-78,-32,-33,-41,-42,-45,-46,]),'ELSE':([160,],[173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([4,94,],[6,128,]),'empty':([4,94,97,157,],[8,8,132,171,]),'funcoes_codigo':([6,45,47,],[11,95,96,]),'funcao':([6,45,47,],[12,12,12,]),'delimitador':([6,10,12,13,14,17,23,45,47,88,108,124,175,176,178,],[13,44,45,13,47,13,54,13,13,13,13,13,13,13,13,]),'codigo':([6,13,17,45,47,88,108,124,175,176,178,],[14,46,53,14,14,125,139,155,179,180,181,]),'estruturas':([6,13,17,45,47,88,108,124,175,176,178,],[17,17,17,17,17,17,17,17,17,17,17,]),'atribuicao':([6,13,17,45,47,88,108,124,175,176,178,],[18,18,18,18,18,18,18,18,18,18,18,]),'declaracao':([6,13,17,39,45,47,88,108,124,175,176,178,],[19,19,19,86,19,19,19,19,19,19,19,19,]),'estrutura_if':([6,13,17,45,47,88,108,124,173,175,176,178,],[20,20,20,20,20,20,20,20,177,20,20,20,]),'estrutura_for':([6,13,17,45,47,88,108,124,175,176,178,],[21,21,21,21,21,21,21,21,21,21,21,]),'unario':([6,13,17,26,39,40,45,47,55,85,88,99,101,102,103,106,108,113,114,115,116,117,118,119,123,124,137,140,141,142,143,145,147,167,175,176,178,],[22,22,22,76,76,76,22,22,76,76,22,76,76,76,76,76,22,76,76,76,76,76,76,76,76,22,76,76,76,76,76,76,76,76,22,22,22,]),'lista_identificadores':([6,13,17,39,45,47,88,97,108,124,175,176,178,],[24,24,24,89,24,24,24,131,24,24,24,24,24,]),'expressao_matematica_reduzida':([6,13,17,45,47,88,108,124,175,176,178,],[25,25,25,25,25,25,25,25,25,25,25,]),'for_CLIKE':([6,13,17,45,47,88,108,124,175,176,178,],[27,27,27,27,27,27,27,27,27,27,27,]),'for_infinito':([6,13,17,45,47,88,108,124,175,176,178,],[28,28,28,28,28,28,28,28,28,28,28,]),'for_while':([6,13,17,45,47,88,108,124,175,176,178,],[29,29,29,29,29,29,29,29,29,29,29,]),'negation':([6,13,17,26,39,40,45,47,55,85,88,99,101,102,103,106,108,113,114,115,116,117,118,119,123,124,137,140,141,142,143,145,147,167,175,176,178,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'incremento':([6,13,17,26,39,40,45,47,55,85,88,99,101,102,103,106,108,113,114,115,116,117,118,119,123,124,137,140,141,142,143,145,147,167,175,176,178,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'decremento':([6,13,17,26,39,40,45,47,55,85,88,99,101,102,103,106,108,113,114,115,116,117,118,119,123,124,137,140,141,142,143,145,147,167,175,176,178,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'pre_incremento':([6,13,17,26,39,40,45,47,55,85,88,99,101,102,103,106,108,113,114,115,116,117,118,119,123,124,137,140,141,142,143,145,147,167,175,176,178,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'pre_decremento':([6,13,17,26,39,40,45,47,55,85,88,99,101,102,103,106,108,113,114,115,116,117,118,119,123,124,137,140,141,142,143,145,147,167,175,176,178,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'assign_plus':([6,13,17,45,47,88,108,124,175,176,178,],[35,35,35,35,35,35,35,35,35,35,35,]),'assign_minus':([6,13,17,45,47,88,108,124,175,176,178,],[36,36,36,36,36,36,36,36,36,36,36,]),'assign_mult':([6,13,17,45,47,88,108,124,175,176,178,],[37,37,37,37,37,37,37,37,37,37,37,]),'assign_div':([6,13,17,45,47,88,108,124,175,176,178,],[38,38,38,38,38,38,38,38,38,38,38,]),'expressao':([26,39,55,85,99,101,102,103,106,123,137,167,],[58,87,105,122,133,134,135,136,105,154,158,174,]),'and':([26,39,55,85,99,101,102,103,106,123,137,167,],[59,59,59,59,59,59,59,59,59,59,59,59,]),'or':([26,39,55,85,99,101,102,103,106,123,137,167,],[60,60,60,60,60,60,60,60,60,60,60,60,]),'expressao_n2':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[61,61,61,61,61,61,61,61,61,61,61,161,162,61,]),'equals':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'different':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'greater':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'less':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'greater_or_equal':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'less_or_equal':([26,39,55,85,99,101,102,103,106,123,137,140,141,167,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'expressao_n3':([26,39,55,85,99,101,102,103,106,113,114,123,137,140,141,142,143,145,147,167,],[68,68,68,68,68,68,68,68,68,144,146,68,68,68,68,163,164,165,166,68,]),'soma':([26,39,55,85,99,101,102,103,106,113,114,123,137,140,141,142,143,145,147,167,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'sub':([26,39,55,85,99,101,102,103,106,113,114,123,137,140,141,142,143,145,147,167,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expressao_n4':([26,39,55,85,99,101,102,103,106,113,114,115,116,123,137,140,141,142,143,145,147,167,],[71,71,71,71,71,71,71,71,71,71,71,148,149,71,71,71,71,71,71,71,71,71,]),'mult':([26,39,55,85,99,101,102,103,106,113,114,115,116,123,137,140,141,142,143,145,147,167,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'div':([26,39,55,85,99,101,102,103,106,113,114,115,116,123,137,140,141,142,143,145,147,167,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'mod':([26,39,55,85,99,101,102,103,106,113,114,115,116,123,137,140,141,142,143,145,147,167,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'expressao_n5':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[75,75,91,75,75,75,75,75,75,75,75,75,75,75,150,151,152,75,75,75,75,75,75,75,75,75,]),'operando':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'identificador':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'expParenteses':([26,39,40,55,85,99,101,102,103,106,113,114,115,116,117,118,119,123,137,140,141,142,143,145,147,167,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'lista_valores':([55,106,],[104,138,]),'lista_parametros':([97,],[130,]),'tipo_retorno':([157,],[170,]),'estrutura_else':([160,],[172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote NEWLINE importacao funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',11),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',15),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',16),
  ('funcoes_codigo -> codigo delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',17),
  ('funcoes_codigo -> codigo','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',18),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',22),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',26),
  ('importacao -> IMPORT ID NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',30),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',31),
  ('funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',35),
  ('tipo_retorno -> ID','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',41),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',42),
  ('codigo -> estruturas codigo','codigo',2,'p_codigo','analiseSintatica.py',47),
  ('codigo -> estruturas','codigo',1,'p_codigo','analiseSintatica.py',48),
  ('codigo -> delimitador codigo','codigo',2,'p_codigo','analiseSintatica.py',49),
  ('codigo -> delimitador','codigo',1,'p_codigo','analiseSintatica.py',50),
  ('del_est -> delimitador estruturas','del_est',2,'p_del_est','analiseSintatica.py',62),
  ('est_del -> estruturas delimitador','est_del',2,'p_est_del','analiseSintatica.py',66),
  ('del_est_del -> delimitador estruturas delimitador','del_est_del',3,'p_del_est_del','analiseSintatica.py',70),
  ('delimitador -> SEMICOLON delimitador','delimitador',2,'p_delimitador','analiseSintatica.py',74),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',75),
  ('delimitador -> NEWLINE delimitador','delimitador',2,'p_delimitador','analiseSintatica.py',76),
  ('delimitador -> NEWLINE','delimitador',1,'p_delimitador','analiseSintatica.py',77),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',81),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',82),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',83),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',84),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',85),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',89),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',90),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',91),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',95),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',99),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',103),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',104),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',105),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',106),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',107),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',108),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',109),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',113),
  ('different -> expressao_n2 EXCLAMATION EQUALS expressao_n3','different',4,'p_different','analiseSintatica.py',117),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',121),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',125),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',129),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',133),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',137),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',138),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',139),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',145),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',149),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',153),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',154),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',155),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',156),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',162),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',166),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',170),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',174),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',175),
  ('unario -> negation','unario',1,'p_unario','analiseSintatica.py',179),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',180),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',181),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',182),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',183),
  ('negation -> EXCLAMATION expressao_n5','negation',2,'p_negation','analiseSintatica.py',187),
  ('incremento -> ID PLUS PLUS','incremento',3,'p_incremento','analiseSintatica.py',191),
  ('pre_incremento -> PLUS PLUS ID','pre_incremento',3,'p_pre_incremento','analiseSintatica.py',195),
  ('decremento -> ID MINUS MINUS','decremento',3,'p_decremento','analiseSintatica.py',199),
  ('pre_decremento -> MINUS MINUS ID','pre_decremento',3,'p_pre_decremento','analiseSintatica.py',203),
  ('operando -> identificador','operando',1,'p_operando','analiseSintatica.py',208),
  ('operando -> NUMBER','operando',1,'p_operando','analiseSintatica.py',209),
  ('operando -> STRING','operando',1,'p_operando','analiseSintatica.py',210),
  ('operando -> TRUE','operando',1,'p_operando','analiseSintatica.py',211),
  ('operando -> FALSE','operando',1,'p_operando','analiseSintatica.py',212),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',213),
  ('identificador -> ID','identificador',1,'p_identificador','analiseSintatica.py',217),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',224),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',228),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',229),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',230),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',234),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',238),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',242),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',247),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',248),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',258),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',259),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',269),
  ('atribuicao -> expressao_matematica_reduzida','atribuicao',1,'p_atribuicao','analiseSintatica.py',270),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',277),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',278),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',279),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',280),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',284),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',288),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',292),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',296),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores','declaracao',4,'p_declaracao','analiseSintatica.py',300),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON','declaracao',5,'p_declaracao','analiseSintatica.py',301),
  ('lista_parametros -> lista_identificadores','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',308),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',309),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',316),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',317),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',324),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',325),
]
