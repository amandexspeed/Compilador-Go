
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FOR FUNC GREATER ID IF IMPORT INCREMENT LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STRING TIMES TRUE VARprograma : pacote NEWLINE importacao declaracaoGlobal NEWLINE funcoes_codigofuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao\n                      | emptyempty :listaGlobal : ID ID EQUALS constante NEWLINE listaGlobal \n                   | ID ID NEWLINE listaGlobal\n                   | ID ID EQUALS constante\n                   | ID ID\n                   | ID ID EQUALS constante NEWLINE\n                   | ID ID NEWLINEdeclaracaoGlobal : VAR ID ID EQUALS constante\n                        | VAR ID ID\n                        | VAR BEG_PAREN listaGlobal END_PAREN\n                        | VAR BEG_PAREN NEWLINE listaGlobal END_PAREN\n                        | emptypacote : PACKAGE IDimportacao : IMPORT ID NEWLINE importacao\n                  | emptyfuncao : FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACEtipo_retorno : ID\n                    | emptycodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas delimitador\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unariodelimitador : NEWLINE\n                   | SEMICOLONexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3 expressao_n3 : soma \n                     | sub \n                     | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando unario : negation\n               | incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementonegation : EXCLAMATION operandoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : identificador\n                | constante\n                | expParentesesconstante : NUMBER\n                 | STRING\n                 | TRUE\n                 | FALSEidentificador : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valores\n                  | expressao_matematica_reduzidaexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaodeclaracao : lista_identificadores COLON EQUALS lista_valoreslista_parametros : lista_identificadores\n                        | emptylista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,13,17,18,19,26,27,28,34,62,],[0,-5,-1,-3,-4,-5,-33,-34,-2,-20,]),'NEWLINE':([2,4,5,6,8,9,11,12,15,16,18,21,25,27,28,31,33,36,37,38,39,40,41,48,58,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,78,79,80,81,83,84,85,86,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,127,130,131,132,133,134,135,137,155,158,163,165,167,168,169,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,189,190,193,194,195,198,199,],[4,-5,-17,-5,-19,13,-16,16,23,-5,27,-13,-18,-33,-34,-14,43,-12,-80,-81,-82,-83,-15,52,-5,65,-25,-20,-24,27,-27,-28,-29,-30,-31,-32,-97,-86,-87,-88,-67,-68,-69,-70,-71,-98,-99,-100,-101,-26,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-5,-72,-84,-74,-76,-96,-112,-5,-5,-106,-49,-50,-48,-56,-57,-62,-64,-63,-85,-102,-103,-104,-105,-90,-111,-93,-38,-39,-47,-51,-52,-91,-92,-5,-95,-5,-94,-89,]),'ID':([3,7,10,14,15,20,23,24,27,28,35,43,50,51,52,58,60,61,63,65,73,87,88,89,90,91,92,118,127,136,137,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,160,161,162,164,166,188,193,195,],[5,12,14,21,24,29,24,33,-33,-34,44,24,53,56,24,-5,82,-25,-24,-27,117,129,131,132,133,-26,117,117,-5,117,-5,117,117,117,117,117,117,117,117,117,117,117,117,117,-5,117,117,117,117,117,117,117,-5,-5,]),'IMPORT':([4,16,],[7,7,]),'VAR':([4,6,8,16,25,],[-5,10,-19,-5,-18,]),'BEG_PAREN':([10,29,73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[15,35,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'FUNC':([13,26,27,28,],[20,20,-33,-34,]),'SEMICOLON':([18,37,38,39,40,62,64,66,67,68,69,70,72,74,75,76,77,78,79,80,81,83,84,85,86,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,125,130,131,132,133,134,135,158,163,165,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,189,190,194,198,199,],[28,-80,-81,-82,-83,-20,28,-28,-29,-30,-31,-32,-97,-86,-87,-88,-67,-68,-69,-70,-71,-98,-99,-100,-101,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,154,-72,-84,-74,-76,-96,-112,-106,-49,-50,-48,-56,-57,-62,-64,-63,-85,-102,-103,-104,-105,188,-90,-111,-93,-38,-39,-47,-51,-52,-91,-92,-95,-94,-89,]),'EQUALS':([21,33,37,38,39,40,56,71,77,78,79,80,81,82,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,129,130,131,132,133,140,141,142,163,165,167,168,169,170,171,172,173,183,184,185,186,187,],[30,42,-80,-81,-82,-83,-109,92,-67,-68,-69,-70,-71,-110,136,140,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,150,151,152,153,-84,-72,-84,-74,-76,162,164,166,-49,-50,-48,-56,-57,-62,-64,-63,-85,140,140,-47,-51,-52,]),'END_PAREN':([22,32,33,35,37,38,39,40,43,44,45,46,47,48,49,52,56,57,77,78,79,80,81,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,130,131,132,133,149,163,165,167,168,169,170,171,172,173,183,184,185,186,187,],[31,41,-9,-5,-80,-81,-82,-83,-11,-110,50,-107,-108,-8,-7,-10,-109,-6,-67,-68,-69,-70,-71,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-72,-84,-74,-76,173,-49,-50,-48,-56,-57,-62,-64,-63,-85,-38,-39,-47,-51,-52,]),'IF':([27,28,58,60,61,63,65,91,127,137,155,191,193,195,],[-33,-34,-5,73,-25,-24,-27,-26,-5,-5,-5,73,-5,-5,]),'FOR':([27,28,58,60,61,63,65,91,127,137,155,193,195,],[-33,-34,-5,87,-25,-24,-27,-26,-5,-5,-5,-5,-5,]),'EXCLAMATION':([27,28,58,60,61,63,65,73,87,91,92,118,127,136,137,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,160,161,162,164,166,188,193,195,],[-33,-34,-5,88,-25,-24,-27,88,88,-26,88,88,-5,88,-5,88,88,88,88,88,88,88,88,88,88,88,88,88,-5,88,88,88,88,88,88,88,-5,-5,]),'INCREMENT':([27,28,58,60,61,63,65,73,82,87,91,92,117,118,127,129,136,137,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,160,161,162,164,166,188,193,195,],[-33,-34,-5,89,-25,-24,-27,89,119,89,-26,89,119,89,-5,119,89,-5,89,89,89,89,89,89,89,89,89,89,89,89,89,-5,89,89,89,89,89,89,89,-5,-5,]),'DECREMENT':([27,28,58,60,61,63,65,73,82,87,91,92,117,118,127,129,136,137,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,160,161,162,164,166,188,193,195,],[-33,-34,-5,90,-25,-24,-27,90,120,90,-26,90,120,90,-5,120,90,-5,90,90,90,90,90,90,90,90,90,90,90,90,90,-5,90,90,90,90,90,90,90,-5,-5,]),'END_BRACE':([27,28,58,59,60,61,63,65,91,127,137,155,156,159,179,193,195,196,197,],[-33,-34,-5,62,-23,-25,-24,-27,-26,-5,-5,-5,180,182,189,-5,-5,198,199,]),'NUMBER':([30,42,73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'STRING':([30,42,73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'TRUE':([30,42,73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FALSE':([30,42,73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TIMES':([37,38,39,40,77,78,79,80,81,82,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,168,169,170,171,172,173,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,123,146,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,146,146,-62,-64,-63,-85,]),'DIVISION':([37,38,39,40,77,78,79,80,81,82,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,168,169,170,171,172,173,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,124,147,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,147,147,-62,-64,-63,-85,]),'MOD':([37,38,39,40,77,78,79,80,81,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,168,169,170,171,172,173,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,148,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,148,148,-62,-64,-63,-85,]),'DIFFERENT':([37,38,39,40,77,78,79,80,81,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,168,169,170,171,172,173,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,143,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,-56,-57,-62,-64,-63,-85,]),'PLUS':([37,38,39,40,77,78,79,80,81,82,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,163,165,167,168,169,170,171,172,173,185,186,187,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,121,144,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,144,144,144,-56,-57,-62,-64,-63,-85,144,144,144,]),'MINUS':([37,38,39,40,77,78,79,80,81,82,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,163,165,167,168,169,170,171,172,173,185,186,187,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,122,145,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,145,145,145,-56,-57,-62,-64,-63,-85,145,145,145,]),'GREATER':([37,38,39,40,77,78,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,163,165,167,168,169,170,171,172,173,183,184,185,186,187,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,141,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,-49,-50,-48,-56,-57,-62,-64,-63,-85,141,141,-47,-51,-52,]),'LESS':([37,38,39,40,77,78,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,129,130,131,132,133,163,165,167,168,169,170,171,172,173,183,184,185,186,187,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,142,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,-84,-72,-84,-74,-76,-49,-50,-48,-56,-57,-62,-64,-63,-85,142,142,-47,-51,-52,]),'BEG_BRACE':([37,38,39,40,50,53,54,55,77,78,79,80,81,87,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,126,129,130,131,132,133,163,165,167,168,169,170,171,172,173,183,184,185,186,187,191,192,],[-80,-81,-82,-83,-5,-21,58,-22,-67,-68,-69,-70,-71,127,137,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,155,-84,-72,-84,-74,-76,-49,-50,-48,-56,-57,-62,-64,-63,-85,-38,-39,-47,-51,-52,193,195,]),'AMPERSAND':([37,38,39,40,77,78,79,80,81,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,126,129,130,131,132,133,135,138,149,163,165,167,168,169,170,171,172,173,174,175,176,177,178,181,183,184,185,186,187,192,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,138,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,138,-84,-72,-84,-74,-76,138,160,138,-49,-50,-48,-56,-57,-62,-64,-63,-85,138,138,138,138,138,138,-38,-39,-47,-51,-52,138,]),'PIPE':([37,38,39,40,77,78,79,80,81,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,126,129,130,131,132,133,135,139,149,163,165,167,168,169,170,171,172,173,174,175,176,177,178,181,183,184,185,186,187,192,],[-80,-81,-82,-83,-67,-68,-69,-70,-71,139,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,139,-84,-72,-84,-74,-76,139,161,139,-49,-50,-48,-56,-57,-62,-64,-63,-85,139,139,139,139,139,139,-38,-39,-47,-51,-52,139,]),'COMMA':([37,38,39,40,44,46,56,71,77,78,79,80,81,82,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,128,129,130,131,132,133,134,135,158,163,165,167,168,169,170,171,172,173,181,183,184,185,186,187,],[-80,-81,-82,-83,-110,51,-109,51,-67,-68,-69,-70,-71,-110,-35,-36,-37,-40,-41,-42,-43,-44,-45,-46,-53,-54,-55,-58,-59,-60,-61,-65,-66,-77,-78,-79,-84,-73,-75,51,-110,-72,-84,-74,-76,157,-112,157,-49,-50,-48,-56,-57,-62,-64,-63,-85,-111,-38,-39,-47,-51,-52,]),'COLON':([56,71,82,128,129,],[-109,93,-110,93,-110,]),'ELSE':([182,],[191,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([4,16,],[6,25,]),'empty':([4,6,13,16,26,35,50,58,127,137,155,193,195,],[8,11,19,8,19,47,55,61,61,61,61,61,61,]),'declaracaoGlobal':([6,],[9,]),'funcoes_codigo':([13,26,],[17,34,]),'funcao':([13,26,],[18,18,]),'listaGlobal':([15,23,43,52,],[22,32,49,57,]),'delimitador':([18,64,],[26,91,]),'constante':([30,42,73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[36,48,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'lista_parametros':([35,],[45,]),'lista_identificadores':([35,60,87,],[46,71,128,]),'tipo_retorno':([50,],[54,]),'codigo':([58,127,137,155,193,195,],[59,156,159,179,196,197,]),'lista_estruturas':([58,127,137,155,193,195,],[60,60,60,60,60,60,]),'estruturasBase':([60,],[63,]),'estruturas':([60,],[64,]),'atribuicao':([60,],[66,]),'declaracao':([60,87,],[67,125,]),'estrutura_if':([60,191,],[68,194,]),'estrutura_for':([60,],[69,]),'unario':([60,73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[70,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'expressao_matematica_reduzida':([60,],[72,]),'for_CLIKE':([60,],[74,]),'for_infinito':([60,],[75,]),'for_while':([60,],[76,]),'negation':([60,73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'incremento':([60,73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'decremento':([60,73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'pre_incremento':([60,73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'pre_decremento':([60,73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'assign_plus':([60,],[83,]),'assign_minus':([60,],[84,]),'assign_mult':([60,],[85,]),'assign_div':([60,],[86,]),'expressao':([73,87,92,118,136,150,151,152,153,154,157,188,],[94,126,135,149,135,174,175,176,177,178,181,192,]),'and':([73,87,92,118,136,150,151,152,153,154,157,188,],[95,95,95,95,95,95,95,95,95,95,95,95,]),'or':([73,87,92,118,136,150,151,152,153,154,157,188,],[96,96,96,96,96,96,96,96,96,96,96,96,]),'expressao_n2':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[97,97,97,97,97,97,97,97,97,97,97,183,184,97,]),'equals':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'different':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'greater':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'less':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'greater_or_equal':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'less_or_equal':([73,87,92,118,136,150,151,152,153,154,157,160,161,188,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'expressao_n3':([73,87,92,118,136,141,142,143,150,151,152,153,154,157,160,161,162,164,166,188,],[104,104,104,104,104,163,165,167,104,104,104,104,104,104,104,104,185,186,187,104,]),'soma':([73,87,92,118,136,141,142,143,150,151,152,153,154,157,160,161,162,164,166,188,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'sub':([73,87,92,118,136,141,142,143,150,151,152,153,154,157,160,161,162,164,166,188,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'expressao_n4':([73,87,92,118,136,141,142,143,144,145,150,151,152,153,154,157,160,161,162,164,166,188,],[107,107,107,107,107,107,107,107,168,169,107,107,107,107,107,107,107,107,107,107,107,107,]),'mult':([73,87,92,118,136,141,142,143,144,145,150,151,152,153,154,157,160,161,162,164,166,188,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'div':([73,87,92,118,136,141,142,143,144,145,150,151,152,153,154,157,160,161,162,164,166,188,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'mod':([73,87,92,118,136,141,142,143,144,145,150,151,152,153,154,157,160,161,162,164,166,188,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'expressao_n5':([73,87,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[111,111,111,111,111,111,111,111,111,111,170,171,172,111,111,111,111,111,111,111,111,111,111,111,111,]),'operando':([73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[113,113,130,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'identificador':([73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'expParenteses':([73,87,88,92,118,136,141,142,143,144,145,146,147,148,150,151,152,153,154,157,160,161,162,164,166,188,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'lista_valores':([92,136,],[134,158,]),'estrutura_else':([182,],[190,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote NEWLINE importacao declaracaoGlobal NEWLINE funcoes_codigo','programa',6,'p_programa','analiseSintatica.py',11),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',15),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',16),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',17),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',21),
  ('listaGlobal -> ID ID EQUALS constante NEWLINE listaGlobal','listaGlobal',6,'p_listaGlobal','analiseSintatica.py',25),
  ('listaGlobal -> ID ID NEWLINE listaGlobal','listaGlobal',4,'p_listaGlobal','analiseSintatica.py',26),
  ('listaGlobal -> ID ID EQUALS constante','listaGlobal',4,'p_listaGlobal','analiseSintatica.py',27),
  ('listaGlobal -> ID ID','listaGlobal',2,'p_listaGlobal','analiseSintatica.py',28),
  ('listaGlobal -> ID ID EQUALS constante NEWLINE','listaGlobal',5,'p_listaGlobal','analiseSintatica.py',29),
  ('listaGlobal -> ID ID NEWLINE','listaGlobal',3,'p_listaGlobal','analiseSintatica.py',30),
  ('declaracaoGlobal -> VAR ID ID EQUALS constante','declaracaoGlobal',5,'p_declaracaoGlobal','analiseSintatica.py',43),
  ('declaracaoGlobal -> VAR ID ID','declaracaoGlobal',3,'p_declaracaoGlobal','analiseSintatica.py',44),
  ('declaracaoGlobal -> VAR BEG_PAREN listaGlobal END_PAREN','declaracaoGlobal',4,'p_declaracaoGlobal','analiseSintatica.py',45),
  ('declaracaoGlobal -> VAR BEG_PAREN NEWLINE listaGlobal END_PAREN','declaracaoGlobal',5,'p_declaracaoGlobal','analiseSintatica.py',46),
  ('declaracaoGlobal -> empty','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',47),
  ('pacote -> PACKAGE ID','pacote',2,'p_pacote','analiseSintatica.py',58),
  ('importacao -> IMPORT ID NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',62),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',63),
  ('funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',67),
  ('tipo_retorno -> ID','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',73),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',74),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',79),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',84),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',85),
  ('estruturasBase -> estruturas delimitador','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',95),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',96),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',101),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',102),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',103),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',104),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',105),
  ('delimitador -> NEWLINE','delimitador',1,'p_delimitador','analiseSintatica.py',110),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',111),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',114),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',115),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',116),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',120),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',124),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',128),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',129),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',130),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',131),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',132),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',133),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',134),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',138),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',142),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',146),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',150),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',154),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',158),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',162),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',163),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',164),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',170),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',174),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',178),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',179),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',180),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',181),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',187),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',191),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',195),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',199),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',200),
  ('unario -> negation','unario',1,'p_unario','analiseSintatica.py',204),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',205),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',206),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',207),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',208),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',212),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',216),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',220),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',224),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',228),
  ('operando -> identificador','operando',1,'p_operando','analiseSintatica.py',232),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',233),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',234),
  ('constante -> NUMBER','constante',1,'p_constante','analiseSintatica.py',238),
  ('constante -> STRING','constante',1,'p_constante','analiseSintatica.py',239),
  ('constante -> TRUE','constante',1,'p_constante','analiseSintatica.py',240),
  ('constante -> FALSE','constante',1,'p_constante','analiseSintatica.py',241),
  ('identificador -> ID','identificador',1,'p_identificador','analiseSintatica.py',245),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',252),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',256),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',257),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',258),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',262),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',266),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',270),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',275),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',276),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',286),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',287),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',297),
  ('atribuicao -> expressao_matematica_reduzida','atribuicao',1,'p_atribuicao','analiseSintatica.py',298),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',305),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',306),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',307),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',308),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',312),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',316),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',320),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',324),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores','declaracao',4,'p_declaracao','analiseSintatica.py',328),
  ('lista_parametros -> lista_identificadores','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',335),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',336),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',343),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',344),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',351),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',352),
]
