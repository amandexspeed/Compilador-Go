
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALITY EQUALS EXCLAMATION FALSE FLOAT32 FLOAT64 FOR FUNC GREATER ID IF IMPORT INCREMENT INT INT16 INT32 INT64 INT8 LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STR STRING TIMES TRUE VARprograma : pacote importacao declaracaoGlobal funcoes_codigo\n                | pacote importacao funcoes_codigoempty :pacote : PACKAGE ID delimitador \n              | PACKAGE ID NEWLINEimportacao : IMPORT STRING NEWLINE importacao\n                  | IMPORT STRING delimitador importacao\n                  | IMPORT STRING \n                  | emptytipo : ID\n            | STR\n            | inteiro\n            | floatinteiro : INT\n               | INT8 \n               | INT16\n               | INT32\n               | INT64float : FLOAT32\n             | FLOAT64tipo_nullavel : tipo\n                     | emptydeclaracaoGlobal : declaracaoExplicitaGlobal\n                        | declaracaoExplicitaGlobal NEWLINE\n                        | declaracaoExplicitaGlobal NEWLINE declaracaoExplicitaGlobaldeclaracaoExplicitaGlobal : declaracaoExplicitaSimples\n                                 | declaracaoExplicitaEmLista\n                                 | declaracaoExplicitaEmListaEspacadadeclaracaoExplicita : declaracaoExplicitaEmLista\n                           | declaracaoExplicitaEmListaEspacada\n                           | declaracaoExplicitaEmListaSimplesdeclaracaoExplicitaSimples : VAR tiposDeclaracoesExplicitastiposDeclaracoesExplicitas : declaracaoExplicitaSemValor\n                                  | declaracaoExplicitaComValordeclaracaoExplicitaSemValor : ID tipo declaracaoExplicitaComValor : ID tipo EQUALS constantedeclaracaoExplicitaEmLista : VAR BEG_PAREN listaExplicita END_PARENdeclaracaoExplicitaEmListaEspacada : VAR BEG_PAREN NEWLINE listaExplicita END_PARENlistaExplicita : tiposDeclaracoesExplicitas\n                      | listaExplicitaRecursiva\n                      | tiposDeclaracoesExplicitas NEWLINElistaExplicitaRecursiva : tiposDeclaracoesExplicitas NEWLINE listaExplicitadeclaracaoExplicitaEmListaSimples : VAR listaExplicitaSimpleslistaExplicitaSimples : lista_identificadores tipo\n                             | lista_identificadores tipo COLON EQUALS lista_valoresfuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao NEWLINE funcoes_codigo\n                      | funcao\n                      | emptyfuncao : FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACEchamadaFuncao : ID BEG_PAREN lista_valores END_PAREN\n                     | ID BEG_PAREN END_PARENparametros : parametro_simples\n                  | parametros_tipo_unico\n                  | parametros_varios_tipos\n                  | emptyparametro_simples : ID tipoparametros_tipo_unico : ID COMMA lista_parametros_tipo_unicolista_parametros_tipo_unico : ID COMMA lista_parametros_tipo_unico \n                                   | ID tipoparametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tiposlista_parametros_varios_tipos : ID tipo COMMA lista_parametros_varios_tipos    \n                                     | ID tipocodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas SEMICOLON\n                      | estruturas NEWLINE\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unario\n                  | chamadaFuncao\n                  | expressao_matematica_reduzida\n                  | retornodelimitador  : SEMICOLON\n                    | SEMICOLON NEWLINEexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALITY expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3expressao_n3 : soma \n                    | sub \n                    | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando\n                    | negationnegation : EXCLAMATION operando unario : incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : constante\n                | chamadaFuncao\n                | expParentesesconstante : constante_numero\n                 | constante_string\n                 | constante_booleano\n                 | constante_idconstante_numero : NUMBERconstante_string : STRINGconstante_booleano : TRUE\n                          | FALSEconstante_id : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE\n                 | FOR atribuicao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEatribuicao_for : ID EQUALS expressaodeclaracao_for : ID COLON EQUALS expressaofor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifretorno : RETURN expressaoatribuicao : lista_identificadores EQUALS lista_valoresdeclaracao : declaracaoCurta\n                  | declaracaoExplicitadeclaracaoCurta : lista_identificadores COLON EQUALS lista_valoreslista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressaoexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,2,4,6,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,27,29,30,32,33,34,35,36,37,43,44,45,46,47,48,49,50,51,52,53,54,55,56,63,70,72,73,74,75,76,77,78,79,80,81,99,],[0,-3,-3,-9,-3,-2,-23,-48,-49,-26,-27,-28,-8,-4,-5,-78,-1,-24,-3,-3,-32,-33,-34,-3,-3,-79,-25,-46,-47,-10,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-6,-7,-37,-38,-133,-36,-125,-126,-127,-128,-129,-130,-131,-132,-50,]),'IMPORT':([2,19,20,21,32,33,34,],[5,-4,-5,-78,5,5,-79,]),'FUNC':([2,4,6,8,10,13,14,15,18,19,20,21,23,24,25,27,29,30,32,33,34,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,63,70,72,73,74,75,76,77,78,79,80,81,],[-3,16,-9,16,-23,-26,-27,-28,-8,-4,-5,-78,-24,16,16,-32,-33,-34,-3,-3,-79,-25,-10,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-6,-7,-37,-38,-133,-36,-125,-126,-127,-128,-129,-130,-131,-132,]),'VAR':([2,4,6,18,19,20,21,23,32,33,34,55,56,92,96,97,100,102,136,137,178,190,212,263,265,266,],[-3,17,-9,-8,-4,-5,-78,17,-3,-3,-79,-6,-7,-3,134,-66,-65,-69,-67,-68,-3,-3,-3,-3,-3,-3,]),'ID':([3,16,17,28,31,38,40,57,65,66,68,69,82,83,88,90,92,96,97,98,100,102,114,127,131,132,133,134,136,137,138,139,165,167,168,178,184,185,188,189,190,193,194,195,196,197,198,199,200,201,207,208,209,210,211,212,214,216,218,221,222,225,227,244,253,255,257,263,265,266,],[7,26,31,31,43,57,31,43,31,72,83,43,88,43,43,83,-3,122,-66,88,-65,-69,166,166,180,181,182,185,-67,-68,166,188,203,166,166,-3,43,-154,-153,166,-3,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-3,166,166,166,166,166,166,166,166,166,166,166,-3,-3,-3,]),'STRING':([5,66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[18,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'NEWLINE':([7,10,11,13,14,15,18,21,27,28,29,30,41,43,44,45,46,47,48,49,50,51,52,53,54,63,70,72,73,74,75,76,77,78,79,80,81,92,96,97,99,100,101,102,103,104,105,106,107,108,109,110,112,113,115,116,117,118,119,120,121,123,124,125,126,128,129,130,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,175,178,181,182,183,186,187,190,202,203,206,212,217,219,223,224,226,228,229,230,231,232,233,234,235,236,237,238,239,242,247,248,249,250,251,252,254,258,262,263,264,265,266,270,271,272,],[20,23,25,-26,-27,-28,32,34,-32,40,-33,-34,65,-10,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-37,-38,-133,-36,-125,-126,-127,-128,-129,-130,-131,-132,-3,102,-66,-50,-65,137,-69,-70,-71,-72,-73,-74,-75,-76,-77,-150,-151,-135,-136,-137,-114,-115,-116,-117,-157,-158,-159,-160,-29,-30,-31,-67,-68,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-148,-3,-119,-121,-43,-149,-156,-3,-113,-133,-52,-3,-44,-152,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,-161,-162,-163,-164,-142,-155,-145,-83,-84,-96,-97,-143,-144,-45,-3,-147,-3,-3,-146,-138,-139,]),'SEMICOLON':([7,11,18,43,45,46,47,48,49,50,51,52,53,54,63,70,74,75,76,77,78,79,80,81,99,101,103,104,105,106,107,108,109,110,112,113,115,116,117,118,119,120,121,123,124,125,126,128,129,130,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,175,176,179,181,182,183,186,187,202,203,206,217,219,223,224,226,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,245,247,248,249,250,251,252,254,256,258,262,264,270,271,272,],[21,21,21,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-37,-38,-125,-126,-127,-128,-129,-130,-131,-132,-50,136,-70,-71,-72,-73,-74,-75,-76,-77,-150,-151,-135,-136,-137,-114,-115,-116,-117,-157,-158,-159,-160,-29,-30,-31,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-148,211,214,-119,-121,-43,-149,-156,-113,-133,-52,-44,-152,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,-161,-162,-163,-164,253,-142,255,-140,-155,-145,-83,-84,-96,-97,-143,-141,-144,-45,-147,-146,-138,-139,]),'BEG_PAREN':([17,26,114,122,127,131,134,138,165,166,167,168,180,189,193,194,195,196,197,198,199,200,201,203,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[28,38,167,168,167,167,28,167,167,168,167,167,168,167,167,167,167,167,167,167,167,167,167,168,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'END_PAREN':([29,30,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,60,61,62,64,65,67,71,72,73,74,75,76,77,78,79,80,81,84,89,91,93,94,118,119,120,121,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,169,170,181,182,187,202,203,204,205,206,223,224,226,228,229,230,231,232,233,234,235,247,249,250,251,252,],[-33,-34,-3,63,-39,-40,-10,-35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,69,-53,-54,-55,-56,70,-41,-57,-42,-133,-36,-125,-126,-127,-128,-129,-130,-131,-132,-58,-61,-60,-63,-59,-114,-115,-116,-117,-62,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,206,-118,-120,-119,-121,-156,-113,-133,234,235,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,-155,-83,-84,-96,-97,]),'STR':([31,57,69,83,88,184,185,188,],[45,45,45,45,45,45,-154,-153,]),'INT':([31,57,69,83,88,184,185,188,],[48,48,48,48,48,48,-154,-153,]),'INT8':([31,57,69,83,88,184,185,188,],[49,49,49,49,49,49,-154,-153,]),'INT16':([31,57,69,83,88,184,185,188,],[50,50,50,50,50,50,-154,-153,]),'INT32':([31,57,69,83,88,184,185,188,],[51,51,51,51,51,51,-154,-153,]),'INT64':([31,57,69,83,88,184,185,188,],[52,52,52,52,52,52,-154,-153,]),'FLOAT32':([31,57,69,83,88,184,185,188,],[53,53,53,53,53,53,-154,-153,]),'FLOAT64':([31,57,69,83,88,184,185,188,],[54,54,54,54,54,54,-154,-153,]),'EQUALS':([43,44,45,46,47,48,49,50,51,52,53,54,111,122,140,171,172,173,174,180,188,194,195,215,246,],[-10,66,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,138,-154,189,207,208,209,210,216,-153,225,227,244,257,]),'COMMA':([43,45,46,47,48,49,50,51,52,53,54,57,67,74,75,76,77,78,79,80,81,83,93,111,118,119,120,121,122,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,181,182,184,185,186,187,188,202,203,205,206,219,223,224,226,228,229,230,231,232,233,234,235,247,249,250,251,252,262,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,68,82,-125,-126,-127,-128,-129,-130,-131,-132,90,98,139,-114,-115,-116,-117,-154,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-119,-121,139,-154,218,-156,-153,-113,-133,218,-52,218,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,-155,-83,-84,-96,-97,218,]),'BEG_BRACE':([43,45,46,47,48,49,50,51,52,53,54,69,74,75,76,77,78,79,80,81,85,86,87,118,119,120,121,131,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,177,180,181,182,202,203,206,223,224,226,228,229,230,231,232,233,234,235,249,250,251,252,259,260,261,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-3,-125,-126,-127,-128,-129,-130,-131,-132,92,-21,-22,-114,-115,-116,-117,178,190,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,212,-133,-119,-121,-113,-133,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,-83,-84,-96,-97,263,265,266,]),'COLON':([43,45,46,47,48,49,50,51,52,53,54,111,122,180,188,217,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,140,-154,215,-153,246,]),'NUMBER':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'TRUE':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'FALSE':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'TIMES':([74,75,76,77,78,79,80,81,118,119,120,121,122,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,229,230,231,232,233,234,235,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,173,199,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,199,199,-107,-109,-108,-134,-51,]),'DIVISION':([74,75,76,77,78,79,80,81,118,119,120,121,122,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,229,230,231,232,233,234,235,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,174,200,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,200,200,-107,-109,-108,-134,-51,]),'MOD':([74,75,76,77,78,79,80,81,118,119,120,121,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,229,230,231,232,233,234,235,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,201,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,201,201,-107,-109,-108,-134,-51,]),'DIFFERENT':([74,75,76,77,78,79,80,81,118,119,120,121,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,229,230,231,232,233,234,235,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,196,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,-101,-102,-107,-109,-108,-134,-51,]),'PLUS':([74,75,76,77,78,79,80,81,118,119,120,121,122,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,223,224,226,228,229,230,231,232,233,234,235,251,252,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,171,197,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,197,197,197,197,-101,-102,-107,-109,-108,-134,-51,197,197,]),'MINUS':([74,75,76,77,78,79,80,81,118,119,120,121,122,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,223,224,226,228,229,230,231,232,233,234,235,251,252,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,172,198,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,198,198,198,198,-101,-102,-107,-109,-108,-134,-51,198,198,]),'EQUALITY':([74,75,76,77,78,79,80,81,118,119,120,121,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,223,224,226,228,229,230,231,232,233,234,235,249,250,251,252,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,193,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,193,193,-96,-97,]),'GREATER':([74,75,76,77,78,79,80,81,118,119,120,121,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,223,224,226,228,229,230,231,232,233,234,235,249,250,251,252,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,194,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,194,194,-96,-97,]),'LESS':([74,75,76,77,78,79,80,81,118,119,120,121,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,180,181,182,202,203,206,223,224,226,228,229,230,231,232,233,234,235,249,250,251,252,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,195,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,-133,-119,-121,-113,-133,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,195,195,-96,-97,]),'AMPERSAND':([74,75,76,77,78,79,80,81,118,119,120,121,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,175,177,180,181,182,187,191,202,203,204,206,223,224,226,228,229,230,231,232,233,234,235,236,237,238,239,240,243,245,247,249,250,251,252,256,260,261,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,191,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,191,191,-133,-119,-121,191,221,-113,-133,191,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,191,191,191,191,191,191,191,191,-83,-84,-96,-97,191,191,191,]),'PIPE':([74,75,76,77,78,79,80,81,118,119,120,121,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,169,170,175,177,180,181,182,187,192,202,203,204,206,223,224,226,228,229,230,231,232,233,234,235,236,237,238,239,240,243,245,247,249,250,251,252,256,260,261,],[-125,-126,-127,-128,-129,-130,-131,-132,-114,-115,-116,-117,192,-80,-81,-82,-85,-86,-87,-88,-89,-90,-91,-98,-99,-100,-103,-104,-105,-106,-110,-111,-112,-122,-123,-124,-133,-118,-120,192,192,-133,-119,-121,192,222,-113,-133,192,-52,-92,-94,-95,-93,-101,-102,-107,-109,-108,-134,-51,192,192,192,192,192,192,192,192,-83,-84,-96,-97,192,192,192,]),'IF':([92,96,97,100,102,136,137,178,190,212,259,263,265,266,],[-3,114,-66,-65,-69,-67,-68,-3,-3,-3,114,-3,-3,-3,]),'RETURN':([92,96,97,100,102,136,137,178,190,212,263,265,266,],[-3,127,-66,-65,-69,-67,-68,-3,-3,-3,-3,-3,-3,]),'FOR':([92,96,97,100,102,136,137,178,190,212,263,265,266,],[-3,131,-66,-65,-69,-67,-68,-3,-3,-3,-3,-3,-3,]),'INCREMENT':([92,96,97,100,102,114,122,127,131,136,137,138,166,167,168,178,180,189,190,193,194,195,196,197,198,199,200,201,207,208,209,210,211,212,214,216,218,221,222,225,227,244,253,255,257,263,265,266,],[-3,132,-66,-65,-69,132,169,132,132,-67,-68,132,169,132,132,-3,169,132,-3,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-3,132,132,132,132,132,132,132,132,132,132,132,-3,-3,-3,]),'DECREMENT':([92,96,97,100,102,114,122,127,131,136,137,138,166,167,168,178,180,189,190,193,194,195,196,197,198,199,200,201,207,208,209,210,211,212,214,216,218,221,222,225,227,244,253,255,257,263,265,266,],[-3,133,-66,-65,-69,133,170,133,133,-67,-68,133,170,133,133,-3,170,133,-3,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-3,133,133,133,133,133,133,133,133,133,133,133,-3,-3,-3,]),'END_BRACE':([92,95,96,97,100,102,136,137,178,190,212,213,220,241,263,265,266,267,268,269,],[-3,99,-64,-66,-65,-69,-67,-68,-3,-3,-3,242,248,254,-3,-3,-3,270,271,272,]),'EXCLAMATION':([114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'ELSE':([248,],[259,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([2,32,33,],[4,55,56,]),'empty':([2,4,8,24,25,32,33,38,69,92,178,190,212,263,265,266,],[6,12,12,12,12,6,6,62,87,97,97,97,97,97,97,97,]),'declaracaoGlobal':([4,],[8,]),'funcoes_codigo':([4,8,24,25,],[9,22,36,37,]),'declaracaoExplicitaGlobal':([4,23,],[10,35,]),'funcao':([4,8,24,25,],[11,11,11,11,]),'declaracaoExplicitaSimples':([4,23,],[13,13,]),'declaracaoExplicitaEmLista':([4,23,96,],[14,14,128,]),'declaracaoExplicitaEmListaEspacada':([4,23,96,],[15,15,129,]),'delimitador':([7,11,18,],[19,24,33,]),'tiposDeclaracoesExplicitas':([17,28,40,65,],[27,41,41,41,]),'declaracaoExplicitaSemValor':([17,28,40,65,],[29,29,29,29,]),'declaracaoExplicitaComValor':([17,28,40,65,],[30,30,30,30,]),'listaExplicita':([28,40,65,],[39,64,71,]),'listaExplicitaRecursiva':([28,40,65,],[42,42,42,]),'tipo':([31,57,69,83,88,184,],[44,67,86,91,93,217,]),'inteiro':([31,57,69,83,88,184,],[46,46,46,46,46,46,]),'float':([31,57,69,83,88,184,],[47,47,47,47,47,47,]),'parametros':([38,],[58,]),'parametro_simples':([38,],[59,]),'parametros_tipo_unico':([38,],[60,]),'parametros_varios_tipos':([38,],[61,]),'constante':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[73,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'constante_numero':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'constante_string':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'constante_booleano':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'constante_id':([66,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'lista_parametros_tipo_unico':([68,90,],[84,94,]),'tipo_nullavel':([69,],[85,]),'lista_parametros_varios_tipos':([82,98,],[89,135,]),'codigo':([92,178,190,212,263,265,266,],[95,213,220,241,267,268,269,]),'lista_estruturas':([92,178,190,212,263,265,266,],[96,96,96,96,96,96,96,]),'estruturasBase':([96,],[100,]),'estruturas':([96,],[101,]),'atribuicao':([96,],[103,]),'declaracao':([96,],[104,]),'estrutura_if':([96,259,],[105,264,]),'estrutura_for':([96,],[106,]),'unario':([96,114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[107,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'chamadaFuncao':([96,114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[108,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'expressao_matematica_reduzida':([96,],[109,]),'retorno':([96,],[110,]),'lista_identificadores':([96,134,],[111,184,]),'declaracaoCurta':([96,],[112,]),'declaracaoExplicita':([96,],[113,]),'for_CLIKE':([96,],[115,]),'for_infinito':([96,],[116,]),'for_while':([96,],[117,]),'incremento':([96,114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'decremento':([96,114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'pre_incremento':([96,114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'pre_decremento':([96,114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'assign_plus':([96,],[123,]),'assign_minus':([96,],[124,]),'assign_mult':([96,],[125,]),'assign_div':([96,],[126,]),'declaracaoExplicitaEmListaSimples':([96,],[130,]),'expressao':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,244,253,255,257,],[141,175,177,187,204,187,187,236,237,238,239,240,243,245,247,256,260,261,187,]),'and':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,244,253,255,257,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'or':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,244,253,255,257,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'expressao_n2':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,249,250,144,144,144,144,]),'equals':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'different':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'greater':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'less':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'greater_or_equal':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'less_or_equal':([114,127,131,138,167,168,189,207,208,209,210,211,214,216,218,221,222,244,253,255,257,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'expressao_n3':([114,127,131,138,167,168,189,193,194,195,196,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[151,151,151,151,151,151,151,223,224,226,228,151,151,151,151,151,151,151,151,151,151,251,252,151,151,151,151,]),'soma':([114,127,131,138,167,168,189,193,194,195,196,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'sub':([114,127,131,138,167,168,189,193,194,195,196,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'expressao_n4':([114,127,131,138,167,168,189,193,194,195,196,197,198,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[154,154,154,154,154,154,154,154,154,154,154,229,230,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'mult':([114,127,131,138,167,168,189,193,194,195,196,197,198,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'div':([114,127,131,138,167,168,189,193,194,195,196,197,198,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'mod':([114,127,131,138,167,168,189,193,194,195,196,197,198,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'expressao_n5':([114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[158,158,158,158,158,158,158,158,158,158,158,158,158,231,232,233,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'operando':([114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[160,160,160,160,202,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'negation':([114,127,131,138,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'expParenteses':([114,127,131,138,165,167,168,189,193,194,195,196,197,198,199,200,201,207,208,209,210,211,214,216,218,221,222,225,227,244,253,255,257,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'declaracao_for':([131,],[176,]),'atribuicao_for':([131,],[179,]),'listaExplicitaSimples':([134,],[183,]),'lista_valores':([138,168,189,257,],[186,205,219,262,]),'estrutura_else':([248,],[258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote importacao declaracaoGlobal funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',14),
  ('programa -> pacote importacao funcoes_codigo','programa',3,'p_programa','analiseSintatica.py',15),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',22),
  ('pacote -> PACKAGE ID delimitador','pacote',3,'p_pacote','analiseSintatica.py',26),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',27),
  ('importacao -> IMPORT STRING NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',31),
  ('importacao -> IMPORT STRING delimitador importacao','importacao',4,'p_importacao','analiseSintatica.py',32),
  ('importacao -> IMPORT STRING','importacao',2,'p_importacao','analiseSintatica.py',33),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',34),
  ('tipo -> ID','tipo',1,'p_tipo','analiseSintatica.py',46),
  ('tipo -> STR','tipo',1,'p_tipo','analiseSintatica.py',47),
  ('tipo -> inteiro','tipo',1,'p_tipo','analiseSintatica.py',48),
  ('tipo -> float','tipo',1,'p_tipo','analiseSintatica.py',49),
  ('inteiro -> INT','inteiro',1,'p_inteiro','analiseSintatica.py',53),
  ('inteiro -> INT8','inteiro',1,'p_inteiro','analiseSintatica.py',54),
  ('inteiro -> INT16','inteiro',1,'p_inteiro','analiseSintatica.py',55),
  ('inteiro -> INT32','inteiro',1,'p_inteiro','analiseSintatica.py',56),
  ('inteiro -> INT64','inteiro',1,'p_inteiro','analiseSintatica.py',57),
  ('float -> FLOAT32','float',1,'p_float','analiseSintatica.py',61),
  ('float -> FLOAT64','float',1,'p_float','analiseSintatica.py',62),
  ('tipo_nullavel -> tipo','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',66),
  ('tipo_nullavel -> empty','tipo_nullavel',1,'p_tipo_nullavel','analiseSintatica.py',67),
  ('declaracaoGlobal -> declaracaoExplicitaGlobal','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',71),
  ('declaracaoGlobal -> declaracaoExplicitaGlobal NEWLINE','declaracaoGlobal',2,'p_declaracaoGlobal','analiseSintatica.py',72),
  ('declaracaoGlobal -> declaracaoExplicitaGlobal NEWLINE declaracaoExplicitaGlobal','declaracaoGlobal',3,'p_declaracaoGlobal','analiseSintatica.py',73),
  ('declaracaoExplicitaGlobal -> declaracaoExplicitaSimples','declaracaoExplicitaGlobal',1,'p_declaracaoExplicitaGlobal','analiseSintatica.py',77),
  ('declaracaoExplicitaGlobal -> declaracaoExplicitaEmLista','declaracaoExplicitaGlobal',1,'p_declaracaoExplicitaGlobal','analiseSintatica.py',78),
  ('declaracaoExplicitaGlobal -> declaracaoExplicitaEmListaEspacada','declaracaoExplicitaGlobal',1,'p_declaracaoExplicitaGlobal','analiseSintatica.py',79),
  ('declaracaoExplicita -> declaracaoExplicitaEmLista','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',83),
  ('declaracaoExplicita -> declaracaoExplicitaEmListaEspacada','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',84),
  ('declaracaoExplicita -> declaracaoExplicitaEmListaSimples','declaracaoExplicita',1,'p_declaracaoExplicita','analiseSintatica.py',85),
  ('declaracaoExplicitaSimples -> VAR tiposDeclaracoesExplicitas','declaracaoExplicitaSimples',2,'p_declaracaoExplicitaSimples','analiseSintatica.py',89),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaSemValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',93),
  ('tiposDeclaracoesExplicitas -> declaracaoExplicitaComValor','tiposDeclaracoesExplicitas',1,'p_tiposDeclaracoesExplicitas','analiseSintatica.py',94),
  ('declaracaoExplicitaSemValor -> ID tipo','declaracaoExplicitaSemValor',2,'p_declaracaoExplicitaSemValor','analiseSintatica.py',98),
  ('declaracaoExplicitaComValor -> ID tipo EQUALS constante','declaracaoExplicitaComValor',4,'p_declaracaoExplicitaComValor','analiseSintatica.py',102),
  ('declaracaoExplicitaEmLista -> VAR BEG_PAREN listaExplicita END_PAREN','declaracaoExplicitaEmLista',4,'p_declaracaoExplicitaEmLista','analiseSintatica.py',106),
  ('declaracaoExplicitaEmListaEspacada -> VAR BEG_PAREN NEWLINE listaExplicita END_PAREN','declaracaoExplicitaEmListaEspacada',5,'p_declaracaoExplicitaEmListaEspacada','analiseSintatica.py',110),
  ('listaExplicita -> tiposDeclaracoesExplicitas','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',114),
  ('listaExplicita -> listaExplicitaRecursiva','listaExplicita',1,'p_listaExplicita','analiseSintatica.py',115),
  ('listaExplicita -> tiposDeclaracoesExplicitas NEWLINE','listaExplicita',2,'p_listaExplicita','analiseSintatica.py',116),
  ('listaExplicitaRecursiva -> tiposDeclaracoesExplicitas NEWLINE listaExplicita','listaExplicitaRecursiva',3,'p_listaExplicitaRecursiva','analiseSintatica.py',124),
  ('declaracaoExplicitaEmListaSimples -> VAR listaExplicitaSimples','declaracaoExplicitaEmListaSimples',2,'p_declaracaoExplicitaEmListaSimples','analiseSintatica.py',128),
  ('listaExplicitaSimples -> lista_identificadores tipo','listaExplicitaSimples',2,'p_listaExplicitaSimples','analiseSintatica.py',132),
  ('listaExplicitaSimples -> lista_identificadores tipo COLON EQUALS lista_valores','listaExplicitaSimples',5,'p_listaExplicitaSimples','analiseSintatica.py',133),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',140),
  ('funcoes_codigo -> funcao NEWLINE funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',141),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',142),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',143),
  ('funcao -> FUNC ID BEG_PAREN parametros END_PAREN tipo_nullavel BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',147),
  ('chamadaFuncao -> ID BEG_PAREN lista_valores END_PAREN','chamadaFuncao',4,'p_chamadaFuncao','analiseSintatica.py',151),
  ('chamadaFuncao -> ID BEG_PAREN END_PAREN','chamadaFuncao',3,'p_chamadaFuncao','analiseSintatica.py',152),
  ('parametros -> parametro_simples','parametros',1,'p_parametros','analiseSintatica.py',159),
  ('parametros -> parametros_tipo_unico','parametros',1,'p_parametros','analiseSintatica.py',160),
  ('parametros -> parametros_varios_tipos','parametros',1,'p_parametros','analiseSintatica.py',161),
  ('parametros -> empty','parametros',1,'p_parametros','analiseSintatica.py',162),
  ('parametro_simples -> ID tipo','parametro_simples',2,'p_parametro_simples','analiseSintatica.py',166),
  ('parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','parametros_tipo_unico',3,'p_parametros_tipo_unico','analiseSintatica.py',170),
  ('lista_parametros_tipo_unico -> ID COMMA lista_parametros_tipo_unico','lista_parametros_tipo_unico',3,'p_lista_parametros_tipo_unico','analiseSintatica.py',174),
  ('lista_parametros_tipo_unico -> ID tipo','lista_parametros_tipo_unico',2,'p_lista_parametros_tipo_unico','analiseSintatica.py',175),
  ('parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','parametros_varios_tipos',4,'p_parametros_varios_tipos','analiseSintatica.py',184),
  ('lista_parametros_varios_tipos -> ID tipo COMMA lista_parametros_varios_tipos','lista_parametros_varios_tipos',4,'p_lista_parametros_varios_tipos','analiseSintatica.py',188),
  ('lista_parametros_varios_tipos -> ID tipo','lista_parametros_varios_tipos',2,'p_lista_parametros_varios_tipos','analiseSintatica.py',189),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',198),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',202),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',203),
  ('estruturasBase -> estruturas SEMICOLON','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',213),
  ('estruturasBase -> estruturas NEWLINE','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',214),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',215),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',220),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',221),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',222),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',223),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',224),
  ('estruturas -> chamadaFuncao','estruturas',1,'p_estruturas','analiseSintatica.py',225),
  ('estruturas -> expressao_matematica_reduzida','estruturas',1,'p_estruturas','analiseSintatica.py',226),
  ('estruturas -> retorno','estruturas',1,'p_estruturas','analiseSintatica.py',227),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',232),
  ('delimitador -> SEMICOLON NEWLINE','delimitador',2,'p_delimitador','analiseSintatica.py',233),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',237),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',238),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',239),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',243),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',247),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',251),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',252),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',253),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',254),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',255),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',256),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',257),
  ('equals -> expressao_n2 EQUALITY expressao_n3','equals',3,'p_equals','analiseSintatica.py',261),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',265),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',269),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',273),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',277),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',281),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',285),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',286),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',287),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',293),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',297),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',301),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',302),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',303),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',304),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',308),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',312),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',316),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',320),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',321),
  ('expressao_n5 -> negation','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',322),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',326),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',330),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',331),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',332),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',333),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',337),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',341),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',345),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',349),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',353),
  ('operando -> chamadaFuncao','operando',1,'p_operando','analiseSintatica.py',354),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',355),
  ('constante -> constante_numero','constante',1,'p_constante','analiseSintatica.py',359),
  ('constante -> constante_string','constante',1,'p_constante','analiseSintatica.py',360),
  ('constante -> constante_booleano','constante',1,'p_constante','analiseSintatica.py',361),
  ('constante -> constante_id','constante',1,'p_constante','analiseSintatica.py',362),
  ('constante_numero -> NUMBER','constante_numero',1,'p_constante_numero','analiseSintatica.py',366),
  ('constante_string -> STRING','constante_string',1,'p_constante_string','analiseSintatica.py',370),
  ('constante_booleano -> TRUE','constante_booleano',1,'p_constante_booleano','analiseSintatica.py',374),
  ('constante_booleano -> FALSE','constante_booleano',1,'p_constante_booleano','analiseSintatica.py',375),
  ('constante_id -> ID','constante_id',1,'p_constante_id','analiseSintatica.py',379),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',383),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',387),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',388),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',389),
  ('for_CLIKE -> FOR declaracao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',393),
  ('for_CLIKE -> FOR atribuicao_for SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',394),
  ('atribuicao_for -> ID EQUALS expressao','atribuicao_for',3,'p_atribuicao_for','analiseSintatica.py',398),
  ('declaracao_for -> ID COLON EQUALS expressao','declaracao_for',4,'p_declaracao_for','analiseSintatica.py',402),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',406),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',410),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',415),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',416),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',423),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',424),
  ('retorno -> RETURN expressao','retorno',2,'p_retorno','analiseSintatica.py',431),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',435),
  ('declaracao -> declaracaoCurta','declaracao',1,'p_declaracao','analiseSintatica.py',439),
  ('declaracao -> declaracaoExplicita','declaracao',1,'p_declaracao','analiseSintatica.py',440),
  ('declaracaoCurta -> lista_identificadores COLON EQUALS lista_valores','declaracaoCurta',4,'p_declaracaoCurta','analiseSintatica.py',444),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',448),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',449),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',456),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',457),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',487),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',488),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',489),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',490),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',494),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',498),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',502),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',506),
]
