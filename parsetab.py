
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaAMPERSAND BEG_BRACE BEG_PAREN BREAK COLON COMMA CONST DECREMENT DIFFERENT DIVISION ELSE END_BRACE END_PAREN EQUALS EXCLAMATION FALSE FOR FUNC GREATER ID IF IMPORT INCREMENT LESS MINUS MOD NEWLINE NUMBER PACKAGE PIPE PLUS POWER QUOTATION_MARKS RETURN SEMICOLON STRING TIMES TRUE VARprograma : pacote importacao declaracaoGlobal funcoes_codigoempty :pacote : PACKAGE ID NEWLINE importacao : IMPORT ID NEWLINE importacao\n                  | emptydeclaracaoGlobal : regrasDeclaracaoGlobal\n                        | regrasDeclaracaoGlobal NEWLINE\n                        | emptyregrasDeclaracaoGlobal : declaracaoGlobalSimples\n                              | declaracaoEmLista\n                              | declaracaoEmListaEspacadadeclaracaoGlobalSimples : VAR tiposDeclaracoesGlobaistiposDeclaracoesGlobais : declaracaoGlobalSemValor\n                               | declaracaoGlobalComValordeclaracaoGlobalSemValor : ID IDdeclaracaoGlobalComValor : ID ID EQUALS constantedeclaracaoEmLista : VAR BEG_PAREN listaGlobal END_PARENdeclaracaoEmListaEspacada : VAR BEG_PAREN NEWLINE listaGlobal END_PARENlistaGlobal : tiposDeclaracoesGlobais\n                   | listaGlobalRecursiva\n                   | tiposDeclaracoesGlobais NEWLINElistaGlobalRecursiva : tiposDeclaracoesGlobais NEWLINE listaGlobalfuncoes_codigo : funcao delimitador funcoes_codigo\n                      | funcao\n                      | emptyfuncao : FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACEtipo_retorno : ID\n                    | emptycodigo : lista_estruturaslista_estruturas : lista_estruturas estruturasBase\n                        | emptyestruturasBase : estruturas delimitador\n                      | NEWLINEestruturas : atribuicao\n                  | declaracao\n                  | estrutura_if\n                  | estrutura_for\n                  | unario\n                  | chamadaFuncaodelimitador : NEWLINE\n                   | SEMICOLONexpressao : and\n                 | or\n                 | expressao_n2and : expressao AMPERSAND AMPERSAND expressao_n2or : expressao PIPE PIPE expressao_n2expressao_n2 : equals\n                    | different\n                    | greater\n                    | less\n                    | greater_or_equal\n                    | less_or_equal\n                    | expressao_n3equals : expressao_n2 EQUALS EQUALS expressao_n3different : expressao_n3 DIFFERENT expressao_n3greater : expressao_n2 GREATER expressao_n3less : expressao_n2 LESS expressao_n3greater_or_equal : expressao_n2 GREATER EQUALS expressao_n3less_or_equal : expressao_n2 LESS EQUALS expressao_n3 expressao_n3 : soma \n                     | sub \n                     | expressao_n4 soma : expressao_n3 PLUS expressao_n4sub : expressao_n3 MINUS expressao_n4 expressao_n4 : mult \n                     | div \n                     | mod \n                     | expressao_n5 mult : expressao_n4 TIMES expressao_n5mod : expressao_n4 MOD expressao_n5div : expressao_n4 DIVISION expressao_n5expressao_n5 : unario\n                    | operando\n                    | negation unario : incremento\n               | decremento\n               | pre_incremento\n               | pre_decrementonegation : EXCLAMATION operandoincremento : ID INCREMENTpre_incremento : INCREMENT IDdecremento : ID DECREMENTpre_decremento : DECREMENT IDoperando : identificador\n                | constante\n                | chamadaFuncao\n                | expParentesesconstante : NUMBER\n                 | STRING\n                 | TRUE\n                 | FALSEidentificador : IDexpParenteses : BEG_PAREN expressao END_PARENestrutura_for : for_CLIKE\n                     | for_infinito\n                     | for_whilefor_CLIKE : FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACEfor_infinito : FOR BEG_BRACE codigo END_BRACEfor_while : FOR expressao BEG_BRACE codigo END_BRACEestrutura_if : IF expressao BEG_BRACE codigo END_BRACE estrutura_else\n                    | IF expressao BEG_BRACE codigo END_BRACEestrutura_else : ELSE BEG_BRACE codigo END_BRACE\n                      | ELSE estrutura_ifatribuicao : lista_identificadores EQUALS lista_valores\n                  | expressao_matematica_reduzidaexpressao_matematica_reduzida : assign_plus\n                                     | assign_minus\n                                     | assign_mult\n                                     | assign_divassign_plus : ID PLUS EQUALS expressaoassign_minus : ID MINUS EQUALS expressaoassign_mult : ID TIMES EQUALS expressaoassign_div : ID DIVISION EQUALS expressaodeclaracao : lista_identificadores COLON EQUALS lista_valoreschamadaFuncao : ID BEG_PAREN lista_parametros END_PARENlista_parametros : lista_identificadores\n                        | emptylista_identificadores : lista_identificadores COMMA ID\n                             | IDlista_valores : lista_valores COMMA expressao\n                    | expressao'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,2,4,6,8,9,10,11,12,13,16,17,18,19,21,22,24,25,27,28,29,30,36,37,38,40,48,50,51,52,53,54,65,],[0,-2,-2,-5,-2,-6,-8,-9,-10,-11,-3,-1,-24,-25,-7,-12,-13,-14,-2,-2,-40,-41,-15,-4,-23,-17,-18,-16,-88,-89,-90,-91,-26,]),'IMPORT':([2,16,27,],[5,-3,5,]),'VAR':([2,4,6,16,27,37,],[-2,14,-5,-3,-2,-4,]),'FUNC':([2,4,6,8,9,10,11,12,13,16,21,22,24,25,27,28,29,30,36,37,40,48,50,51,52,53,54,],[-2,-2,-5,20,-6,-8,-9,-10,-11,-3,-7,-12,-13,-14,-2,20,-40,-41,-15,-4,-17,-18,-16,-88,-89,-90,-91,]),'ID':([3,5,14,20,23,26,29,30,33,39,42,55,56,61,63,64,66,68,77,90,91,92,93,94,121,123,124,133,140,141,145,146,147,148,149,150,151,152,157,158,159,160,161,162,164,167,168,169,171,173,196,201,203,],[7,15,26,31,26,36,-40,-41,26,44,26,57,60,-2,85,-31,-30,-33,122,135,136,137,-32,122,154,122,44,-2,122,-2,122,122,122,122,122,122,122,122,122,122,122,122,122,-2,122,122,122,122,122,122,122,-2,-2,]),'NEWLINE':([7,9,11,12,13,15,18,22,23,24,25,29,30,34,36,40,48,50,51,52,53,54,61,63,64,65,66,67,68,69,70,71,72,73,74,76,78,79,80,81,82,83,84,86,87,88,89,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,133,136,137,138,139,141,153,154,162,165,170,172,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,191,192,193,194,195,197,198,201,202,203,206,207,],[16,21,-9,-10,-11,27,29,-12,33,-13,-14,-40,-41,42,-15,-17,-18,-16,-88,-89,-90,-91,-2,68,-31,-26,-30,29,-33,-34,-35,-36,-37,-38,-39,-105,-94,-95,-96,-75,-76,-77,-78,-106,-107,-108,-109,-32,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-2,-81,-83,-104,-121,-2,-79,-92,-2,-114,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,-110,-111,-112,-113,-98,-120,-101,-45,-46,-54,-58,-59,-99,-100,-2,-103,-2,-102,-97,]),'BEG_PAREN':([14,31,77,85,90,94,121,122,123,135,140,145,146,147,148,149,150,151,152,154,157,158,159,160,161,164,167,168,169,171,173,196,],[23,39,123,124,123,123,123,124,123,124,123,123,123,123,123,123,123,123,123,124,123,123,123,123,123,123,123,123,123,123,123,123,]),'SEMICOLON':([18,51,52,53,54,65,67,69,70,71,72,73,74,76,78,79,80,81,82,83,84,86,87,88,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,131,136,137,138,139,153,154,165,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,197,198,202,206,207,],[30,-88,-89,-90,-91,-26,30,-34,-35,-36,-37,-38,-39,-105,-94,-95,-96,-75,-76,-77,-78,-106,-107,-108,-109,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,161,-81,-83,-104,-121,-79,-92,-114,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,-110,-111,-112,-113,196,-98,-120,-101,-45,-46,-54,-58,-59,-99,-100,-103,-102,-97,]),'END_PAREN':([24,25,32,34,35,36,39,41,42,44,45,46,47,49,50,51,52,53,54,60,81,82,83,84,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,125,126,136,137,153,154,155,156,170,172,174,175,176,177,178,179,180,181,191,192,193,194,195,],[-13,-14,40,-19,-20,-15,-2,48,-21,-119,55,-116,-117,-22,-16,-88,-89,-90,-91,-118,-75,-76,-77,-78,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-2,-80,-82,-81,-83,-79,-92,180,181,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,-45,-46,-54,-58,-59,]),'IF':([29,30,61,63,64,66,68,93,133,141,162,199,201,203,],[-40,-41,-2,77,-31,-30,-33,-32,-2,-2,-2,77,-2,-2,]),'FOR':([29,30,61,63,64,66,68,93,133,141,162,201,203,],[-40,-41,-2,90,-31,-30,-33,-32,-2,-2,-2,-2,-2,]),'INCREMENT':([29,30,61,63,64,66,68,77,85,90,93,94,122,123,133,135,140,141,145,146,147,148,149,150,151,152,157,158,159,160,161,162,164,167,168,169,171,173,196,201,203,],[-40,-41,-2,91,-31,-30,-33,91,125,91,-32,91,125,91,-2,125,91,-2,91,91,91,91,91,91,91,91,91,91,91,91,91,-2,91,91,91,91,91,91,91,-2,-2,]),'DECREMENT':([29,30,61,63,64,66,68,77,85,90,93,94,122,123,133,135,140,141,145,146,147,148,149,150,151,152,157,158,159,160,161,162,164,167,168,169,171,173,196,201,203,],[-40,-41,-2,92,-31,-30,-33,92,126,92,-32,92,126,92,-2,126,92,-2,92,92,92,92,92,92,92,92,92,92,92,92,92,-2,92,92,92,92,92,92,92,-2,-2,]),'END_BRACE':([29,30,61,62,63,64,66,68,93,133,141,162,163,166,187,201,203,204,205,],[-40,-41,-2,65,-29,-31,-30,-33,-32,-2,-2,-2,188,190,197,-2,-2,206,207,]),'EQUALS':([36,51,52,53,54,60,75,81,82,83,84,85,95,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,127,128,129,130,135,136,137,144,145,146,153,154,170,172,174,175,176,177,178,179,180,181,191,192,193,194,195,],[43,-88,-89,-90,-91,-118,94,-75,-76,-77,-78,-119,140,144,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,157,158,159,160,-92,-81,-83,169,171,173,-79,-92,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,144,144,-54,-58,-59,]),'NUMBER':([43,77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'STRING':([43,77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'TRUE':([43,77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'FALSE':([43,77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'COMMA':([44,46,51,52,53,54,60,75,81,82,83,84,85,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,134,135,136,137,138,139,153,154,165,170,172,174,175,176,177,178,179,180,181,189,191,192,193,194,195,],[-119,56,-88,-89,-90,-91,-118,56,-75,-76,-77,-78,-119,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,56,-119,-81,-83,164,-121,-79,-92,164,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,-120,-45,-46,-54,-58,-59,]),'TIMES':([51,52,53,54,81,82,83,84,85,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,175,176,177,178,179,180,181,],[-88,-89,-90,-91,-75,-76,-77,-78,129,150,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,150,150,-69,-71,-70,-93,-115,]),'DIVISION':([51,52,53,54,81,82,83,84,85,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,175,176,177,178,179,180,181,],[-88,-89,-90,-91,-75,-76,-77,-78,130,151,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,151,151,-69,-71,-70,-93,-115,]),'MOD':([51,52,53,54,81,82,83,84,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,175,176,177,178,179,180,181,],[-88,-89,-90,-91,-75,-76,-77,-78,152,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,152,152,-69,-71,-70,-93,-115,]),'DIFFERENT':([51,52,53,54,81,82,83,84,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,175,176,177,178,179,180,181,],[-88,-89,-90,-91,-75,-76,-77,-78,147,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,-63,-64,-69,-71,-70,-93,-115,]),'PLUS':([51,52,53,54,81,82,83,84,85,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,170,172,174,175,176,177,178,179,180,181,193,194,195,],[-88,-89,-90,-91,-75,-76,-77,-78,127,148,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,148,148,148,-63,-64,-69,-71,-70,-93,-115,148,148,148,]),'MINUS':([51,52,53,54,81,82,83,84,85,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,170,172,174,175,176,177,178,179,180,181,193,194,195,],[-88,-89,-90,-91,-75,-76,-77,-78,128,149,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,149,149,149,-63,-64,-69,-71,-70,-93,-115,149,149,149,]),'GREATER':([51,52,53,54,81,82,83,84,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,170,172,174,175,176,177,178,179,180,181,191,192,193,194,195,],[-88,-89,-90,-91,-75,-76,-77,-78,145,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,145,145,-54,-58,-59,]),'LESS':([51,52,53,54,81,82,83,84,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,135,136,137,153,154,170,172,174,175,176,177,178,179,180,181,191,192,193,194,195,],[-88,-89,-90,-91,-75,-76,-77,-78,146,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,-92,-81,-83,-79,-92,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,146,146,-54,-58,-59,]),'BEG_BRACE':([51,52,53,54,55,57,58,59,81,82,83,84,90,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,132,135,136,137,153,154,170,172,174,175,176,177,178,179,180,181,191,192,193,194,195,199,200,],[-88,-89,-90,-91,-2,-27,61,-28,-75,-76,-77,-78,133,141,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,162,-92,-81,-83,-79,-92,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,-45,-46,-54,-58,-59,201,203,]),'AMPERSAND':([51,52,53,54,81,82,83,84,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,132,135,136,137,139,142,153,154,155,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,189,191,192,193,194,195,200,],[-88,-89,-90,-91,-75,-76,-77,-78,142,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,142,-92,-81,-83,142,167,-79,-92,142,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,142,142,142,142,142,142,-45,-46,-54,-58,-59,142,]),'PIPE':([51,52,53,54,81,82,83,84,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,126,132,135,136,137,139,143,153,154,155,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,189,191,192,193,194,195,200,],[-88,-89,-90,-91,-75,-76,-77,-78,143,-42,-43,-44,-47,-48,-49,-50,-51,-52,-53,-60,-61,-62,-65,-66,-67,-68,-72,-73,-74,-84,-85,-86,-87,-92,-80,-82,143,-92,-81,-83,143,168,-79,-92,143,-56,-57,-55,-63,-64,-69,-71,-70,-93,-115,143,143,143,143,143,143,-45,-46,-54,-58,-59,143,]),'COLON':([60,75,85,134,135,],[-118,95,-119,95,-119,]),'EXCLAMATION':([77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ELSE':([190,],[199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pacote':([0,],[2,]),'importacao':([2,27,],[4,37,]),'empty':([2,4,8,27,28,39,55,61,124,133,141,162,201,203,],[6,10,19,6,19,47,59,64,47,64,64,64,64,64,]),'declaracaoGlobal':([4,],[8,]),'regrasDeclaracaoGlobal':([4,],[9,]),'declaracaoGlobalSimples':([4,],[11,]),'declaracaoEmLista':([4,],[12,]),'declaracaoEmListaEspacada':([4,],[13,]),'funcoes_codigo':([8,28,],[17,38,]),'funcao':([8,28,],[18,18,]),'tiposDeclaracoesGlobais':([14,23,33,42,],[22,34,34,34,]),'declaracaoGlobalSemValor':([14,23,33,42,],[24,24,24,24,]),'declaracaoGlobalComValor':([14,23,33,42,],[25,25,25,25,]),'delimitador':([18,67,],[28,93,]),'listaGlobal':([23,33,42,],[32,41,49,]),'listaGlobalRecursiva':([23,33,42,],[35,35,35,]),'lista_parametros':([39,124,],[45,156,]),'lista_identificadores':([39,63,90,124,],[46,75,134,46,]),'constante':([43,77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[50,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'tipo_retorno':([55,],[58,]),'codigo':([61,133,141,162,201,203,],[62,163,166,187,204,205,]),'lista_estruturas':([61,133,141,162,201,203,],[63,63,63,63,63,63,]),'estruturasBase':([63,],[66,]),'estruturas':([63,],[67,]),'atribuicao':([63,],[69,]),'declaracao':([63,90,],[70,131,]),'estrutura_if':([63,199,],[71,202,]),'estrutura_for':([63,],[72,]),'unario':([63,77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[73,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'chamadaFuncao':([63,77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[74,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'expressao_matematica_reduzida':([63,],[76,]),'for_CLIKE':([63,],[78,]),'for_infinito':([63,],[79,]),'for_while':([63,],[80,]),'incremento':([63,77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'decremento':([63,77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'pre_incremento':([63,77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'pre_decremento':([63,77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'assign_plus':([63,],[86,]),'assign_minus':([63,],[87,]),'assign_mult':([63,],[88,]),'assign_div':([63,],[89,]),'expressao':([77,90,94,123,140,157,158,159,160,161,164,196,],[96,132,139,155,139,182,183,184,185,186,189,200,]),'and':([77,90,94,123,140,157,158,159,160,161,164,196,],[97,97,97,97,97,97,97,97,97,97,97,97,]),'or':([77,90,94,123,140,157,158,159,160,161,164,196,],[98,98,98,98,98,98,98,98,98,98,98,98,]),'expressao_n2':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[99,99,99,99,99,99,99,99,99,99,99,191,192,99,]),'equals':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'different':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'greater':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'less':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'greater_or_equal':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'less_or_equal':([77,90,94,123,140,157,158,159,160,161,164,167,168,196,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'expressao_n3':([77,90,94,123,140,145,146,147,157,158,159,160,161,164,167,168,169,171,173,196,],[106,106,106,106,106,170,172,174,106,106,106,106,106,106,106,106,193,194,195,106,]),'soma':([77,90,94,123,140,145,146,147,157,158,159,160,161,164,167,168,169,171,173,196,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'sub':([77,90,94,123,140,145,146,147,157,158,159,160,161,164,167,168,169,171,173,196,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'expressao_n4':([77,90,94,123,140,145,146,147,148,149,157,158,159,160,161,164,167,168,169,171,173,196,],[109,109,109,109,109,109,109,109,175,176,109,109,109,109,109,109,109,109,109,109,109,109,]),'mult':([77,90,94,123,140,145,146,147,148,149,157,158,159,160,161,164,167,168,169,171,173,196,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'div':([77,90,94,123,140,145,146,147,148,149,157,158,159,160,161,164,167,168,169,171,173,196,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'mod':([77,90,94,123,140,145,146,147,148,149,157,158,159,160,161,164,167,168,169,171,173,196,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'expressao_n5':([77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[113,113,113,113,113,113,113,113,113,113,177,178,179,113,113,113,113,113,113,113,113,113,113,113,113,]),'operando':([77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[115,115,115,153,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'negation':([77,90,94,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'identificador':([77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'expParenteses':([77,90,94,121,123,140,145,146,147,148,149,150,151,152,157,158,159,160,161,164,167,168,169,171,173,196,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'lista_valores':([94,140,],[138,165,]),'estrutura_else':([190,],[198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> pacote importacao declaracaoGlobal funcoes_codigo','programa',4,'p_programa','analiseSintatica.py',12),
  ('empty -> <empty>','empty',0,'p_empty','analiseSintatica.py',16),
  ('pacote -> PACKAGE ID NEWLINE','pacote',3,'p_pacote','analiseSintatica.py',20),
  ('importacao -> IMPORT ID NEWLINE importacao','importacao',4,'p_importacao','analiseSintatica.py',24),
  ('importacao -> empty','importacao',1,'p_importacao','analiseSintatica.py',25),
  ('declaracaoGlobal -> regrasDeclaracaoGlobal','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',36),
  ('declaracaoGlobal -> regrasDeclaracaoGlobal NEWLINE','declaracaoGlobal',2,'p_declaracaoGlobal','analiseSintatica.py',37),
  ('declaracaoGlobal -> empty','declaracaoGlobal',1,'p_declaracaoGlobal','analiseSintatica.py',38),
  ('regrasDeclaracaoGlobal -> declaracaoGlobalSimples','regrasDeclaracaoGlobal',1,'p_regrasDeclaracaoGlobal','analiseSintatica.py',42),
  ('regrasDeclaracaoGlobal -> declaracaoEmLista','regrasDeclaracaoGlobal',1,'p_regrasDeclaracaoGlobal','analiseSintatica.py',43),
  ('regrasDeclaracaoGlobal -> declaracaoEmListaEspacada','regrasDeclaracaoGlobal',1,'p_regrasDeclaracaoGlobal','analiseSintatica.py',44),
  ('declaracaoGlobalSimples -> VAR tiposDeclaracoesGlobais','declaracaoGlobalSimples',2,'p_declaracaoGlobalSimples','analiseSintatica.py',48),
  ('tiposDeclaracoesGlobais -> declaracaoGlobalSemValor','tiposDeclaracoesGlobais',1,'p_tiposDeclaracoesGlobais','analiseSintatica.py',52),
  ('tiposDeclaracoesGlobais -> declaracaoGlobalComValor','tiposDeclaracoesGlobais',1,'p_tiposDeclaracoesGlobais','analiseSintatica.py',53),
  ('declaracaoGlobalSemValor -> ID ID','declaracaoGlobalSemValor',2,'p_declaracaoGlobalSemValor','analiseSintatica.py',57),
  ('declaracaoGlobalComValor -> ID ID EQUALS constante','declaracaoGlobalComValor',4,'p_declaracaoGlobalComValor','analiseSintatica.py',61),
  ('declaracaoEmLista -> VAR BEG_PAREN listaGlobal END_PAREN','declaracaoEmLista',4,'p_declaracaoEmLista','analiseSintatica.py',65),
  ('declaracaoEmListaEspacada -> VAR BEG_PAREN NEWLINE listaGlobal END_PAREN','declaracaoEmListaEspacada',5,'p_declaracaoEmListaEspacada','analiseSintatica.py',69),
  ('listaGlobal -> tiposDeclaracoesGlobais','listaGlobal',1,'p_listaGlobal','analiseSintatica.py',73),
  ('listaGlobal -> listaGlobalRecursiva','listaGlobal',1,'p_listaGlobal','analiseSintatica.py',74),
  ('listaGlobal -> tiposDeclaracoesGlobais NEWLINE','listaGlobal',2,'p_listaGlobal','analiseSintatica.py',75),
  ('listaGlobalRecursiva -> tiposDeclaracoesGlobais NEWLINE listaGlobal','listaGlobalRecursiva',3,'p_listaGlobalRecursiva','analiseSintatica.py',79),
  ('funcoes_codigo -> funcao delimitador funcoes_codigo','funcoes_codigo',3,'p_funcoes_codigo','analiseSintatica.py',83),
  ('funcoes_codigo -> funcao','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',84),
  ('funcoes_codigo -> empty','funcoes_codigo',1,'p_funcoes_codigo','analiseSintatica.py',85),
  ('funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE','funcao',9,'p_funcao','analiseSintatica.py',89),
  ('tipo_retorno -> ID','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',93),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','analiseSintatica.py',94),
  ('codigo -> lista_estruturas','codigo',1,'p_codigo','analiseSintatica.py',98),
  ('lista_estruturas -> lista_estruturas estruturasBase','lista_estruturas',2,'p_lista_estruturas','analiseSintatica.py',102),
  ('lista_estruturas -> empty','lista_estruturas',1,'p_lista_estruturas','analiseSintatica.py',103),
  ('estruturasBase -> estruturas delimitador','estruturasBase',2,'p_estruturasBase','analiseSintatica.py',113),
  ('estruturasBase -> NEWLINE','estruturasBase',1,'p_estruturasBase','analiseSintatica.py',114),
  ('estruturas -> atribuicao','estruturas',1,'p_estruturas','analiseSintatica.py',119),
  ('estruturas -> declaracao','estruturas',1,'p_estruturas','analiseSintatica.py',120),
  ('estruturas -> estrutura_if','estruturas',1,'p_estruturas','analiseSintatica.py',121),
  ('estruturas -> estrutura_for','estruturas',1,'p_estruturas','analiseSintatica.py',122),
  ('estruturas -> unario','estruturas',1,'p_estruturas','analiseSintatica.py',123),
  ('estruturas -> chamadaFuncao','estruturas',1,'p_estruturas','analiseSintatica.py',124),
  ('delimitador -> NEWLINE','delimitador',1,'p_delimitador','analiseSintatica.py',129),
  ('delimitador -> SEMICOLON','delimitador',1,'p_delimitador','analiseSintatica.py',130),
  ('expressao -> and','expressao',1,'p_expressao','analiseSintatica.py',134),
  ('expressao -> or','expressao',1,'p_expressao','analiseSintatica.py',135),
  ('expressao -> expressao_n2','expressao',1,'p_expressao','analiseSintatica.py',136),
  ('and -> expressao AMPERSAND AMPERSAND expressao_n2','and',4,'p_and','analiseSintatica.py',140),
  ('or -> expressao PIPE PIPE expressao_n2','or',4,'p_or','analiseSintatica.py',144),
  ('expressao_n2 -> equals','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',148),
  ('expressao_n2 -> different','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',149),
  ('expressao_n2 -> greater','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',150),
  ('expressao_n2 -> less','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',151),
  ('expressao_n2 -> greater_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',152),
  ('expressao_n2 -> less_or_equal','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',153),
  ('expressao_n2 -> expressao_n3','expressao_n2',1,'p_expressao_n2','analiseSintatica.py',154),
  ('equals -> expressao_n2 EQUALS EQUALS expressao_n3','equals',4,'p_equals','analiseSintatica.py',158),
  ('different -> expressao_n3 DIFFERENT expressao_n3','different',3,'p_different','analiseSintatica.py',162),
  ('greater -> expressao_n2 GREATER expressao_n3','greater',3,'p_greater','analiseSintatica.py',166),
  ('less -> expressao_n2 LESS expressao_n3','less',3,'p_less','analiseSintatica.py',170),
  ('greater_or_equal -> expressao_n2 GREATER EQUALS expressao_n3','greater_or_equal',4,'p_greater_or_equal','analiseSintatica.py',174),
  ('less_or_equal -> expressao_n2 LESS EQUALS expressao_n3','less_or_equal',4,'p_less_or_equal','analiseSintatica.py',178),
  ('expressao_n3 -> soma','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',182),
  ('expressao_n3 -> sub','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',183),
  ('expressao_n3 -> expressao_n4','expressao_n3',1,'p_expressao_n3','analiseSintatica.py',184),
  ('soma -> expressao_n3 PLUS expressao_n4','soma',3,'p_soma','analiseSintatica.py',190),
  ('sub -> expressao_n3 MINUS expressao_n4','sub',3,'p_sub','analiseSintatica.py',194),
  ('expressao_n4 -> mult','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',198),
  ('expressao_n4 -> div','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',199),
  ('expressao_n4 -> mod','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',200),
  ('expressao_n4 -> expressao_n5','expressao_n4',1,'p_expressao_n4','analiseSintatica.py',201),
  ('mult -> expressao_n4 TIMES expressao_n5','mult',3,'p_mult','analiseSintatica.py',207),
  ('mod -> expressao_n4 MOD expressao_n5','mod',3,'p_mod','analiseSintatica.py',211),
  ('div -> expressao_n4 DIVISION expressao_n5','div',3,'p_div','analiseSintatica.py',215),
  ('expressao_n5 -> unario','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',219),
  ('expressao_n5 -> operando','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',220),
  ('expressao_n5 -> negation','expressao_n5',1,'p_expressao_n5','analiseSintatica.py',221),
  ('unario -> incremento','unario',1,'p_unario','analiseSintatica.py',225),
  ('unario -> decremento','unario',1,'p_unario','analiseSintatica.py',226),
  ('unario -> pre_incremento','unario',1,'p_unario','analiseSintatica.py',227),
  ('unario -> pre_decremento','unario',1,'p_unario','analiseSintatica.py',228),
  ('negation -> EXCLAMATION operando','negation',2,'p_negation','analiseSintatica.py',232),
  ('incremento -> ID INCREMENT','incremento',2,'p_incremento','analiseSintatica.py',236),
  ('pre_incremento -> INCREMENT ID','pre_incremento',2,'p_pre_incremento','analiseSintatica.py',240),
  ('decremento -> ID DECREMENT','decremento',2,'p_decremento','analiseSintatica.py',244),
  ('pre_decremento -> DECREMENT ID','pre_decremento',2,'p_pre_decremento','analiseSintatica.py',248),
  ('operando -> identificador','operando',1,'p_operando','analiseSintatica.py',252),
  ('operando -> constante','operando',1,'p_operando','analiseSintatica.py',253),
  ('operando -> chamadaFuncao','operando',1,'p_operando','analiseSintatica.py',254),
  ('operando -> expParenteses','operando',1,'p_operando','analiseSintatica.py',255),
  ('constante -> NUMBER','constante',1,'p_constante','analiseSintatica.py',259),
  ('constante -> STRING','constante',1,'p_constante','analiseSintatica.py',260),
  ('constante -> TRUE','constante',1,'p_constante','analiseSintatica.py',261),
  ('constante -> FALSE','constante',1,'p_constante','analiseSintatica.py',262),
  ('identificador -> ID','identificador',1,'p_identificador','analiseSintatica.py',266),
  ('expParenteses -> BEG_PAREN expressao END_PAREN','expParenteses',3,'p_expParenteses','analiseSintatica.py',273),
  ('estrutura_for -> for_CLIKE','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',277),
  ('estrutura_for -> for_infinito','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',278),
  ('estrutura_for -> for_while','estrutura_for',1,'p_estrutura_for','analiseSintatica.py',279),
  ('for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao BEG_BRACE codigo END_BRACE','for_CLIKE',9,'p_for_CLIKE','analiseSintatica.py',283),
  ('for_infinito -> FOR BEG_BRACE codigo END_BRACE','for_infinito',4,'p_for_infinito','analiseSintatica.py',287),
  ('for_while -> FOR expressao BEG_BRACE codigo END_BRACE','for_while',5,'p_for_while','analiseSintatica.py',291),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else','estrutura_if',6,'p_estrutura_if','analiseSintatica.py',296),
  ('estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE','estrutura_if',5,'p_estrutura_if','analiseSintatica.py',297),
  ('estrutura_else -> ELSE BEG_BRACE codigo END_BRACE','estrutura_else',4,'p_estrutura_else','analiseSintatica.py',307),
  ('estrutura_else -> ELSE estrutura_if','estrutura_else',2,'p_estrutura_else','analiseSintatica.py',308),
  ('atribuicao -> lista_identificadores EQUALS lista_valores','atribuicao',3,'p_atribuicao','analiseSintatica.py',318),
  ('atribuicao -> expressao_matematica_reduzida','atribuicao',1,'p_atribuicao','analiseSintatica.py',319),
  ('expressao_matematica_reduzida -> assign_plus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',326),
  ('expressao_matematica_reduzida -> assign_minus','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',327),
  ('expressao_matematica_reduzida -> assign_mult','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',328),
  ('expressao_matematica_reduzida -> assign_div','expressao_matematica_reduzida',1,'p_expressao_matematica_reduzida','analiseSintatica.py',329),
  ('assign_plus -> ID PLUS EQUALS expressao','assign_plus',4,'p_assign_plus','analiseSintatica.py',333),
  ('assign_minus -> ID MINUS EQUALS expressao','assign_minus',4,'p_assign_minus','analiseSintatica.py',337),
  ('assign_mult -> ID TIMES EQUALS expressao','assign_mult',4,'p_assign_mult','analiseSintatica.py',341),
  ('assign_div -> ID DIVISION EQUALS expressao','assign_div',4,'p_assign_div','analiseSintatica.py',345),
  ('declaracao -> lista_identificadores COLON EQUALS lista_valores','declaracao',4,'p_declaracao','analiseSintatica.py',349),
  ('chamadaFuncao -> ID BEG_PAREN lista_parametros END_PAREN','chamadaFuncao',4,'p_chamadaFuncao','analiseSintatica.py',356),
  ('lista_parametros -> lista_identificadores','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',360),
  ('lista_parametros -> empty','lista_parametros',1,'p_lista_parametros','analiseSintatica.py',361),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','analiseSintatica.py',368),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','analiseSintatica.py',369),
  ('lista_valores -> lista_valores COMMA expressao','lista_valores',3,'p_lista_valores','analiseSintatica.py',376),
  ('lista_valores -> expressao','lista_valores',1,'p_lista_valores','analiseSintatica.py',377),
]
