Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CONST
    POWER
    QUOTATION_MARKS
    RETURN

Grammar

Rule 0     S' -> programa
Rule 1     programa -> pacote importacao funcoes_codigo
Rule 2     funcoes_codigo -> funcao funcoes_codigo
Rule 3     funcoes_codigo -> codigo funcoes_codigo
Rule 4     funcoes_codigo -> empty
Rule 5     empty -> <empty>
Rule 6     pacote -> PACKAGE ID
Rule 7     importacao -> IMPORT ID importacao
Rule 8     importacao -> empty
Rule 9     funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE
Rule 10    tipo_retorno -> ID
Rule 11    tipo_retorno -> empty
Rule 12    codigo -> expressao_matematica_reduzida codigo
Rule 13    codigo -> atribuicao codigo
Rule 14    codigo -> declaracao codigo
Rule 15    codigo -> estrutura_if codigo
Rule 16    codigo -> estrutura_for codigo
Rule 17    codigo -> empty
Rule 18    codigo_reduzido -> expressao_matematica_reduzida
Rule 19    codigo_reduzido -> atribuicao
Rule 20    codigo_reduzido -> declaracao
Rule 21    codigo_reduzido -> estrutura_if
Rule 22    codigo_reduzido -> estrutura_for
Rule 23    expressao -> expressao_matematica
Rule 24    expressao -> expressao_logica
Rule 25    expressao_matematica -> soma
Rule 26    expressao_matematica -> sub
Rule 27    expressao_matematica -> p_expMatMaiorPresc
Rule 28    soma -> expressao_matematica PLUS p_expMatMaiorPresc
Rule 29    sub -> expressao_matematica MINUS p_expMatMaiorPresc
Rule 30    p_expMatMaiorPresc -> mult
Rule 31    p_expMatMaiorPresc -> div
Rule 32    p_expMatMaiorPresc -> mod
Rule 33    p_expMatMaiorPresc -> operando
Rule 34    mult -> p_expMatMaiorPresc TIMES operando
Rule 35    mod -> p_expMatMaiorPresc MOD operando
Rule 36    div -> p_expMatMaiorPresc DIVISION operando
Rule 37    incremento -> ID PLUS PLUS
Rule 38    incremento -> ID PLUS PLUS SEMICOLON
Rule 39    pre_incremento -> PLUS PLUS ID
Rule 40    pre_incremento -> PLUS PLUS ID SEMICOLON
Rule 41    decremento -> ID MINUS MINUS
Rule 42    decremento -> ID MINUS MINUS SEMICOLON
Rule 43    pre_decremento -> MINUS MINUS ID
Rule 44    pre_decremento -> MINUS MINUS ID SEMICOLON
Rule 45    assign_plus -> ID PLUS EQUALS NUMBER
Rule 46    assign_minus -> ID MINUS EQUALS NUMBER
Rule 47    assign_mult -> ID TIMES EQUALS NUMBER
Rule 48    assign_div -> ID DIVISION EQUALS NUMBER
Rule 49    expressao_matematica_reduzida -> assign_plus
Rule 50    expressao_matematica_reduzida -> assign_minus
Rule 51    expressao_matematica_reduzida -> assign_mult
Rule 52    expressao_matematica_reduzida -> assign_div
Rule 53    expressao_matematica_reduzida -> incremento
Rule 54    expressao_matematica_reduzida -> pre_incremento
Rule 55    expressao_matematica_reduzida -> decremento
Rule 56    expressao_matematica_reduzida -> pre_decremento
Rule 57    operando -> identificador
Rule 58    operando -> NUMBER
Rule 59    operando -> STRING
Rule 60    operando -> expParenteses
Rule 61    identificador -> ID
Rule 62    expParenteses -> BEG_PAREN expressao END_PAREN
Rule 63    expressao_logica -> and
Rule 64    expressao_logica -> or
Rule 65    expressao_logica -> equals
Rule 66    expressao_logica -> different
Rule 67    expressao_logica -> greater
Rule 68    expressao_logica -> less
Rule 69    expressao_logica -> greater_or_equal
Rule 70    expressao_logica -> less_or_equal
Rule 71    expressao_logica -> negation
Rule 72    expressao_logica -> TRUE
Rule 73    expressao_logica -> FALSE
Rule 74    and -> expressao AMPERSAND AMPERSAND expressao
Rule 75    or -> expressao PIPE PIPE expressao
Rule 76    equals -> expressao EQUALS EQUALS expressao
Rule 77    different -> expressao EXCLAMATION EQUALS expressao
Rule 78    greater -> expressao GREATER expressao
Rule 79    less -> expressao LESS expressao
Rule 80    greater_or_equal -> expressao GREATER EQUALS expressao
Rule 81    less_or_equal -> expressao LESS EQUALS expressao
Rule 82    negation -> EXCLAMATION expressao
Rule 83    estrutura_for -> for_CLIKE
Rule 84    estrutura_for -> for_infinito
Rule 85    estrutura_for -> for_while
Rule 86    for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
Rule 87    for_infinito -> FOR BEG_BRACE codigo END_BRACE
Rule 88    for_while -> FOR expressao BEG_BRACE codigo END_BRACE
Rule 89    estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else
Rule 90    estrutura_else -> ELSE BEG_BRACE codigo END_BRACE
Rule 91    estrutura_else -> ELSE estrutura_if
Rule 92    estrutura_else -> empty
Rule 93    atribuicao -> lista_identificadores EQUALS lista_valores
Rule 94    atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON
Rule 95    declaracao -> lista_identificadores COLON EQUALS lista_valores
Rule 96    declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON
Rule 97    lista_parametros -> lista_identificadores
Rule 98    lista_parametros -> empty
Rule 99    lista_identificadores -> lista_identificadores COMMA ID
Rule 100   lista_identificadores -> ID
Rule 101   lista_valores -> lista_valores COMMA expressao
Rule 102   lista_valores -> expressao

Terminals, with rules where they appear

AMPERSAND            : 74 74
BEG_BRACE            : 9 86 87 88 89 90
BEG_PAREN            : 9 62
BREAK                : 
COLON                : 95 96
COMMA                : 99 101
CONST                : 
DIVISION             : 36 48
ELSE                 : 90 91
END_BRACE            : 9 86 87 88 89 90
END_PAREN            : 9 62
EQUALS               : 45 46 47 48 76 76 77 80 81 93 94 95 96
EXCLAMATION          : 77 82
FALSE                : 73
FOR                  : 86 87 88
FUNC                 : 9
GREATER              : 78 80
ID                   : 6 7 9 10 37 38 39 40 41 42 43 44 45 46 47 48 61 99 100
IF                   : 89
IMPORT               : 7
LESS                 : 79 81
MINUS                : 29 41 41 42 42 43 43 44 44 46
MOD                  : 35
NUMBER               : 45 46 47 48 58
PACKAGE              : 6
PIPE                 : 75 75
PLUS                 : 28 37 37 38 38 39 39 40 40 45
POWER                : 
QUOTATION_MARKS      : 
RETURN               : 
SEMICOLON            : 38 40 42 44 86 86 94 96
STRING               : 59
TIMES                : 34 47
TRUE                 : 72
error                : 

Nonterminals, with rules where they appear

and                  : 63
assign_div           : 52
assign_minus         : 50
assign_mult          : 51
assign_plus          : 49
atribuicao           : 13 19
codigo               : 3 9 12 13 14 15 16 86 87 88 89 90
codigo_reduzido      : 
declaracao           : 14 20 86
decremento           : 55
different            : 66
div                  : 31
empty                : 4 8 11 17 92 98
equals               : 65
estrutura_else       : 89
estrutura_for        : 16 22
estrutura_if         : 15 21 91
expParenteses        : 60
expressao            : 62 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 86 88 89 101 102
expressao_logica     : 24
expressao_matematica : 23 28 29 86
expressao_matematica_reduzida : 12 18
for_CLIKE            : 83
for_infinito         : 84
for_while            : 85
funcao               : 2
funcoes_codigo       : 1 2 3
greater              : 67
greater_or_equal     : 69
identificador        : 57
importacao           : 1 7
incremento           : 53
less                 : 68
less_or_equal        : 70
lista_identificadores : 93 94 95 96 97 99
lista_parametros     : 9
lista_valores        : 93 94 95 96 101
mod                  : 32
mult                 : 30
negation             : 71
operando             : 33 34 35 36
or                   : 64
p_expMatMaiorPresc   : 27 28 29 34 35 36
pacote               : 1
pre_decremento       : 56
pre_incremento       : 54
programa             : 0
soma                 : 25
sub                  : 26
tipo_retorno         : 9

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . pacote importacao funcoes_codigo
    (6) pacote -> . PACKAGE ID

    PACKAGE         shift and go to state 3

    programa                       shift and go to state 1
    pacote                         shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> pacote . importacao funcoes_codigo
    (7) importacao -> . IMPORT ID importacao
    (8) importacao -> . empty
    (5) empty -> .

    IMPORT          shift and go to state 5
    FUNC            reduce using rule 5 (empty -> .)
    IF              reduce using rule 5 (empty -> .)
    ID              reduce using rule 5 (empty -> .)
    PLUS            reduce using rule 5 (empty -> .)
    MINUS           reduce using rule 5 (empty -> .)
    FOR             reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)

    importacao                     shift and go to state 4
    empty                          shift and go to state 6

state 3

    (6) pacote -> PACKAGE . ID

    ID              shift and go to state 7


state 4

    (1) programa -> pacote importacao . funcoes_codigo
    (2) funcoes_codigo -> . funcao funcoes_codigo
    (3) funcoes_codigo -> . codigo funcoes_codigo
    (4) funcoes_codigo -> . empty
    (9) funcao -> . FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (5) empty -> .
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    FUNC            shift and go to state 12
    $end            reduce using rule 5 (empty -> .)
    IF              shift and go to state 28
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! FUNC            [ reduce using rule 5 (empty -> .) ]
  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    funcoes_codigo                 shift and go to state 8
    funcao                         shift and go to state 9
    codigo                         shift and go to state 10
    empty                          shift and go to state 11
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 5

    (7) importacao -> IMPORT . ID importacao

    ID              shift and go to state 35


state 6

    (8) importacao -> empty .

    FUNC            reduce using rule 8 (importacao -> empty .)
    IF              reduce using rule 8 (importacao -> empty .)
    ID              reduce using rule 8 (importacao -> empty .)
    PLUS            reduce using rule 8 (importacao -> empty .)
    MINUS           reduce using rule 8 (importacao -> empty .)
    FOR             reduce using rule 8 (importacao -> empty .)
    $end            reduce using rule 8 (importacao -> empty .)


state 7

    (6) pacote -> PACKAGE ID .

    IMPORT          reduce using rule 6 (pacote -> PACKAGE ID .)
    FUNC            reduce using rule 6 (pacote -> PACKAGE ID .)
    IF              reduce using rule 6 (pacote -> PACKAGE ID .)
    ID              reduce using rule 6 (pacote -> PACKAGE ID .)
    PLUS            reduce using rule 6 (pacote -> PACKAGE ID .)
    MINUS           reduce using rule 6 (pacote -> PACKAGE ID .)
    FOR             reduce using rule 6 (pacote -> PACKAGE ID .)
    $end            reduce using rule 6 (pacote -> PACKAGE ID .)


state 8

    (1) programa -> pacote importacao funcoes_codigo .

    $end            reduce using rule 1 (programa -> pacote importacao funcoes_codigo .)


state 9

    (2) funcoes_codigo -> funcao . funcoes_codigo
    (2) funcoes_codigo -> . funcao funcoes_codigo
    (3) funcoes_codigo -> . codigo funcoes_codigo
    (4) funcoes_codigo -> . empty
    (9) funcao -> . FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (5) empty -> .
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    FUNC            shift and go to state 12
    $end            reduce using rule 5 (empty -> .)
    IF              shift and go to state 28
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! FUNC            [ reduce using rule 5 (empty -> .) ]
  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    funcao                         shift and go to state 9
    funcoes_codigo                 shift and go to state 36
    codigo                         shift and go to state 10
    empty                          shift and go to state 11
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 10

    (3) funcoes_codigo -> codigo . funcoes_codigo
    (2) funcoes_codigo -> . funcao funcoes_codigo
    (3) funcoes_codigo -> . codigo funcoes_codigo
    (4) funcoes_codigo -> . empty
    (9) funcao -> . FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (5) empty -> .
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    FUNC            shift and go to state 12
    $end            reduce using rule 5 (empty -> .)
    IF              shift and go to state 28
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! FUNC            [ reduce using rule 5 (empty -> .) ]
  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    codigo                         shift and go to state 10
    funcoes_codigo                 shift and go to state 37
    funcao                         shift and go to state 9
    empty                          shift and go to state 11
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 11

    (4) funcoes_codigo -> empty .
    (17) codigo -> empty .

  ! reduce/reduce conflict for $end resolved using rule 4 (funcoes_codigo -> empty .)
    $end            reduce using rule 4 (funcoes_codigo -> empty .)
    FUNC            reduce using rule 17 (codigo -> empty .)
    IF              reduce using rule 17 (codigo -> empty .)
    ID              reduce using rule 17 (codigo -> empty .)
    PLUS            reduce using rule 17 (codigo -> empty .)
    MINUS           reduce using rule 17 (codigo -> empty .)
    FOR             reduce using rule 17 (codigo -> empty .)

  ! $end            [ reduce using rule 17 (codigo -> empty .) ]


state 12

    (9) funcao -> FUNC . ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE

    ID              shift and go to state 38


state 13

    (45) assign_plus -> ID . PLUS EQUALS NUMBER
    (46) assign_minus -> ID . MINUS EQUALS NUMBER
    (47) assign_mult -> ID . TIMES EQUALS NUMBER
    (48) assign_div -> ID . DIVISION EQUALS NUMBER
    (37) incremento -> ID . PLUS PLUS
    (38) incremento -> ID . PLUS PLUS SEMICOLON
    (41) decremento -> ID . MINUS MINUS
    (42) decremento -> ID . MINUS MINUS SEMICOLON
    (100) lista_identificadores -> ID .

    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVISION        shift and go to state 42
    EQUALS          reduce using rule 100 (lista_identificadores -> ID .)
    COLON           reduce using rule 100 (lista_identificadores -> ID .)
    COMMA           reduce using rule 100 (lista_identificadores -> ID .)


state 14

    (12) codigo -> expressao_matematica_reduzida . codigo
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    IF              shift and go to state 28
    FUNC            reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    expressao_matematica_reduzida  shift and go to state 14
    codigo                         shift and go to state 43
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 15

    (13) codigo -> atribuicao . codigo
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    IF              shift and go to state 28
    FUNC            reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    atribuicao                     shift and go to state 15
    codigo                         shift and go to state 45
    expressao_matematica_reduzida  shift and go to state 14
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 16

    (14) codigo -> declaracao . codigo
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    IF              shift and go to state 28
    FUNC            reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    declaracao                     shift and go to state 16
    codigo                         shift and go to state 46
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 17

    (15) codigo -> estrutura_if . codigo
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    IF              shift and go to state 28
    FUNC            reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    estrutura_if                   shift and go to state 17
    codigo                         shift and go to state 47
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 18

    (16) codigo -> estrutura_for . codigo
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    IF              shift and go to state 28
    FUNC            reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

  ! IF              [ reduce using rule 5 (empty -> .) ]
  ! ID              [ reduce using rule 5 (empty -> .) ]
  ! PLUS            [ reduce using rule 5 (empty -> .) ]
  ! MINUS           [ reduce using rule 5 (empty -> .) ]
  ! FOR             [ reduce using rule 5 (empty -> .) ]

    estrutura_for                  shift and go to state 18
    codigo                         shift and go to state 48
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 19

    (49) expressao_matematica_reduzida -> assign_plus .

    IF              reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    ID              reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    PLUS            reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    MINUS           reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    FOR             reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    FUNC            reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    $end            reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)
    END_BRACE       reduce using rule 49 (expressao_matematica_reduzida -> assign_plus .)


state 20

    (50) expressao_matematica_reduzida -> assign_minus .

    IF              reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    ID              reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    PLUS            reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    MINUS           reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    FOR             reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    FUNC            reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    $end            reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)
    END_BRACE       reduce using rule 50 (expressao_matematica_reduzida -> assign_minus .)


state 21

    (51) expressao_matematica_reduzida -> assign_mult .

    IF              reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    ID              reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    PLUS            reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    MINUS           reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    FOR             reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    FUNC            reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    $end            reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)
    END_BRACE       reduce using rule 51 (expressao_matematica_reduzida -> assign_mult .)


state 22

    (52) expressao_matematica_reduzida -> assign_div .

    IF              reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    ID              reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    PLUS            reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    MINUS           reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    FOR             reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    FUNC            reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    $end            reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)
    END_BRACE       reduce using rule 52 (expressao_matematica_reduzida -> assign_div .)


state 23

    (53) expressao_matematica_reduzida -> incremento .

    IF              reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    ID              reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    PLUS            reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    MINUS           reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    FOR             reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    FUNC            reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    $end            reduce using rule 53 (expressao_matematica_reduzida -> incremento .)
    END_BRACE       reduce using rule 53 (expressao_matematica_reduzida -> incremento .)


state 24

    (54) expressao_matematica_reduzida -> pre_incremento .

    IF              reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    ID              reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    PLUS            reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    MINUS           reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    FOR             reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    FUNC            reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    $end            reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)
    END_BRACE       reduce using rule 54 (expressao_matematica_reduzida -> pre_incremento .)


state 25

    (55) expressao_matematica_reduzida -> decremento .

    IF              reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    ID              reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    PLUS            reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    MINUS           reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    FOR             reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    FUNC            reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    $end            reduce using rule 55 (expressao_matematica_reduzida -> decremento .)
    END_BRACE       reduce using rule 55 (expressao_matematica_reduzida -> decremento .)


state 26

    (56) expressao_matematica_reduzida -> pre_decremento .

    IF              reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    ID              reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    PLUS            reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    MINUS           reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    FOR             reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    FUNC            reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    $end            reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)
    END_BRACE       reduce using rule 56 (expressao_matematica_reduzida -> pre_decremento .)


state 27

    (93) atribuicao -> lista_identificadores . EQUALS lista_valores
    (94) atribuicao -> lista_identificadores . EQUALS lista_valores SEMICOLON
    (95) declaracao -> lista_identificadores . COLON EQUALS lista_valores
    (96) declaracao -> lista_identificadores . COLON EQUALS lista_valores SEMICOLON
    (99) lista_identificadores -> lista_identificadores . COMMA ID

    EQUALS          shift and go to state 49
    COLON           shift and go to state 50
    COMMA           shift and go to state 51


state 28

    (89) estrutura_if -> IF . expressao BEG_BRACE codigo END_BRACE estrutura_else
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 52
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 29

    (83) estrutura_for -> for_CLIKE .

    IF              reduce using rule 83 (estrutura_for -> for_CLIKE .)
    ID              reduce using rule 83 (estrutura_for -> for_CLIKE .)
    PLUS            reduce using rule 83 (estrutura_for -> for_CLIKE .)
    MINUS           reduce using rule 83 (estrutura_for -> for_CLIKE .)
    FOR             reduce using rule 83 (estrutura_for -> for_CLIKE .)
    FUNC            reduce using rule 83 (estrutura_for -> for_CLIKE .)
    $end            reduce using rule 83 (estrutura_for -> for_CLIKE .)
    END_BRACE       reduce using rule 83 (estrutura_for -> for_CLIKE .)


state 30

    (84) estrutura_for -> for_infinito .

    IF              reduce using rule 84 (estrutura_for -> for_infinito .)
    ID              reduce using rule 84 (estrutura_for -> for_infinito .)
    PLUS            reduce using rule 84 (estrutura_for -> for_infinito .)
    MINUS           reduce using rule 84 (estrutura_for -> for_infinito .)
    FOR             reduce using rule 84 (estrutura_for -> for_infinito .)
    FUNC            reduce using rule 84 (estrutura_for -> for_infinito .)
    $end            reduce using rule 84 (estrutura_for -> for_infinito .)
    END_BRACE       reduce using rule 84 (estrutura_for -> for_infinito .)


state 31

    (85) estrutura_for -> for_while .

    IF              reduce using rule 85 (estrutura_for -> for_while .)
    ID              reduce using rule 85 (estrutura_for -> for_while .)
    PLUS            reduce using rule 85 (estrutura_for -> for_while .)
    MINUS           reduce using rule 85 (estrutura_for -> for_while .)
    FOR             reduce using rule 85 (estrutura_for -> for_while .)
    FUNC            reduce using rule 85 (estrutura_for -> for_while .)
    $end            reduce using rule 85 (estrutura_for -> for_while .)
    END_BRACE       reduce using rule 85 (estrutura_for -> for_while .)


state 32

    (39) pre_incremento -> PLUS . PLUS ID
    (40) pre_incremento -> PLUS . PLUS ID SEMICOLON

    PLUS            shift and go to state 80


state 33

    (43) pre_decremento -> MINUS . MINUS ID
    (44) pre_decremento -> MINUS . MINUS ID SEMICOLON

    MINUS           shift and go to state 81


state 34

    (86) for_CLIKE -> FOR . declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> FOR . BEG_BRACE codigo END_BRACE
    (88) for_while -> FOR . expressao BEG_BRACE codigo END_BRACE
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    BEG_BRACE       shift and go to state 84
    ID              shift and go to state 86
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    BEG_PAREN       shift and go to state 79

    declaracao                     shift and go to state 82
    expressao                      shift and go to state 83
    expressao_matematica           shift and go to state 53
    lista_identificadores          shift and go to state 85
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 35

    (7) importacao -> IMPORT ID . importacao
    (7) importacao -> . IMPORT ID importacao
    (8) importacao -> . empty
    (5) empty -> .

    IMPORT          shift and go to state 5
    FUNC            reduce using rule 5 (empty -> .)
    IF              reduce using rule 5 (empty -> .)
    ID              reduce using rule 5 (empty -> .)
    PLUS            reduce using rule 5 (empty -> .)
    MINUS           reduce using rule 5 (empty -> .)
    FOR             reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)

    importacao                     shift and go to state 87
    empty                          shift and go to state 6

state 36

    (2) funcoes_codigo -> funcao funcoes_codigo .

    $end            reduce using rule 2 (funcoes_codigo -> funcao funcoes_codigo .)


state 37

    (3) funcoes_codigo -> codigo funcoes_codigo .

    $end            reduce using rule 3 (funcoes_codigo -> codigo funcoes_codigo .)


state 38

    (9) funcao -> FUNC ID . BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE

    BEG_PAREN       shift and go to state 88


state 39

    (45) assign_plus -> ID PLUS . EQUALS NUMBER
    (37) incremento -> ID PLUS . PLUS
    (38) incremento -> ID PLUS . PLUS SEMICOLON

    EQUALS          shift and go to state 90
    PLUS            shift and go to state 89


state 40

    (46) assign_minus -> ID MINUS . EQUALS NUMBER
    (41) decremento -> ID MINUS . MINUS
    (42) decremento -> ID MINUS . MINUS SEMICOLON

    EQUALS          shift and go to state 92
    MINUS           shift and go to state 91


state 41

    (47) assign_mult -> ID TIMES . EQUALS NUMBER

    EQUALS          shift and go to state 93


state 42

    (48) assign_div -> ID DIVISION . EQUALS NUMBER

    EQUALS          shift and go to state 94


state 43

    (12) codigo -> expressao_matematica_reduzida codigo .

    FUNC            reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    IF              reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    ID              reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    PLUS            reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    MINUS           reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    FOR             reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    $end            reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)
    END_BRACE       reduce using rule 12 (codigo -> expressao_matematica_reduzida codigo .)


state 44

    (17) codigo -> empty .

    FUNC            reduce using rule 17 (codigo -> empty .)
    IF              reduce using rule 17 (codigo -> empty .)
    ID              reduce using rule 17 (codigo -> empty .)
    PLUS            reduce using rule 17 (codigo -> empty .)
    MINUS           reduce using rule 17 (codigo -> empty .)
    FOR             reduce using rule 17 (codigo -> empty .)
    $end            reduce using rule 17 (codigo -> empty .)
    END_BRACE       reduce using rule 17 (codigo -> empty .)


state 45

    (13) codigo -> atribuicao codigo .

    FUNC            reduce using rule 13 (codigo -> atribuicao codigo .)
    IF              reduce using rule 13 (codigo -> atribuicao codigo .)
    ID              reduce using rule 13 (codigo -> atribuicao codigo .)
    PLUS            reduce using rule 13 (codigo -> atribuicao codigo .)
    MINUS           reduce using rule 13 (codigo -> atribuicao codigo .)
    FOR             reduce using rule 13 (codigo -> atribuicao codigo .)
    $end            reduce using rule 13 (codigo -> atribuicao codigo .)
    END_BRACE       reduce using rule 13 (codigo -> atribuicao codigo .)


state 46

    (14) codigo -> declaracao codigo .

    FUNC            reduce using rule 14 (codigo -> declaracao codigo .)
    IF              reduce using rule 14 (codigo -> declaracao codigo .)
    ID              reduce using rule 14 (codigo -> declaracao codigo .)
    PLUS            reduce using rule 14 (codigo -> declaracao codigo .)
    MINUS           reduce using rule 14 (codigo -> declaracao codigo .)
    FOR             reduce using rule 14 (codigo -> declaracao codigo .)
    $end            reduce using rule 14 (codigo -> declaracao codigo .)
    END_BRACE       reduce using rule 14 (codigo -> declaracao codigo .)


state 47

    (15) codigo -> estrutura_if codigo .

    FUNC            reduce using rule 15 (codigo -> estrutura_if codigo .)
    IF              reduce using rule 15 (codigo -> estrutura_if codigo .)
    ID              reduce using rule 15 (codigo -> estrutura_if codigo .)
    PLUS            reduce using rule 15 (codigo -> estrutura_if codigo .)
    MINUS           reduce using rule 15 (codigo -> estrutura_if codigo .)
    FOR             reduce using rule 15 (codigo -> estrutura_if codigo .)
    $end            reduce using rule 15 (codigo -> estrutura_if codigo .)
    END_BRACE       reduce using rule 15 (codigo -> estrutura_if codigo .)


state 48

    (16) codigo -> estrutura_for codigo .

    FUNC            reduce using rule 16 (codigo -> estrutura_for codigo .)
    IF              reduce using rule 16 (codigo -> estrutura_for codigo .)
    ID              reduce using rule 16 (codigo -> estrutura_for codigo .)
    PLUS            reduce using rule 16 (codigo -> estrutura_for codigo .)
    MINUS           reduce using rule 16 (codigo -> estrutura_for codigo .)
    FOR             reduce using rule 16 (codigo -> estrutura_for codigo .)
    $end            reduce using rule 16 (codigo -> estrutura_for codigo .)
    END_BRACE       reduce using rule 16 (codigo -> estrutura_for codigo .)


state 49

    (93) atribuicao -> lista_identificadores EQUALS . lista_valores
    (94) atribuicao -> lista_identificadores EQUALS . lista_valores SEMICOLON
    (101) lista_valores -> . lista_valores COMMA expressao
    (102) lista_valores -> . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    lista_valores                  shift and go to state 95
    expressao                      shift and go to state 96
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 50

    (95) declaracao -> lista_identificadores COLON . EQUALS lista_valores
    (96) declaracao -> lista_identificadores COLON . EQUALS lista_valores SEMICOLON

    EQUALS          shift and go to state 97


state 51

    (99) lista_identificadores -> lista_identificadores COMMA . ID

    ID              shift and go to state 98


state 52

    (89) estrutura_if -> IF expressao . BEG_BRACE codigo END_BRACE estrutura_else
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

    BEG_BRACE       shift and go to state 99
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105


state 53

    (23) expressao -> expressao_matematica .
    (28) soma -> expressao_matematica . PLUS p_expMatMaiorPresc
    (29) sub -> expressao_matematica . MINUS p_expMatMaiorPresc

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    BEG_BRACE       reduce using rule 23 (expressao -> expressao_matematica .)
    AMPERSAND       reduce using rule 23 (expressao -> expressao_matematica .)
    PIPE            reduce using rule 23 (expressao -> expressao_matematica .)
    EQUALS          reduce using rule 23 (expressao -> expressao_matematica .)
    EXCLAMATION     reduce using rule 23 (expressao -> expressao_matematica .)
    GREATER         reduce using rule 23 (expressao -> expressao_matematica .)
    LESS            reduce using rule 23 (expressao -> expressao_matematica .)
    SEMICOLON       reduce using rule 23 (expressao -> expressao_matematica .)
    COMMA           reduce using rule 23 (expressao -> expressao_matematica .)
    IF              reduce using rule 23 (expressao -> expressao_matematica .)
    ID              reduce using rule 23 (expressao -> expressao_matematica .)
    FOR             reduce using rule 23 (expressao -> expressao_matematica .)
    FUNC            reduce using rule 23 (expressao -> expressao_matematica .)
    $end            reduce using rule 23 (expressao -> expressao_matematica .)
    END_BRACE       reduce using rule 23 (expressao -> expressao_matematica .)
    END_PAREN       reduce using rule 23 (expressao -> expressao_matematica .)
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107

  ! PLUS            [ reduce using rule 23 (expressao -> expressao_matematica .) ]
  ! MINUS           [ reduce using rule 23 (expressao -> expressao_matematica .) ]


state 54

    (24) expressao -> expressao_logica .

    BEG_BRACE       reduce using rule 24 (expressao -> expressao_logica .)
    AMPERSAND       reduce using rule 24 (expressao -> expressao_logica .)
    PIPE            reduce using rule 24 (expressao -> expressao_logica .)
    EQUALS          reduce using rule 24 (expressao -> expressao_logica .)
    EXCLAMATION     reduce using rule 24 (expressao -> expressao_logica .)
    GREATER         reduce using rule 24 (expressao -> expressao_logica .)
    LESS            reduce using rule 24 (expressao -> expressao_logica .)
    SEMICOLON       reduce using rule 24 (expressao -> expressao_logica .)
    COMMA           reduce using rule 24 (expressao -> expressao_logica .)
    IF              reduce using rule 24 (expressao -> expressao_logica .)
    ID              reduce using rule 24 (expressao -> expressao_logica .)
    PLUS            reduce using rule 24 (expressao -> expressao_logica .)
    MINUS           reduce using rule 24 (expressao -> expressao_logica .)
    FOR             reduce using rule 24 (expressao -> expressao_logica .)
    FUNC            reduce using rule 24 (expressao -> expressao_logica .)
    $end            reduce using rule 24 (expressao -> expressao_logica .)
    END_BRACE       reduce using rule 24 (expressao -> expressao_logica .)
    END_PAREN       reduce using rule 24 (expressao -> expressao_logica .)


state 55

    (25) expressao_matematica -> soma .

    PLUS            reduce using rule 25 (expressao_matematica -> soma .)
    MINUS           reduce using rule 25 (expressao_matematica -> soma .)
    BEG_BRACE       reduce using rule 25 (expressao_matematica -> soma .)
    AMPERSAND       reduce using rule 25 (expressao_matematica -> soma .)
    PIPE            reduce using rule 25 (expressao_matematica -> soma .)
    EQUALS          reduce using rule 25 (expressao_matematica -> soma .)
    EXCLAMATION     reduce using rule 25 (expressao_matematica -> soma .)
    GREATER         reduce using rule 25 (expressao_matematica -> soma .)
    LESS            reduce using rule 25 (expressao_matematica -> soma .)
    SEMICOLON       reduce using rule 25 (expressao_matematica -> soma .)
    COMMA           reduce using rule 25 (expressao_matematica -> soma .)
    IF              reduce using rule 25 (expressao_matematica -> soma .)
    ID              reduce using rule 25 (expressao_matematica -> soma .)
    FOR             reduce using rule 25 (expressao_matematica -> soma .)
    FUNC            reduce using rule 25 (expressao_matematica -> soma .)
    $end            reduce using rule 25 (expressao_matematica -> soma .)
    END_BRACE       reduce using rule 25 (expressao_matematica -> soma .)
    END_PAREN       reduce using rule 25 (expressao_matematica -> soma .)


state 56

    (26) expressao_matematica -> sub .

    PLUS            reduce using rule 26 (expressao_matematica -> sub .)
    MINUS           reduce using rule 26 (expressao_matematica -> sub .)
    BEG_BRACE       reduce using rule 26 (expressao_matematica -> sub .)
    AMPERSAND       reduce using rule 26 (expressao_matematica -> sub .)
    PIPE            reduce using rule 26 (expressao_matematica -> sub .)
    EQUALS          reduce using rule 26 (expressao_matematica -> sub .)
    EXCLAMATION     reduce using rule 26 (expressao_matematica -> sub .)
    GREATER         reduce using rule 26 (expressao_matematica -> sub .)
    LESS            reduce using rule 26 (expressao_matematica -> sub .)
    SEMICOLON       reduce using rule 26 (expressao_matematica -> sub .)
    COMMA           reduce using rule 26 (expressao_matematica -> sub .)
    IF              reduce using rule 26 (expressao_matematica -> sub .)
    ID              reduce using rule 26 (expressao_matematica -> sub .)
    FOR             reduce using rule 26 (expressao_matematica -> sub .)
    FUNC            reduce using rule 26 (expressao_matematica -> sub .)
    $end            reduce using rule 26 (expressao_matematica -> sub .)
    END_BRACE       reduce using rule 26 (expressao_matematica -> sub .)
    END_PAREN       reduce using rule 26 (expressao_matematica -> sub .)


state 57

    (27) expressao_matematica -> p_expMatMaiorPresc .
    (34) mult -> p_expMatMaiorPresc . TIMES operando
    (36) div -> p_expMatMaiorPresc . DIVISION operando
    (35) mod -> p_expMatMaiorPresc . MOD operando

    PLUS            reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    MINUS           reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    BEG_BRACE       reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    AMPERSAND       reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    PIPE            reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    EQUALS          reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    EXCLAMATION     reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    GREATER         reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    LESS            reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    SEMICOLON       reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    COMMA           reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    IF              reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    ID              reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    FOR             reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    FUNC            reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    $end            reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    END_BRACE       reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    END_PAREN       reduce using rule 27 (expressao_matematica -> p_expMatMaiorPresc .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 109
    MOD             shift and go to state 110


state 58

    (63) expressao_logica -> and .

    BEG_BRACE       reduce using rule 63 (expressao_logica -> and .)
    AMPERSAND       reduce using rule 63 (expressao_logica -> and .)
    PIPE            reduce using rule 63 (expressao_logica -> and .)
    EQUALS          reduce using rule 63 (expressao_logica -> and .)
    EXCLAMATION     reduce using rule 63 (expressao_logica -> and .)
    GREATER         reduce using rule 63 (expressao_logica -> and .)
    LESS            reduce using rule 63 (expressao_logica -> and .)
    SEMICOLON       reduce using rule 63 (expressao_logica -> and .)
    COMMA           reduce using rule 63 (expressao_logica -> and .)
    IF              reduce using rule 63 (expressao_logica -> and .)
    ID              reduce using rule 63 (expressao_logica -> and .)
    PLUS            reduce using rule 63 (expressao_logica -> and .)
    MINUS           reduce using rule 63 (expressao_logica -> and .)
    FOR             reduce using rule 63 (expressao_logica -> and .)
    FUNC            reduce using rule 63 (expressao_logica -> and .)
    $end            reduce using rule 63 (expressao_logica -> and .)
    END_BRACE       reduce using rule 63 (expressao_logica -> and .)
    END_PAREN       reduce using rule 63 (expressao_logica -> and .)


state 59

    (64) expressao_logica -> or .

    BEG_BRACE       reduce using rule 64 (expressao_logica -> or .)
    AMPERSAND       reduce using rule 64 (expressao_logica -> or .)
    PIPE            reduce using rule 64 (expressao_logica -> or .)
    EQUALS          reduce using rule 64 (expressao_logica -> or .)
    EXCLAMATION     reduce using rule 64 (expressao_logica -> or .)
    GREATER         reduce using rule 64 (expressao_logica -> or .)
    LESS            reduce using rule 64 (expressao_logica -> or .)
    SEMICOLON       reduce using rule 64 (expressao_logica -> or .)
    COMMA           reduce using rule 64 (expressao_logica -> or .)
    IF              reduce using rule 64 (expressao_logica -> or .)
    ID              reduce using rule 64 (expressao_logica -> or .)
    PLUS            reduce using rule 64 (expressao_logica -> or .)
    MINUS           reduce using rule 64 (expressao_logica -> or .)
    FOR             reduce using rule 64 (expressao_logica -> or .)
    FUNC            reduce using rule 64 (expressao_logica -> or .)
    $end            reduce using rule 64 (expressao_logica -> or .)
    END_BRACE       reduce using rule 64 (expressao_logica -> or .)
    END_PAREN       reduce using rule 64 (expressao_logica -> or .)


state 60

    (65) expressao_logica -> equals .

    BEG_BRACE       reduce using rule 65 (expressao_logica -> equals .)
    AMPERSAND       reduce using rule 65 (expressao_logica -> equals .)
    PIPE            reduce using rule 65 (expressao_logica -> equals .)
    EQUALS          reduce using rule 65 (expressao_logica -> equals .)
    EXCLAMATION     reduce using rule 65 (expressao_logica -> equals .)
    GREATER         reduce using rule 65 (expressao_logica -> equals .)
    LESS            reduce using rule 65 (expressao_logica -> equals .)
    SEMICOLON       reduce using rule 65 (expressao_logica -> equals .)
    COMMA           reduce using rule 65 (expressao_logica -> equals .)
    IF              reduce using rule 65 (expressao_logica -> equals .)
    ID              reduce using rule 65 (expressao_logica -> equals .)
    PLUS            reduce using rule 65 (expressao_logica -> equals .)
    MINUS           reduce using rule 65 (expressao_logica -> equals .)
    FOR             reduce using rule 65 (expressao_logica -> equals .)
    FUNC            reduce using rule 65 (expressao_logica -> equals .)
    $end            reduce using rule 65 (expressao_logica -> equals .)
    END_BRACE       reduce using rule 65 (expressao_logica -> equals .)
    END_PAREN       reduce using rule 65 (expressao_logica -> equals .)


state 61

    (66) expressao_logica -> different .

    BEG_BRACE       reduce using rule 66 (expressao_logica -> different .)
    AMPERSAND       reduce using rule 66 (expressao_logica -> different .)
    PIPE            reduce using rule 66 (expressao_logica -> different .)
    EQUALS          reduce using rule 66 (expressao_logica -> different .)
    EXCLAMATION     reduce using rule 66 (expressao_logica -> different .)
    GREATER         reduce using rule 66 (expressao_logica -> different .)
    LESS            reduce using rule 66 (expressao_logica -> different .)
    SEMICOLON       reduce using rule 66 (expressao_logica -> different .)
    COMMA           reduce using rule 66 (expressao_logica -> different .)
    IF              reduce using rule 66 (expressao_logica -> different .)
    ID              reduce using rule 66 (expressao_logica -> different .)
    PLUS            reduce using rule 66 (expressao_logica -> different .)
    MINUS           reduce using rule 66 (expressao_logica -> different .)
    FOR             reduce using rule 66 (expressao_logica -> different .)
    FUNC            reduce using rule 66 (expressao_logica -> different .)
    $end            reduce using rule 66 (expressao_logica -> different .)
    END_BRACE       reduce using rule 66 (expressao_logica -> different .)
    END_PAREN       reduce using rule 66 (expressao_logica -> different .)


state 62

    (67) expressao_logica -> greater .

    BEG_BRACE       reduce using rule 67 (expressao_logica -> greater .)
    AMPERSAND       reduce using rule 67 (expressao_logica -> greater .)
    PIPE            reduce using rule 67 (expressao_logica -> greater .)
    EQUALS          reduce using rule 67 (expressao_logica -> greater .)
    EXCLAMATION     reduce using rule 67 (expressao_logica -> greater .)
    GREATER         reduce using rule 67 (expressao_logica -> greater .)
    LESS            reduce using rule 67 (expressao_logica -> greater .)
    SEMICOLON       reduce using rule 67 (expressao_logica -> greater .)
    COMMA           reduce using rule 67 (expressao_logica -> greater .)
    IF              reduce using rule 67 (expressao_logica -> greater .)
    ID              reduce using rule 67 (expressao_logica -> greater .)
    PLUS            reduce using rule 67 (expressao_logica -> greater .)
    MINUS           reduce using rule 67 (expressao_logica -> greater .)
    FOR             reduce using rule 67 (expressao_logica -> greater .)
    FUNC            reduce using rule 67 (expressao_logica -> greater .)
    $end            reduce using rule 67 (expressao_logica -> greater .)
    END_BRACE       reduce using rule 67 (expressao_logica -> greater .)
    END_PAREN       reduce using rule 67 (expressao_logica -> greater .)


state 63

    (68) expressao_logica -> less .

    BEG_BRACE       reduce using rule 68 (expressao_logica -> less .)
    AMPERSAND       reduce using rule 68 (expressao_logica -> less .)
    PIPE            reduce using rule 68 (expressao_logica -> less .)
    EQUALS          reduce using rule 68 (expressao_logica -> less .)
    EXCLAMATION     reduce using rule 68 (expressao_logica -> less .)
    GREATER         reduce using rule 68 (expressao_logica -> less .)
    LESS            reduce using rule 68 (expressao_logica -> less .)
    SEMICOLON       reduce using rule 68 (expressao_logica -> less .)
    COMMA           reduce using rule 68 (expressao_logica -> less .)
    IF              reduce using rule 68 (expressao_logica -> less .)
    ID              reduce using rule 68 (expressao_logica -> less .)
    PLUS            reduce using rule 68 (expressao_logica -> less .)
    MINUS           reduce using rule 68 (expressao_logica -> less .)
    FOR             reduce using rule 68 (expressao_logica -> less .)
    FUNC            reduce using rule 68 (expressao_logica -> less .)
    $end            reduce using rule 68 (expressao_logica -> less .)
    END_BRACE       reduce using rule 68 (expressao_logica -> less .)
    END_PAREN       reduce using rule 68 (expressao_logica -> less .)


state 64

    (69) expressao_logica -> greater_or_equal .

    BEG_BRACE       reduce using rule 69 (expressao_logica -> greater_or_equal .)
    AMPERSAND       reduce using rule 69 (expressao_logica -> greater_or_equal .)
    PIPE            reduce using rule 69 (expressao_logica -> greater_or_equal .)
    EQUALS          reduce using rule 69 (expressao_logica -> greater_or_equal .)
    EXCLAMATION     reduce using rule 69 (expressao_logica -> greater_or_equal .)
    GREATER         reduce using rule 69 (expressao_logica -> greater_or_equal .)
    LESS            reduce using rule 69 (expressao_logica -> greater_or_equal .)
    SEMICOLON       reduce using rule 69 (expressao_logica -> greater_or_equal .)
    COMMA           reduce using rule 69 (expressao_logica -> greater_or_equal .)
    IF              reduce using rule 69 (expressao_logica -> greater_or_equal .)
    ID              reduce using rule 69 (expressao_logica -> greater_or_equal .)
    PLUS            reduce using rule 69 (expressao_logica -> greater_or_equal .)
    MINUS           reduce using rule 69 (expressao_logica -> greater_or_equal .)
    FOR             reduce using rule 69 (expressao_logica -> greater_or_equal .)
    FUNC            reduce using rule 69 (expressao_logica -> greater_or_equal .)
    $end            reduce using rule 69 (expressao_logica -> greater_or_equal .)
    END_BRACE       reduce using rule 69 (expressao_logica -> greater_or_equal .)
    END_PAREN       reduce using rule 69 (expressao_logica -> greater_or_equal .)


state 65

    (70) expressao_logica -> less_or_equal .

    BEG_BRACE       reduce using rule 70 (expressao_logica -> less_or_equal .)
    AMPERSAND       reduce using rule 70 (expressao_logica -> less_or_equal .)
    PIPE            reduce using rule 70 (expressao_logica -> less_or_equal .)
    EQUALS          reduce using rule 70 (expressao_logica -> less_or_equal .)
    EXCLAMATION     reduce using rule 70 (expressao_logica -> less_or_equal .)
    GREATER         reduce using rule 70 (expressao_logica -> less_or_equal .)
    LESS            reduce using rule 70 (expressao_logica -> less_or_equal .)
    SEMICOLON       reduce using rule 70 (expressao_logica -> less_or_equal .)
    COMMA           reduce using rule 70 (expressao_logica -> less_or_equal .)
    IF              reduce using rule 70 (expressao_logica -> less_or_equal .)
    ID              reduce using rule 70 (expressao_logica -> less_or_equal .)
    PLUS            reduce using rule 70 (expressao_logica -> less_or_equal .)
    MINUS           reduce using rule 70 (expressao_logica -> less_or_equal .)
    FOR             reduce using rule 70 (expressao_logica -> less_or_equal .)
    FUNC            reduce using rule 70 (expressao_logica -> less_or_equal .)
    $end            reduce using rule 70 (expressao_logica -> less_or_equal .)
    END_BRACE       reduce using rule 70 (expressao_logica -> less_or_equal .)
    END_PAREN       reduce using rule 70 (expressao_logica -> less_or_equal .)


state 66

    (71) expressao_logica -> negation .

    BEG_BRACE       reduce using rule 71 (expressao_logica -> negation .)
    AMPERSAND       reduce using rule 71 (expressao_logica -> negation .)
    PIPE            reduce using rule 71 (expressao_logica -> negation .)
    EQUALS          reduce using rule 71 (expressao_logica -> negation .)
    EXCLAMATION     reduce using rule 71 (expressao_logica -> negation .)
    GREATER         reduce using rule 71 (expressao_logica -> negation .)
    LESS            reduce using rule 71 (expressao_logica -> negation .)
    SEMICOLON       reduce using rule 71 (expressao_logica -> negation .)
    COMMA           reduce using rule 71 (expressao_logica -> negation .)
    IF              reduce using rule 71 (expressao_logica -> negation .)
    ID              reduce using rule 71 (expressao_logica -> negation .)
    PLUS            reduce using rule 71 (expressao_logica -> negation .)
    MINUS           reduce using rule 71 (expressao_logica -> negation .)
    FOR             reduce using rule 71 (expressao_logica -> negation .)
    FUNC            reduce using rule 71 (expressao_logica -> negation .)
    $end            reduce using rule 71 (expressao_logica -> negation .)
    END_BRACE       reduce using rule 71 (expressao_logica -> negation .)
    END_PAREN       reduce using rule 71 (expressao_logica -> negation .)


state 67

    (72) expressao_logica -> TRUE .

    BEG_BRACE       reduce using rule 72 (expressao_logica -> TRUE .)
    AMPERSAND       reduce using rule 72 (expressao_logica -> TRUE .)
    PIPE            reduce using rule 72 (expressao_logica -> TRUE .)
    EQUALS          reduce using rule 72 (expressao_logica -> TRUE .)
    EXCLAMATION     reduce using rule 72 (expressao_logica -> TRUE .)
    GREATER         reduce using rule 72 (expressao_logica -> TRUE .)
    LESS            reduce using rule 72 (expressao_logica -> TRUE .)
    SEMICOLON       reduce using rule 72 (expressao_logica -> TRUE .)
    COMMA           reduce using rule 72 (expressao_logica -> TRUE .)
    IF              reduce using rule 72 (expressao_logica -> TRUE .)
    ID              reduce using rule 72 (expressao_logica -> TRUE .)
    PLUS            reduce using rule 72 (expressao_logica -> TRUE .)
    MINUS           reduce using rule 72 (expressao_logica -> TRUE .)
    FOR             reduce using rule 72 (expressao_logica -> TRUE .)
    FUNC            reduce using rule 72 (expressao_logica -> TRUE .)
    $end            reduce using rule 72 (expressao_logica -> TRUE .)
    END_BRACE       reduce using rule 72 (expressao_logica -> TRUE .)
    END_PAREN       reduce using rule 72 (expressao_logica -> TRUE .)


state 68

    (73) expressao_logica -> FALSE .

    BEG_BRACE       reduce using rule 73 (expressao_logica -> FALSE .)
    AMPERSAND       reduce using rule 73 (expressao_logica -> FALSE .)
    PIPE            reduce using rule 73 (expressao_logica -> FALSE .)
    EQUALS          reduce using rule 73 (expressao_logica -> FALSE .)
    EXCLAMATION     reduce using rule 73 (expressao_logica -> FALSE .)
    GREATER         reduce using rule 73 (expressao_logica -> FALSE .)
    LESS            reduce using rule 73 (expressao_logica -> FALSE .)
    SEMICOLON       reduce using rule 73 (expressao_logica -> FALSE .)
    COMMA           reduce using rule 73 (expressao_logica -> FALSE .)
    IF              reduce using rule 73 (expressao_logica -> FALSE .)
    ID              reduce using rule 73 (expressao_logica -> FALSE .)
    PLUS            reduce using rule 73 (expressao_logica -> FALSE .)
    MINUS           reduce using rule 73 (expressao_logica -> FALSE .)
    FOR             reduce using rule 73 (expressao_logica -> FALSE .)
    FUNC            reduce using rule 73 (expressao_logica -> FALSE .)
    $end            reduce using rule 73 (expressao_logica -> FALSE .)
    END_BRACE       reduce using rule 73 (expressao_logica -> FALSE .)
    END_PAREN       reduce using rule 73 (expressao_logica -> FALSE .)


state 69

    (30) p_expMatMaiorPresc -> mult .

    TIMES           reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    DIVISION        reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    MOD             reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    PLUS            reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    MINUS           reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    BEG_BRACE       reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    AMPERSAND       reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    PIPE            reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    EQUALS          reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    EXCLAMATION     reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    GREATER         reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    LESS            reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    SEMICOLON       reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    COMMA           reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    IF              reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    ID              reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    FOR             reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    FUNC            reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    $end            reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    END_BRACE       reduce using rule 30 (p_expMatMaiorPresc -> mult .)
    END_PAREN       reduce using rule 30 (p_expMatMaiorPresc -> mult .)


state 70

    (31) p_expMatMaiorPresc -> div .

    TIMES           reduce using rule 31 (p_expMatMaiorPresc -> div .)
    DIVISION        reduce using rule 31 (p_expMatMaiorPresc -> div .)
    MOD             reduce using rule 31 (p_expMatMaiorPresc -> div .)
    PLUS            reduce using rule 31 (p_expMatMaiorPresc -> div .)
    MINUS           reduce using rule 31 (p_expMatMaiorPresc -> div .)
    BEG_BRACE       reduce using rule 31 (p_expMatMaiorPresc -> div .)
    AMPERSAND       reduce using rule 31 (p_expMatMaiorPresc -> div .)
    PIPE            reduce using rule 31 (p_expMatMaiorPresc -> div .)
    EQUALS          reduce using rule 31 (p_expMatMaiorPresc -> div .)
    EXCLAMATION     reduce using rule 31 (p_expMatMaiorPresc -> div .)
    GREATER         reduce using rule 31 (p_expMatMaiorPresc -> div .)
    LESS            reduce using rule 31 (p_expMatMaiorPresc -> div .)
    SEMICOLON       reduce using rule 31 (p_expMatMaiorPresc -> div .)
    COMMA           reduce using rule 31 (p_expMatMaiorPresc -> div .)
    IF              reduce using rule 31 (p_expMatMaiorPresc -> div .)
    ID              reduce using rule 31 (p_expMatMaiorPresc -> div .)
    FOR             reduce using rule 31 (p_expMatMaiorPresc -> div .)
    FUNC            reduce using rule 31 (p_expMatMaiorPresc -> div .)
    $end            reduce using rule 31 (p_expMatMaiorPresc -> div .)
    END_BRACE       reduce using rule 31 (p_expMatMaiorPresc -> div .)
    END_PAREN       reduce using rule 31 (p_expMatMaiorPresc -> div .)


state 71

    (32) p_expMatMaiorPresc -> mod .

    TIMES           reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    DIVISION        reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    MOD             reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    PLUS            reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    MINUS           reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    BEG_BRACE       reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    AMPERSAND       reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    PIPE            reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    EQUALS          reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    EXCLAMATION     reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    GREATER         reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    LESS            reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    SEMICOLON       reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    COMMA           reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    IF              reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    ID              reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    FOR             reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    FUNC            reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    $end            reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    END_BRACE       reduce using rule 32 (p_expMatMaiorPresc -> mod .)
    END_PAREN       reduce using rule 32 (p_expMatMaiorPresc -> mod .)


state 72

    (33) p_expMatMaiorPresc -> operando .

    TIMES           reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    DIVISION        reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    MOD             reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    PLUS            reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    MINUS           reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    BEG_BRACE       reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    AMPERSAND       reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    PIPE            reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    EQUALS          reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    EXCLAMATION     reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    GREATER         reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    LESS            reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    SEMICOLON       reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    COMMA           reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    IF              reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    ID              reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    FOR             reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    FUNC            reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    $end            reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    END_BRACE       reduce using rule 33 (p_expMatMaiorPresc -> operando .)
    END_PAREN       reduce using rule 33 (p_expMatMaiorPresc -> operando .)


state 73

    (82) negation -> EXCLAMATION . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 111
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 74

    (57) operando -> identificador .

    TIMES           reduce using rule 57 (operando -> identificador .)
    DIVISION        reduce using rule 57 (operando -> identificador .)
    MOD             reduce using rule 57 (operando -> identificador .)
    PLUS            reduce using rule 57 (operando -> identificador .)
    MINUS           reduce using rule 57 (operando -> identificador .)
    BEG_BRACE       reduce using rule 57 (operando -> identificador .)
    AMPERSAND       reduce using rule 57 (operando -> identificador .)
    PIPE            reduce using rule 57 (operando -> identificador .)
    EQUALS          reduce using rule 57 (operando -> identificador .)
    EXCLAMATION     reduce using rule 57 (operando -> identificador .)
    GREATER         reduce using rule 57 (operando -> identificador .)
    LESS            reduce using rule 57 (operando -> identificador .)
    SEMICOLON       reduce using rule 57 (operando -> identificador .)
    COMMA           reduce using rule 57 (operando -> identificador .)
    IF              reduce using rule 57 (operando -> identificador .)
    ID              reduce using rule 57 (operando -> identificador .)
    FOR             reduce using rule 57 (operando -> identificador .)
    FUNC            reduce using rule 57 (operando -> identificador .)
    $end            reduce using rule 57 (operando -> identificador .)
    END_BRACE       reduce using rule 57 (operando -> identificador .)
    END_PAREN       reduce using rule 57 (operando -> identificador .)


state 75

    (58) operando -> NUMBER .

    TIMES           reduce using rule 58 (operando -> NUMBER .)
    DIVISION        reduce using rule 58 (operando -> NUMBER .)
    MOD             reduce using rule 58 (operando -> NUMBER .)
    PLUS            reduce using rule 58 (operando -> NUMBER .)
    MINUS           reduce using rule 58 (operando -> NUMBER .)
    BEG_BRACE       reduce using rule 58 (operando -> NUMBER .)
    AMPERSAND       reduce using rule 58 (operando -> NUMBER .)
    PIPE            reduce using rule 58 (operando -> NUMBER .)
    EQUALS          reduce using rule 58 (operando -> NUMBER .)
    EXCLAMATION     reduce using rule 58 (operando -> NUMBER .)
    GREATER         reduce using rule 58 (operando -> NUMBER .)
    LESS            reduce using rule 58 (operando -> NUMBER .)
    SEMICOLON       reduce using rule 58 (operando -> NUMBER .)
    COMMA           reduce using rule 58 (operando -> NUMBER .)
    IF              reduce using rule 58 (operando -> NUMBER .)
    ID              reduce using rule 58 (operando -> NUMBER .)
    FOR             reduce using rule 58 (operando -> NUMBER .)
    FUNC            reduce using rule 58 (operando -> NUMBER .)
    $end            reduce using rule 58 (operando -> NUMBER .)
    END_BRACE       reduce using rule 58 (operando -> NUMBER .)
    END_PAREN       reduce using rule 58 (operando -> NUMBER .)


state 76

    (59) operando -> STRING .

    TIMES           reduce using rule 59 (operando -> STRING .)
    DIVISION        reduce using rule 59 (operando -> STRING .)
    MOD             reduce using rule 59 (operando -> STRING .)
    PLUS            reduce using rule 59 (operando -> STRING .)
    MINUS           reduce using rule 59 (operando -> STRING .)
    BEG_BRACE       reduce using rule 59 (operando -> STRING .)
    AMPERSAND       reduce using rule 59 (operando -> STRING .)
    PIPE            reduce using rule 59 (operando -> STRING .)
    EQUALS          reduce using rule 59 (operando -> STRING .)
    EXCLAMATION     reduce using rule 59 (operando -> STRING .)
    GREATER         reduce using rule 59 (operando -> STRING .)
    LESS            reduce using rule 59 (operando -> STRING .)
    SEMICOLON       reduce using rule 59 (operando -> STRING .)
    COMMA           reduce using rule 59 (operando -> STRING .)
    IF              reduce using rule 59 (operando -> STRING .)
    ID              reduce using rule 59 (operando -> STRING .)
    FOR             reduce using rule 59 (operando -> STRING .)
    FUNC            reduce using rule 59 (operando -> STRING .)
    $end            reduce using rule 59 (operando -> STRING .)
    END_BRACE       reduce using rule 59 (operando -> STRING .)
    END_PAREN       reduce using rule 59 (operando -> STRING .)


state 77

    (60) operando -> expParenteses .

    TIMES           reduce using rule 60 (operando -> expParenteses .)
    DIVISION        reduce using rule 60 (operando -> expParenteses .)
    MOD             reduce using rule 60 (operando -> expParenteses .)
    PLUS            reduce using rule 60 (operando -> expParenteses .)
    MINUS           reduce using rule 60 (operando -> expParenteses .)
    BEG_BRACE       reduce using rule 60 (operando -> expParenteses .)
    AMPERSAND       reduce using rule 60 (operando -> expParenteses .)
    PIPE            reduce using rule 60 (operando -> expParenteses .)
    EQUALS          reduce using rule 60 (operando -> expParenteses .)
    EXCLAMATION     reduce using rule 60 (operando -> expParenteses .)
    GREATER         reduce using rule 60 (operando -> expParenteses .)
    LESS            reduce using rule 60 (operando -> expParenteses .)
    SEMICOLON       reduce using rule 60 (operando -> expParenteses .)
    COMMA           reduce using rule 60 (operando -> expParenteses .)
    IF              reduce using rule 60 (operando -> expParenteses .)
    ID              reduce using rule 60 (operando -> expParenteses .)
    FOR             reduce using rule 60 (operando -> expParenteses .)
    FUNC            reduce using rule 60 (operando -> expParenteses .)
    $end            reduce using rule 60 (operando -> expParenteses .)
    END_BRACE       reduce using rule 60 (operando -> expParenteses .)
    END_PAREN       reduce using rule 60 (operando -> expParenteses .)


state 78

    (61) identificador -> ID .

    TIMES           reduce using rule 61 (identificador -> ID .)
    DIVISION        reduce using rule 61 (identificador -> ID .)
    MOD             reduce using rule 61 (identificador -> ID .)
    PLUS            reduce using rule 61 (identificador -> ID .)
    MINUS           reduce using rule 61 (identificador -> ID .)
    BEG_BRACE       reduce using rule 61 (identificador -> ID .)
    AMPERSAND       reduce using rule 61 (identificador -> ID .)
    PIPE            reduce using rule 61 (identificador -> ID .)
    EQUALS          reduce using rule 61 (identificador -> ID .)
    EXCLAMATION     reduce using rule 61 (identificador -> ID .)
    GREATER         reduce using rule 61 (identificador -> ID .)
    LESS            reduce using rule 61 (identificador -> ID .)
    SEMICOLON       reduce using rule 61 (identificador -> ID .)
    COMMA           reduce using rule 61 (identificador -> ID .)
    IF              reduce using rule 61 (identificador -> ID .)
    ID              reduce using rule 61 (identificador -> ID .)
    FOR             reduce using rule 61 (identificador -> ID .)
    FUNC            reduce using rule 61 (identificador -> ID .)
    $end            reduce using rule 61 (identificador -> ID .)
    END_BRACE       reduce using rule 61 (identificador -> ID .)
    END_PAREN       reduce using rule 61 (identificador -> ID .)


state 79

    (62) expParenteses -> BEG_PAREN . expressao END_PAREN
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 112
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 80

    (39) pre_incremento -> PLUS PLUS . ID
    (40) pre_incremento -> PLUS PLUS . ID SEMICOLON

    ID              shift and go to state 113


state 81

    (43) pre_decremento -> MINUS MINUS . ID
    (44) pre_decremento -> MINUS MINUS . ID SEMICOLON

    ID              shift and go to state 114


state 82

    (86) for_CLIKE -> FOR declaracao . SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE

    SEMICOLON       shift and go to state 115


state 83

    (88) for_while -> FOR expressao . BEG_BRACE codigo END_BRACE
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

    BEG_BRACE       shift and go to state 116
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105


state 84

    (87) for_infinito -> FOR BEG_BRACE . codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

    IF              shift and go to state 28
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

    codigo                         shift and go to state 117
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 85

    (95) declaracao -> lista_identificadores . COLON EQUALS lista_valores
    (96) declaracao -> lista_identificadores . COLON EQUALS lista_valores SEMICOLON
    (99) lista_identificadores -> lista_identificadores . COMMA ID

    COLON           shift and go to state 50
    COMMA           shift and go to state 51


state 86

    (100) lista_identificadores -> ID .
    (61) identificador -> ID .

    COLON           reduce using rule 100 (lista_identificadores -> ID .)
    COMMA           reduce using rule 100 (lista_identificadores -> ID .)
    TIMES           reduce using rule 61 (identificador -> ID .)
    DIVISION        reduce using rule 61 (identificador -> ID .)
    MOD             reduce using rule 61 (identificador -> ID .)
    PLUS            reduce using rule 61 (identificador -> ID .)
    MINUS           reduce using rule 61 (identificador -> ID .)
    BEG_BRACE       reduce using rule 61 (identificador -> ID .)
    AMPERSAND       reduce using rule 61 (identificador -> ID .)
    PIPE            reduce using rule 61 (identificador -> ID .)
    EQUALS          reduce using rule 61 (identificador -> ID .)
    EXCLAMATION     reduce using rule 61 (identificador -> ID .)
    GREATER         reduce using rule 61 (identificador -> ID .)
    LESS            reduce using rule 61 (identificador -> ID .)


state 87

    (7) importacao -> IMPORT ID importacao .

    FUNC            reduce using rule 7 (importacao -> IMPORT ID importacao .)
    IF              reduce using rule 7 (importacao -> IMPORT ID importacao .)
    ID              reduce using rule 7 (importacao -> IMPORT ID importacao .)
    PLUS            reduce using rule 7 (importacao -> IMPORT ID importacao .)
    MINUS           reduce using rule 7 (importacao -> IMPORT ID importacao .)
    FOR             reduce using rule 7 (importacao -> IMPORT ID importacao .)
    $end            reduce using rule 7 (importacao -> IMPORT ID importacao .)


state 88

    (9) funcao -> FUNC ID BEG_PAREN . lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE
    (97) lista_parametros -> . lista_identificadores
    (98) lista_parametros -> . empty
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (5) empty -> .

    ID              shift and go to state 118
    END_PAREN       reduce using rule 5 (empty -> .)

    lista_parametros               shift and go to state 119
    lista_identificadores          shift and go to state 120
    empty                          shift and go to state 121

state 89

    (37) incremento -> ID PLUS PLUS .
    (38) incremento -> ID PLUS PLUS . SEMICOLON

    IF              reduce using rule 37 (incremento -> ID PLUS PLUS .)
    ID              reduce using rule 37 (incremento -> ID PLUS PLUS .)
    PLUS            reduce using rule 37 (incremento -> ID PLUS PLUS .)
    MINUS           reduce using rule 37 (incremento -> ID PLUS PLUS .)
    FOR             reduce using rule 37 (incremento -> ID PLUS PLUS .)
    FUNC            reduce using rule 37 (incremento -> ID PLUS PLUS .)
    $end            reduce using rule 37 (incremento -> ID PLUS PLUS .)
    END_BRACE       reduce using rule 37 (incremento -> ID PLUS PLUS .)
    SEMICOLON       shift and go to state 122


state 90

    (45) assign_plus -> ID PLUS EQUALS . NUMBER

    NUMBER          shift and go to state 123


state 91

    (41) decremento -> ID MINUS MINUS .
    (42) decremento -> ID MINUS MINUS . SEMICOLON

    IF              reduce using rule 41 (decremento -> ID MINUS MINUS .)
    ID              reduce using rule 41 (decremento -> ID MINUS MINUS .)
    PLUS            reduce using rule 41 (decremento -> ID MINUS MINUS .)
    MINUS           reduce using rule 41 (decremento -> ID MINUS MINUS .)
    FOR             reduce using rule 41 (decremento -> ID MINUS MINUS .)
    FUNC            reduce using rule 41 (decremento -> ID MINUS MINUS .)
    $end            reduce using rule 41 (decremento -> ID MINUS MINUS .)
    END_BRACE       reduce using rule 41 (decremento -> ID MINUS MINUS .)
    SEMICOLON       shift and go to state 124


state 92

    (46) assign_minus -> ID MINUS EQUALS . NUMBER

    NUMBER          shift and go to state 125


state 93

    (47) assign_mult -> ID TIMES EQUALS . NUMBER

    NUMBER          shift and go to state 126


state 94

    (48) assign_div -> ID DIVISION EQUALS . NUMBER

    NUMBER          shift and go to state 127


state 95

    (93) atribuicao -> lista_identificadores EQUALS lista_valores .
    (94) atribuicao -> lista_identificadores EQUALS lista_valores . SEMICOLON
    (101) lista_valores -> lista_valores . COMMA expressao

    IF              reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    ID              reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    PLUS            reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    MINUS           reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    FOR             reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    FUNC            reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    $end            reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    END_BRACE       reduce using rule 93 (atribuicao -> lista_identificadores EQUALS lista_valores .)
    SEMICOLON       shift and go to state 128
    COMMA           shift and go to state 129


state 96

    (102) lista_valores -> expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

    SEMICOLON       reduce using rule 102 (lista_valores -> expressao .)
    COMMA           reduce using rule 102 (lista_valores -> expressao .)
    IF              reduce using rule 102 (lista_valores -> expressao .)
    ID              reduce using rule 102 (lista_valores -> expressao .)
    PLUS            reduce using rule 102 (lista_valores -> expressao .)
    MINUS           reduce using rule 102 (lista_valores -> expressao .)
    FOR             reduce using rule 102 (lista_valores -> expressao .)
    FUNC            reduce using rule 102 (lista_valores -> expressao .)
    $end            reduce using rule 102 (lista_valores -> expressao .)
    END_BRACE       reduce using rule 102 (lista_valores -> expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105


state 97

    (95) declaracao -> lista_identificadores COLON EQUALS . lista_valores
    (96) declaracao -> lista_identificadores COLON EQUALS . lista_valores SEMICOLON
    (101) lista_valores -> . lista_valores COMMA expressao
    (102) lista_valores -> . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    lista_valores                  shift and go to state 130
    expressao                      shift and go to state 96
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 98

    (99) lista_identificadores -> lista_identificadores COMMA ID .

    EQUALS          reduce using rule 99 (lista_identificadores -> lista_identificadores COMMA ID .)
    COLON           reduce using rule 99 (lista_identificadores -> lista_identificadores COMMA ID .)
    COMMA           reduce using rule 99 (lista_identificadores -> lista_identificadores COMMA ID .)
    END_PAREN       reduce using rule 99 (lista_identificadores -> lista_identificadores COMMA ID .)


state 99

    (89) estrutura_if -> IF expressao BEG_BRACE . codigo END_BRACE estrutura_else
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

    IF              shift and go to state 28
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

    codigo                         shift and go to state 131
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 100

    (74) and -> expressao AMPERSAND . AMPERSAND expressao

    AMPERSAND       shift and go to state 132


state 101

    (75) or -> expressao PIPE . PIPE expressao

    PIPE            shift and go to state 133


state 102

    (76) equals -> expressao EQUALS . EQUALS expressao

    EQUALS          shift and go to state 134


state 103

    (77) different -> expressao EXCLAMATION . EQUALS expressao

    EQUALS          shift and go to state 135


state 104

    (78) greater -> expressao GREATER . expressao
    (80) greater_or_equal -> expressao GREATER . EQUALS expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    EQUALS          shift and go to state 137
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 136
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 105

    (79) less -> expressao LESS . expressao
    (81) less_or_equal -> expressao LESS . EQUALS expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    EQUALS          shift and go to state 139
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 138
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 106

    (28) soma -> expressao_matematica PLUS . p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    p_expMatMaiorPresc             shift and go to state 140
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 107

    (29) sub -> expressao_matematica MINUS . p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    p_expMatMaiorPresc             shift and go to state 141
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 108

    (34) mult -> p_expMatMaiorPresc TIMES . operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    operando                       shift and go to state 142
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 109

    (36) div -> p_expMatMaiorPresc DIVISION . operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    operando                       shift and go to state 143
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 110

    (35) mod -> p_expMatMaiorPresc MOD . operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    operando                       shift and go to state 144
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 111

    (82) negation -> EXCLAMATION expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 82 (negation -> EXCLAMATION expressao .)
    SEMICOLON       reduce using rule 82 (negation -> EXCLAMATION expressao .)
    COMMA           reduce using rule 82 (negation -> EXCLAMATION expressao .)
    IF              reduce using rule 82 (negation -> EXCLAMATION expressao .)
    ID              reduce using rule 82 (negation -> EXCLAMATION expressao .)
    PLUS            reduce using rule 82 (negation -> EXCLAMATION expressao .)
    MINUS           reduce using rule 82 (negation -> EXCLAMATION expressao .)
    FOR             reduce using rule 82 (negation -> EXCLAMATION expressao .)
    FUNC            reduce using rule 82 (negation -> EXCLAMATION expressao .)
    $end            reduce using rule 82 (negation -> EXCLAMATION expressao .)
    END_BRACE       reduce using rule 82 (negation -> EXCLAMATION expressao .)
    END_PAREN       reduce using rule 82 (negation -> EXCLAMATION expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 82 (negation -> EXCLAMATION expressao .) ]
  ! PIPE            [ reduce using rule 82 (negation -> EXCLAMATION expressao .) ]
  ! EQUALS          [ reduce using rule 82 (negation -> EXCLAMATION expressao .) ]
  ! EXCLAMATION     [ reduce using rule 82 (negation -> EXCLAMATION expressao .) ]
  ! GREATER         [ reduce using rule 82 (negation -> EXCLAMATION expressao .) ]
  ! LESS            [ reduce using rule 82 (negation -> EXCLAMATION expressao .) ]


state 112

    (62) expParenteses -> BEG_PAREN expressao . END_PAREN
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

    END_PAREN       shift and go to state 145
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105


state 113

    (39) pre_incremento -> PLUS PLUS ID .
    (40) pre_incremento -> PLUS PLUS ID . SEMICOLON

    IF              reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    ID              reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    PLUS            reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    MINUS           reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    FOR             reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    FUNC            reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    $end            reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    END_BRACE       reduce using rule 39 (pre_incremento -> PLUS PLUS ID .)
    SEMICOLON       shift and go to state 146


state 114

    (43) pre_decremento -> MINUS MINUS ID .
    (44) pre_decremento -> MINUS MINUS ID . SEMICOLON

    IF              reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    ID              reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    PLUS            reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    MINUS           reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    FOR             reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    FUNC            reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    $end            reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    END_BRACE       reduce using rule 43 (pre_decremento -> MINUS MINUS ID .)
    SEMICOLON       shift and go to state 147


state 115

    (86) for_CLIKE -> FOR declaracao SEMICOLON . expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 148
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 116

    (88) for_while -> FOR expressao BEG_BRACE . codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

    IF              shift and go to state 28
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

    codigo                         shift and go to state 149
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 117

    (87) for_infinito -> FOR BEG_BRACE codigo . END_BRACE

    END_BRACE       shift and go to state 150


state 118

    (100) lista_identificadores -> ID .

    COMMA           reduce using rule 100 (lista_identificadores -> ID .)
    END_PAREN       reduce using rule 100 (lista_identificadores -> ID .)


state 119

    (9) funcao -> FUNC ID BEG_PAREN lista_parametros . END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE

    END_PAREN       shift and go to state 151


state 120

    (97) lista_parametros -> lista_identificadores .
    (99) lista_identificadores -> lista_identificadores . COMMA ID

    END_PAREN       reduce using rule 97 (lista_parametros -> lista_identificadores .)
    COMMA           shift and go to state 51


state 121

    (98) lista_parametros -> empty .

    END_PAREN       reduce using rule 98 (lista_parametros -> empty .)


state 122

    (38) incremento -> ID PLUS PLUS SEMICOLON .

    IF              reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    ID              reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    PLUS            reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    MINUS           reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    FOR             reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    FUNC            reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    $end            reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)
    END_BRACE       reduce using rule 38 (incremento -> ID PLUS PLUS SEMICOLON .)


state 123

    (45) assign_plus -> ID PLUS EQUALS NUMBER .

    IF              reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    ID              reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    PLUS            reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    MINUS           reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    FOR             reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    FUNC            reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    $end            reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)
    END_BRACE       reduce using rule 45 (assign_plus -> ID PLUS EQUALS NUMBER .)


state 124

    (42) decremento -> ID MINUS MINUS SEMICOLON .

    IF              reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    ID              reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    PLUS            reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    MINUS           reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    FOR             reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    FUNC            reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    $end            reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)
    END_BRACE       reduce using rule 42 (decremento -> ID MINUS MINUS SEMICOLON .)


state 125

    (46) assign_minus -> ID MINUS EQUALS NUMBER .

    IF              reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    ID              reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    PLUS            reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    MINUS           reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    FOR             reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    FUNC            reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    $end            reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)
    END_BRACE       reduce using rule 46 (assign_minus -> ID MINUS EQUALS NUMBER .)


state 126

    (47) assign_mult -> ID TIMES EQUALS NUMBER .

    IF              reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    ID              reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    PLUS            reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    MINUS           reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    FOR             reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    FUNC            reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    $end            reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)
    END_BRACE       reduce using rule 47 (assign_mult -> ID TIMES EQUALS NUMBER .)


state 127

    (48) assign_div -> ID DIVISION EQUALS NUMBER .

    IF              reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    ID              reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    PLUS            reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    MINUS           reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    FOR             reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    FUNC            reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    $end            reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)
    END_BRACE       reduce using rule 48 (assign_div -> ID DIVISION EQUALS NUMBER .)


state 128

    (94) atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .

    IF              reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    ID              reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    PLUS            reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    MINUS           reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    FOR             reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    FUNC            reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    $end            reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)
    END_BRACE       reduce using rule 94 (atribuicao -> lista_identificadores EQUALS lista_valores SEMICOLON .)


state 129

    (101) lista_valores -> lista_valores COMMA . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 152
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 130

    (95) declaracao -> lista_identificadores COLON EQUALS lista_valores .
    (96) declaracao -> lista_identificadores COLON EQUALS lista_valores . SEMICOLON
    (101) lista_valores -> lista_valores . COMMA expressao

  ! shift/reduce conflict for SEMICOLON resolved as shift
    IF              reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    ID              reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    PLUS            reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    MINUS           reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    FOR             reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    FUNC            reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    $end            reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    END_BRACE       reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .)
    SEMICOLON       shift and go to state 153
    COMMA           shift and go to state 129

  ! SEMICOLON       [ reduce using rule 95 (declaracao -> lista_identificadores COLON EQUALS lista_valores .) ]


state 131

    (89) estrutura_if -> IF expressao BEG_BRACE codigo . END_BRACE estrutura_else

    END_BRACE       shift and go to state 154


state 132

    (74) and -> expressao AMPERSAND AMPERSAND . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 155
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 133

    (75) or -> expressao PIPE PIPE . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 156
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 134

    (76) equals -> expressao EQUALS EQUALS . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 157
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 135

    (77) different -> expressao EXCLAMATION EQUALS . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 158
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 136

    (78) greater -> expressao GREATER expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 78 (greater -> expressao GREATER expressao .)
    SEMICOLON       reduce using rule 78 (greater -> expressao GREATER expressao .)
    COMMA           reduce using rule 78 (greater -> expressao GREATER expressao .)
    IF              reduce using rule 78 (greater -> expressao GREATER expressao .)
    ID              reduce using rule 78 (greater -> expressao GREATER expressao .)
    PLUS            reduce using rule 78 (greater -> expressao GREATER expressao .)
    MINUS           reduce using rule 78 (greater -> expressao GREATER expressao .)
    FOR             reduce using rule 78 (greater -> expressao GREATER expressao .)
    FUNC            reduce using rule 78 (greater -> expressao GREATER expressao .)
    $end            reduce using rule 78 (greater -> expressao GREATER expressao .)
    END_BRACE       reduce using rule 78 (greater -> expressao GREATER expressao .)
    END_PAREN       reduce using rule 78 (greater -> expressao GREATER expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 78 (greater -> expressao GREATER expressao .) ]
  ! PIPE            [ reduce using rule 78 (greater -> expressao GREATER expressao .) ]
  ! EQUALS          [ reduce using rule 78 (greater -> expressao GREATER expressao .) ]
  ! EXCLAMATION     [ reduce using rule 78 (greater -> expressao GREATER expressao .) ]
  ! GREATER         [ reduce using rule 78 (greater -> expressao GREATER expressao .) ]
  ! LESS            [ reduce using rule 78 (greater -> expressao GREATER expressao .) ]


state 137

    (80) greater_or_equal -> expressao GREATER EQUALS . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 159
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 138

    (79) less -> expressao LESS expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 79 (less -> expressao LESS expressao .)
    SEMICOLON       reduce using rule 79 (less -> expressao LESS expressao .)
    COMMA           reduce using rule 79 (less -> expressao LESS expressao .)
    IF              reduce using rule 79 (less -> expressao LESS expressao .)
    ID              reduce using rule 79 (less -> expressao LESS expressao .)
    PLUS            reduce using rule 79 (less -> expressao LESS expressao .)
    MINUS           reduce using rule 79 (less -> expressao LESS expressao .)
    FOR             reduce using rule 79 (less -> expressao LESS expressao .)
    FUNC            reduce using rule 79 (less -> expressao LESS expressao .)
    $end            reduce using rule 79 (less -> expressao LESS expressao .)
    END_BRACE       reduce using rule 79 (less -> expressao LESS expressao .)
    END_PAREN       reduce using rule 79 (less -> expressao LESS expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 79 (less -> expressao LESS expressao .) ]
  ! PIPE            [ reduce using rule 79 (less -> expressao LESS expressao .) ]
  ! EQUALS          [ reduce using rule 79 (less -> expressao LESS expressao .) ]
  ! EXCLAMATION     [ reduce using rule 79 (less -> expressao LESS expressao .) ]
  ! GREATER         [ reduce using rule 79 (less -> expressao LESS expressao .) ]
  ! LESS            [ reduce using rule 79 (less -> expressao LESS expressao .) ]


state 139

    (81) less_or_equal -> expressao LESS EQUALS . expressao
    (23) expressao -> . expressao_matematica
    (24) expressao -> . expressao_logica
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (63) expressao_logica -> . and
    (64) expressao_logica -> . or
    (65) expressao_logica -> . equals
    (66) expressao_logica -> . different
    (67) expressao_logica -> . greater
    (68) expressao_logica -> . less
    (69) expressao_logica -> . greater_or_equal
    (70) expressao_logica -> . less_or_equal
    (71) expressao_logica -> . negation
    (72) expressao_logica -> . TRUE
    (73) expressao_logica -> . FALSE
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (74) and -> . expressao AMPERSAND AMPERSAND expressao
    (75) or -> . expressao PIPE PIPE expressao
    (76) equals -> . expressao EQUALS EQUALS expressao
    (77) different -> . expressao EXCLAMATION EQUALS expressao
    (78) greater -> . expressao GREATER expressao
    (79) less -> . expressao LESS expressao
    (80) greater_or_equal -> . expressao GREATER EQUALS expressao
    (81) less_or_equal -> . expressao LESS EQUALS expressao
    (82) negation -> . EXCLAMATION expressao
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    EXCLAMATION     shift and go to state 73
    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao                      shift and go to state 160
    expressao_matematica           shift and go to state 53
    expressao_logica               shift and go to state 54
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    and                            shift and go to state 58
    or                             shift and go to state 59
    equals                         shift and go to state 60
    different                      shift and go to state 61
    greater                        shift and go to state 62
    less                           shift and go to state 63
    greater_or_equal               shift and go to state 64
    less_or_equal                  shift and go to state 65
    negation                       shift and go to state 66
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 140

    (28) soma -> expressao_matematica PLUS p_expMatMaiorPresc .
    (34) mult -> p_expMatMaiorPresc . TIMES operando
    (36) div -> p_expMatMaiorPresc . DIVISION operando
    (35) mod -> p_expMatMaiorPresc . MOD operando

    PLUS            reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    MINUS           reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    BEG_BRACE       reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    AMPERSAND       reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    PIPE            reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    EQUALS          reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    EXCLAMATION     reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    GREATER         reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    LESS            reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    SEMICOLON       reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    COMMA           reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    IF              reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    ID              reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    FOR             reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    FUNC            reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    $end            reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    END_BRACE       reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    END_PAREN       reduce using rule 28 (soma -> expressao_matematica PLUS p_expMatMaiorPresc .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 109
    MOD             shift and go to state 110


state 141

    (29) sub -> expressao_matematica MINUS p_expMatMaiorPresc .
    (34) mult -> p_expMatMaiorPresc . TIMES operando
    (36) div -> p_expMatMaiorPresc . DIVISION operando
    (35) mod -> p_expMatMaiorPresc . MOD operando

    PLUS            reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    MINUS           reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    BEG_BRACE       reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    AMPERSAND       reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    PIPE            reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    EQUALS          reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    EXCLAMATION     reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    GREATER         reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    LESS            reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    SEMICOLON       reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    COMMA           reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    IF              reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    ID              reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    FOR             reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    FUNC            reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    $end            reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    END_BRACE       reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    END_PAREN       reduce using rule 29 (sub -> expressao_matematica MINUS p_expMatMaiorPresc .)
    TIMES           shift and go to state 108
    DIVISION        shift and go to state 109
    MOD             shift and go to state 110


state 142

    (34) mult -> p_expMatMaiorPresc TIMES operando .

    TIMES           reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    DIVISION        reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    MOD             reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    PLUS            reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    MINUS           reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    BEG_BRACE       reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    AMPERSAND       reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    PIPE            reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    EQUALS          reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    EXCLAMATION     reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    GREATER         reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    LESS            reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    SEMICOLON       reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    COMMA           reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    IF              reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    ID              reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    FOR             reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    FUNC            reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    $end            reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    END_BRACE       reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)
    END_PAREN       reduce using rule 34 (mult -> p_expMatMaiorPresc TIMES operando .)


state 143

    (36) div -> p_expMatMaiorPresc DIVISION operando .

    TIMES           reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    DIVISION        reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    MOD             reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    PLUS            reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    MINUS           reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    BEG_BRACE       reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    AMPERSAND       reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    PIPE            reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    EQUALS          reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    EXCLAMATION     reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    GREATER         reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    LESS            reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    SEMICOLON       reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    COMMA           reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    IF              reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    ID              reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    FOR             reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    FUNC            reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    $end            reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    END_BRACE       reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)
    END_PAREN       reduce using rule 36 (div -> p_expMatMaiorPresc DIVISION operando .)


state 144

    (35) mod -> p_expMatMaiorPresc MOD operando .

    TIMES           reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    DIVISION        reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    MOD             reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    PLUS            reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    MINUS           reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    BEG_BRACE       reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    AMPERSAND       reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    PIPE            reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    EQUALS          reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    EXCLAMATION     reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    GREATER         reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    LESS            reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    SEMICOLON       reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    COMMA           reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    IF              reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    ID              reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    FOR             reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    FUNC            reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    $end            reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    END_BRACE       reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)
    END_PAREN       reduce using rule 35 (mod -> p_expMatMaiorPresc MOD operando .)


state 145

    (62) expParenteses -> BEG_PAREN expressao END_PAREN .

    TIMES           reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    DIVISION        reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    MOD             reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    PLUS            reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    MINUS           reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    BEG_BRACE       reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    AMPERSAND       reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    PIPE            reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    EQUALS          reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    EXCLAMATION     reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    GREATER         reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    LESS            reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    SEMICOLON       reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    COMMA           reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    IF              reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    ID              reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    FOR             reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    FUNC            reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    $end            reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    END_BRACE       reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)
    END_PAREN       reduce using rule 62 (expParenteses -> BEG_PAREN expressao END_PAREN .)


state 146

    (40) pre_incremento -> PLUS PLUS ID SEMICOLON .

    IF              reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    ID              reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    PLUS            reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    MINUS           reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    FOR             reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    FUNC            reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    $end            reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)
    END_BRACE       reduce using rule 40 (pre_incremento -> PLUS PLUS ID SEMICOLON .)


state 147

    (44) pre_decremento -> MINUS MINUS ID SEMICOLON .

    IF              reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    ID              reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    PLUS            reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    MINUS           reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    FOR             reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    FUNC            reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    $end            reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)
    END_BRACE       reduce using rule 44 (pre_decremento -> MINUS MINUS ID SEMICOLON .)


state 148

    (86) for_CLIKE -> FOR declaracao SEMICOLON expressao . SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

    SEMICOLON       shift and go to state 161
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105


state 149

    (88) for_while -> FOR expressao BEG_BRACE codigo . END_BRACE

    END_BRACE       shift and go to state 162


state 150

    (87) for_infinito -> FOR BEG_BRACE codigo END_BRACE .

    IF              reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    ID              reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    PLUS            reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    MINUS           reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    FOR             reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    FUNC            reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    $end            reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)
    END_BRACE       reduce using rule 87 (for_infinito -> FOR BEG_BRACE codigo END_BRACE .)


state 151

    (9) funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN . tipo_retorno BEG_BRACE codigo END_BRACE
    (10) tipo_retorno -> . ID
    (11) tipo_retorno -> . empty
    (5) empty -> .

    ID              shift and go to state 163
    BEG_BRACE       reduce using rule 5 (empty -> .)

    tipo_retorno                   shift and go to state 164
    empty                          shift and go to state 165

state 152

    (101) lista_valores -> lista_valores COMMA expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

    SEMICOLON       reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    COMMA           reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    IF              reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    ID              reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    PLUS            reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    MINUS           reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    FOR             reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    FUNC            reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    $end            reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    END_BRACE       reduce using rule 101 (lista_valores -> lista_valores COMMA expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105


state 153

    (96) declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .

    IF              reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    ID              reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    PLUS            reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    MINUS           reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    FOR             reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    FUNC            reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    $end            reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    END_BRACE       reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)
    SEMICOLON       reduce using rule 96 (declaracao -> lista_identificadores COLON EQUALS lista_valores SEMICOLON .)


state 154

    (89) estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE . estrutura_else
    (90) estrutura_else -> . ELSE BEG_BRACE codigo END_BRACE
    (91) estrutura_else -> . ELSE estrutura_if
    (92) estrutura_else -> . empty
    (5) empty -> .

    ELSE            shift and go to state 167
    IF              reduce using rule 5 (empty -> .)
    ID              reduce using rule 5 (empty -> .)
    PLUS            reduce using rule 5 (empty -> .)
    MINUS           reduce using rule 5 (empty -> .)
    FOR             reduce using rule 5 (empty -> .)
    FUNC            reduce using rule 5 (empty -> .)
    $end            reduce using rule 5 (empty -> .)
    END_BRACE       reduce using rule 5 (empty -> .)

    estrutura_else                 shift and go to state 166
    empty                          shift and go to state 168

state 155

    (74) and -> expressao AMPERSAND AMPERSAND expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    SEMICOLON       reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    COMMA           reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    IF              reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    ID              reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    PLUS            reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    MINUS           reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    FOR             reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    FUNC            reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    $end            reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    END_BRACE       reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    END_PAREN       reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .) ]
  ! PIPE            [ reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .) ]
  ! EQUALS          [ reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .) ]
  ! EXCLAMATION     [ reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .) ]
  ! GREATER         [ reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .) ]
  ! LESS            [ reduce using rule 74 (and -> expressao AMPERSAND AMPERSAND expressao .) ]


state 156

    (75) or -> expressao PIPE PIPE expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    SEMICOLON       reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    COMMA           reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    IF              reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    ID              reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    PLUS            reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    MINUS           reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    FOR             reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    FUNC            reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    $end            reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    END_BRACE       reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    END_PAREN       reduce using rule 75 (or -> expressao PIPE PIPE expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 75 (or -> expressao PIPE PIPE expressao .) ]
  ! PIPE            [ reduce using rule 75 (or -> expressao PIPE PIPE expressao .) ]
  ! EQUALS          [ reduce using rule 75 (or -> expressao PIPE PIPE expressao .) ]
  ! EXCLAMATION     [ reduce using rule 75 (or -> expressao PIPE PIPE expressao .) ]
  ! GREATER         [ reduce using rule 75 (or -> expressao PIPE PIPE expressao .) ]
  ! LESS            [ reduce using rule 75 (or -> expressao PIPE PIPE expressao .) ]


state 157

    (76) equals -> expressao EQUALS EQUALS expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    SEMICOLON       reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    COMMA           reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    IF              reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    ID              reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    PLUS            reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    MINUS           reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    FOR             reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    FUNC            reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    $end            reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    END_BRACE       reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    END_PAREN       reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .) ]
  ! PIPE            [ reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .) ]
  ! EQUALS          [ reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .) ]
  ! EXCLAMATION     [ reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .) ]
  ! GREATER         [ reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .) ]
  ! LESS            [ reduce using rule 76 (equals -> expressao EQUALS EQUALS expressao .) ]


state 158

    (77) different -> expressao EXCLAMATION EQUALS expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    SEMICOLON       reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    COMMA           reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    IF              reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    ID              reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    PLUS            reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    MINUS           reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    FOR             reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    FUNC            reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    $end            reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    END_BRACE       reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    END_PAREN       reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .) ]
  ! PIPE            [ reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .) ]
  ! EQUALS          [ reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .) ]
  ! EXCLAMATION     [ reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .) ]
  ! GREATER         [ reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .) ]
  ! LESS            [ reduce using rule 77 (different -> expressao EXCLAMATION EQUALS expressao .) ]


state 159

    (80) greater_or_equal -> expressao GREATER EQUALS expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    SEMICOLON       reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    COMMA           reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    IF              reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    ID              reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    PLUS            reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    MINUS           reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    FOR             reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    FUNC            reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    $end            reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    END_BRACE       reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    END_PAREN       reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .) ]
  ! PIPE            [ reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .) ]
  ! EQUALS          [ reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .) ]
  ! EXCLAMATION     [ reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .) ]
  ! GREATER         [ reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .) ]
  ! LESS            [ reduce using rule 80 (greater_or_equal -> expressao GREATER EQUALS expressao .) ]


state 160

    (81) less_or_equal -> expressao LESS EQUALS expressao .
    (74) and -> expressao . AMPERSAND AMPERSAND expressao
    (75) or -> expressao . PIPE PIPE expressao
    (76) equals -> expressao . EQUALS EQUALS expressao
    (77) different -> expressao . EXCLAMATION EQUALS expressao
    (78) greater -> expressao . GREATER expressao
    (79) less -> expressao . LESS expressao
    (80) greater_or_equal -> expressao . GREATER EQUALS expressao
    (81) less_or_equal -> expressao . LESS EQUALS expressao

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    BEG_BRACE       reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    SEMICOLON       reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    COMMA           reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    IF              reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    ID              reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    PLUS            reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    MINUS           reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    FOR             reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    FUNC            reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    $end            reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    END_BRACE       reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    END_PAREN       reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .)
    AMPERSAND       shift and go to state 100
    PIPE            shift and go to state 101
    EQUALS          shift and go to state 102
    EXCLAMATION     shift and go to state 103
    GREATER         shift and go to state 104
    LESS            shift and go to state 105

  ! AMPERSAND       [ reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .) ]
  ! PIPE            [ reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .) ]
  ! EQUALS          [ reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .) ]
  ! EXCLAMATION     [ reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .) ]
  ! GREATER         [ reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .) ]
  ! LESS            [ reduce using rule 81 (less_or_equal -> expressao LESS EQUALS expressao .) ]


state 161

    (86) for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON . expressao_matematica BEG_BRACE codigo END_BRACE
    (25) expressao_matematica -> . soma
    (26) expressao_matematica -> . sub
    (27) expressao_matematica -> . p_expMatMaiorPresc
    (28) soma -> . expressao_matematica PLUS p_expMatMaiorPresc
    (29) sub -> . expressao_matematica MINUS p_expMatMaiorPresc
    (30) p_expMatMaiorPresc -> . mult
    (31) p_expMatMaiorPresc -> . div
    (32) p_expMatMaiorPresc -> . mod
    (33) p_expMatMaiorPresc -> . operando
    (34) mult -> . p_expMatMaiorPresc TIMES operando
    (36) div -> . p_expMatMaiorPresc DIVISION operando
    (35) mod -> . p_expMatMaiorPresc MOD operando
    (57) operando -> . identificador
    (58) operando -> . NUMBER
    (59) operando -> . STRING
    (60) operando -> . expParenteses
    (61) identificador -> . ID
    (62) expParenteses -> . BEG_PAREN expressao END_PAREN

    NUMBER          shift and go to state 75
    STRING          shift and go to state 76
    ID              shift and go to state 78
    BEG_PAREN       shift and go to state 79

    expressao_matematica           shift and go to state 169
    soma                           shift and go to state 55
    sub                            shift and go to state 56
    p_expMatMaiorPresc             shift and go to state 57
    mult                           shift and go to state 69
    div                            shift and go to state 70
    mod                            shift and go to state 71
    operando                       shift and go to state 72
    identificador                  shift and go to state 74
    expParenteses                  shift and go to state 77

state 162

    (88) for_while -> FOR expressao BEG_BRACE codigo END_BRACE .

    IF              reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    ID              reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    PLUS            reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    MINUS           reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    FOR             reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    FUNC            reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    $end            reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)
    END_BRACE       reduce using rule 88 (for_while -> FOR expressao BEG_BRACE codigo END_BRACE .)


state 163

    (10) tipo_retorno -> ID .

    BEG_BRACE       reduce using rule 10 (tipo_retorno -> ID .)


state 164

    (9) funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno . BEG_BRACE codigo END_BRACE

    BEG_BRACE       shift and go to state 170


state 165

    (11) tipo_retorno -> empty .

    BEG_BRACE       reduce using rule 11 (tipo_retorno -> empty .)


state 166

    (89) estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .

    IF              reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    ID              reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    PLUS            reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    MINUS           reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    FOR             reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    FUNC            reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    $end            reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)
    END_BRACE       reduce using rule 89 (estrutura_if -> IF expressao BEG_BRACE codigo END_BRACE estrutura_else .)


state 167

    (90) estrutura_else -> ELSE . BEG_BRACE codigo END_BRACE
    (91) estrutura_else -> ELSE . estrutura_if
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else

    BEG_BRACE       shift and go to state 171
    IF              shift and go to state 28

    estrutura_if                   shift and go to state 172

state 168

    (92) estrutura_else -> empty .

    IF              reduce using rule 92 (estrutura_else -> empty .)
    ID              reduce using rule 92 (estrutura_else -> empty .)
    PLUS            reduce using rule 92 (estrutura_else -> empty .)
    MINUS           reduce using rule 92 (estrutura_else -> empty .)
    FOR             reduce using rule 92 (estrutura_else -> empty .)
    FUNC            reduce using rule 92 (estrutura_else -> empty .)
    $end            reduce using rule 92 (estrutura_else -> empty .)
    END_BRACE       reduce using rule 92 (estrutura_else -> empty .)


state 169

    (86) for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica . BEG_BRACE codigo END_BRACE
    (28) soma -> expressao_matematica . PLUS p_expMatMaiorPresc
    (29) sub -> expressao_matematica . MINUS p_expMatMaiorPresc

    BEG_BRACE       shift and go to state 173
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107


state 170

    (9) funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE . codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

    IF              shift and go to state 28
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

    codigo                         shift and go to state 174
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 171

    (90) estrutura_else -> ELSE BEG_BRACE . codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

    IF              shift and go to state 28
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

    codigo                         shift and go to state 175
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    declaracao                     shift and go to state 16
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 172

    (91) estrutura_else -> ELSE estrutura_if .

    IF              reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    ID              reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    PLUS            reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    MINUS           reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    FOR             reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    FUNC            reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    $end            reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)
    END_BRACE       reduce using rule 91 (estrutura_else -> ELSE estrutura_if .)


state 173

    (86) for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE . codigo END_BRACE
    (12) codigo -> . expressao_matematica_reduzida codigo
    (13) codigo -> . atribuicao codigo
    (14) codigo -> . declaracao codigo
    (15) codigo -> . estrutura_if codigo
    (16) codigo -> . estrutura_for codigo
    (17) codigo -> . empty
    (49) expressao_matematica_reduzida -> . assign_plus
    (50) expressao_matematica_reduzida -> . assign_minus
    (51) expressao_matematica_reduzida -> . assign_mult
    (52) expressao_matematica_reduzida -> . assign_div
    (53) expressao_matematica_reduzida -> . incremento
    (54) expressao_matematica_reduzida -> . pre_incremento
    (55) expressao_matematica_reduzida -> . decremento
    (56) expressao_matematica_reduzida -> . pre_decremento
    (93) atribuicao -> . lista_identificadores EQUALS lista_valores
    (94) atribuicao -> . lista_identificadores EQUALS lista_valores SEMICOLON
    (95) declaracao -> . lista_identificadores COLON EQUALS lista_valores
    (96) declaracao -> . lista_identificadores COLON EQUALS lista_valores SEMICOLON
    (89) estrutura_if -> . IF expressao BEG_BRACE codigo END_BRACE estrutura_else
    (83) estrutura_for -> . for_CLIKE
    (84) estrutura_for -> . for_infinito
    (85) estrutura_for -> . for_while
    (5) empty -> .
    (45) assign_plus -> . ID PLUS EQUALS NUMBER
    (46) assign_minus -> . ID MINUS EQUALS NUMBER
    (47) assign_mult -> . ID TIMES EQUALS NUMBER
    (48) assign_div -> . ID DIVISION EQUALS NUMBER
    (37) incremento -> . ID PLUS PLUS
    (38) incremento -> . ID PLUS PLUS SEMICOLON
    (39) pre_incremento -> . PLUS PLUS ID
    (40) pre_incremento -> . PLUS PLUS ID SEMICOLON
    (41) decremento -> . ID MINUS MINUS
    (42) decremento -> . ID MINUS MINUS SEMICOLON
    (43) pre_decremento -> . MINUS MINUS ID
    (44) pre_decremento -> . MINUS MINUS ID SEMICOLON
    (99) lista_identificadores -> . lista_identificadores COMMA ID
    (100) lista_identificadores -> . ID
    (86) for_CLIKE -> . FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE
    (87) for_infinito -> . FOR BEG_BRACE codigo END_BRACE
    (88) for_while -> . FOR expressao BEG_BRACE codigo END_BRACE

    IF              shift and go to state 28
    END_BRACE       reduce using rule 5 (empty -> .)
    ID              shift and go to state 13
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    FOR             shift and go to state 34

    declaracao                     shift and go to state 16
    codigo                         shift and go to state 176
    expressao_matematica_reduzida  shift and go to state 14
    atribuicao                     shift and go to state 15
    estrutura_if                   shift and go to state 17
    estrutura_for                  shift and go to state 18
    empty                          shift and go to state 44
    assign_plus                    shift and go to state 19
    assign_minus                   shift and go to state 20
    assign_mult                    shift and go to state 21
    assign_div                     shift and go to state 22
    incremento                     shift and go to state 23
    pre_incremento                 shift and go to state 24
    decremento                     shift and go to state 25
    pre_decremento                 shift and go to state 26
    lista_identificadores          shift and go to state 27
    for_CLIKE                      shift and go to state 29
    for_infinito                   shift and go to state 30
    for_while                      shift and go to state 31

state 174

    (9) funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo . END_BRACE

    END_BRACE       shift and go to state 177


state 175

    (90) estrutura_else -> ELSE BEG_BRACE codigo . END_BRACE

    END_BRACE       shift and go to state 178


state 176

    (86) for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo . END_BRACE

    END_BRACE       shift and go to state 179


state 177

    (9) funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .

    FUNC            reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)
    IF              reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)
    ID              reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)
    PLUS            reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)
    MINUS           reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)
    FOR             reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)
    $end            reduce using rule 9 (funcao -> FUNC ID BEG_PAREN lista_parametros END_PAREN tipo_retorno BEG_BRACE codigo END_BRACE .)


state 178

    (90) estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .

    IF              reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    ID              reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    PLUS            reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    MINUS           reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    FOR             reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    FUNC            reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    $end            reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)
    END_BRACE       reduce using rule 90 (estrutura_else -> ELSE BEG_BRACE codigo END_BRACE .)


state 179

    (86) for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .

    IF              reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    ID              reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    PLUS            reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    MINUS           reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    FOR             reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    FUNC            reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    $end            reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)
    END_BRACE       reduce using rule 86 (for_CLIKE -> FOR declaracao SEMICOLON expressao SEMICOLON expressao_matematica BEG_BRACE codigo END_BRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for FOR in state 9 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 10 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for FOR in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for FOR in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for FOR in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for ID in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 111 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 111 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 111 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 111 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 111 resolved as shift
WARNING: shift/reduce conflict for LESS in state 111 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 130 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 136 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 136 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 136 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 136 resolved as shift
WARNING: shift/reduce conflict for LESS in state 136 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 138 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 138 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 138 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 138 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 138 resolved as shift
WARNING: shift/reduce conflict for LESS in state 138 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 155 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 155 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 155 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 155 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 155 resolved as shift
WARNING: shift/reduce conflict for LESS in state 155 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 156 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 156 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 156 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 156 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 156 resolved as shift
WARNING: shift/reduce conflict for LESS in state 156 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 157 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 157 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 157 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 157 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 157 resolved as shift
WARNING: shift/reduce conflict for LESS in state 157 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 158 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 158 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 158 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 158 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 158 resolved as shift
WARNING: shift/reduce conflict for LESS in state 158 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 159 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 159 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 159 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 159 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 159 resolved as shift
WARNING: shift/reduce conflict for LESS in state 159 resolved as shift
WARNING: shift/reduce conflict for AMPERSAND in state 160 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 160 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 160 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 160 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 160 resolved as shift
WARNING: shift/reduce conflict for LESS in state 160 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (funcoes_codigo -> empty)
WARNING: rejected rule (codigo -> empty) in state 11
